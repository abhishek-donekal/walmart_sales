{"metadata":{"kernelspec":{"language":"python","display_name":"Python 3","name":"python3"},"language_info":{"name":"python","version":"3.7.12","mimetype":"text/x-python","codemirror_mode":{"name":"ipython","version":3},"pygments_lexer":"ipython3","nbconvert_exporter":"python","file_extension":".py"},"kaggle":{"accelerator":"gpu","dataSources":[{"sourceId":270,"sourceType":"datasetVersion","datasetId":128},{"sourceId":348,"sourceType":"datasetVersion","datasetId":166},{"sourceId":3097,"sourceType":"datasetVersion","datasetId":1789},{"sourceId":3724,"sourceType":"datasetVersion","datasetId":2208},{"sourceId":7703,"sourceType":"datasetVersion","datasetId":5098},{"sourceId":11952,"sourceType":"datasetVersion","datasetId":8538},{"sourceId":451952,"sourceType":"datasetVersion","datasetId":205965},{"sourceId":1871199,"sourceType":"datasetVersion","datasetId":1113976},{"sourceId":2746241,"sourceType":"datasetVersion","datasetId":1674428},{"sourceId":2970526,"sourceType":"datasetVersion","datasetId":1820993},{"sourceId":3502310,"sourceType":"datasetVersion","datasetId":2107830}],"dockerImageVersionId":30177,"isInternetEnabled":true,"language":"python","sourceType":"notebook","isGpuEnabled":true}},"nbformat_minor":4,"nbformat":4,"cells":[{"cell_type":"markdown","source":"# Background","metadata":{}},{"cell_type":"markdown","source":"Walmart is a renowned retail corporation that operates a chain of hypermarkets. Here, Walmart has provided a data combining of 45 stores including store information and monthly sales. The data is provided on weekly basis. Walmart tries to find the impact of holidays on the sales of store. For which it has included four holidays’ weeks into the dataset which are Christmas, Thanksgiving, Super bowl, Labor Day. Here we are owing to Analyze the dataset given. Before doing that, let me point out the objective of this analysis. ","metadata":{}},{"cell_type":"markdown","source":"# Business Objectives","metadata":{}},{"cell_type":"markdown","source":"Our Main Objective is to predict sales of store in a week. As in dataset size and time related data are given as feature, so analyze if sales are impacted by time-based factors and space- based factor. Most importantly how inclusion of holidays in a week soars the sales in store? ","metadata":{}},{"cell_type":"markdown","source":"# Importing Necessary Libraries and Data","metadata":{}},{"cell_type":"code","source":"import numpy as np      # To use np.arrays\nimport pandas as pd     # To use dataframes\nfrom pandas.plotting import autocorrelation_plot as auto_corr\n\n# To plot\nimport matplotlib.pyplot as plt  \n%matplotlib inline    \nimport matplotlib as mpl\nimport seaborn as sns\n\n#For date-time\nimport math\nfrom datetime import datetime\nfrom datetime import timedelta\n\n# Another imports if needs\nimport itertools\nimport statsmodels.api as sm\nimport statsmodels.tsa.api as smt\nimport statsmodels.formula.api as smf\n\nfrom sklearn.model_selection import train_test_split\nfrom statsmodels.tsa.seasonal import seasonal_decompose as season\nfrom sklearn.metrics import mean_squared_error, mean_absolute_error\nfrom sklearn.metrics import accuracy_score, balanced_accuracy_score\nfrom sklearn.model_selection import cross_val_score\nfrom sklearn.pipeline import make_pipeline, Pipeline\nfrom sklearn.ensemble import RandomForestRegressor\nfrom sklearn import metrics\nfrom sklearn.linear_model import LinearRegression \nfrom sklearn import preprocessing\n\nfrom statsmodels.tsa.holtwinters import ExponentialSmoothing\nfrom statsmodels.tsa.stattools import adfuller, acf, pacf\nfrom statsmodels.tsa.arima_model import ARIMA\n!pip install pmdarima\nfrom pmdarima.utils import decomposed_plot\nfrom pmdarima.arima import decompose\nfrom pmdarima import auto_arima\n\n\nimport warnings\nwarnings.filterwarnings(\"ignore\")\n\n","metadata":{"execution":{"iopub.status.busy":"2024-05-11T22:47:14.218302Z","iopub.execute_input":"2024-05-11T22:47:14.218950Z","iopub.status.idle":"2024-05-11T22:47:37.516630Z","shell.execute_reply.started":"2024-05-11T22:47:14.218856Z","shell.execute_reply":"2024-05-11T22:47:37.515744Z"},"trusted":true},"execution_count":1,"outputs":[{"name":"stdout","text":"Collecting pmdarima\n  Downloading pmdarima-2.0.4-cp37-cp37m-manylinux_2_17_x86_64.manylinux2014_x86_64.manylinux_2_28_x86_64.whl (2.0 MB)\n     |████████████████████████████████| 2.0 MB 7.3 MB/s            \n\u001b[?25hRequirement already satisfied: setuptools!=50.0.0,>=38.6.0 in /opt/conda/lib/python3.7/site-packages (from pmdarima) (59.5.0)\nCollecting statsmodels>=0.13.2\n  Downloading statsmodels-0.13.5-cp37-cp37m-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (9.9 MB)\n     |████████████████████████████████| 9.9 MB 50.5 MB/s            \n\u001b[?25hRequirement already satisfied: urllib3 in /opt/conda/lib/python3.7/site-packages (from pmdarima) (1.26.7)\nRequirement already satisfied: joblib>=0.11 in /opt/conda/lib/python3.7/site-packages (from pmdarima) (1.1.0)\nRequirement already satisfied: scipy>=1.3.2 in /opt/conda/lib/python3.7/site-packages (from pmdarima) (1.7.3)\nRequirement already satisfied: scikit-learn>=0.22 in /opt/conda/lib/python3.7/site-packages (from pmdarima) (1.0.1)\nCollecting numpy>=1.21.2\n  Downloading numpy-1.21.6-cp37-cp37m-manylinux_2_12_x86_64.manylinux2010_x86_64.whl (15.7 MB)\n     |████████████████████████████████| 15.7 MB 79.7 MB/s            \n\u001b[?25hRequirement already satisfied: Cython!=0.29.18,!=0.29.31,>=0.29 in /opt/conda/lib/python3.7/site-packages (from pmdarima) (0.29.28)\nRequirement already satisfied: packaging>=17.1 in /opt/conda/lib/python3.7/site-packages (from pmdarima) (21.3)\nRequirement already satisfied: pandas>=0.19 in /opt/conda/lib/python3.7/site-packages (from pmdarima) (1.3.5)\nRequirement already satisfied: pyparsing!=3.0.5,>=2.0.2 in /opt/conda/lib/python3.7/site-packages (from packaging>=17.1->pmdarima) (3.0.6)\nRequirement already satisfied: python-dateutil>=2.7.3 in /opt/conda/lib/python3.7/site-packages (from pandas>=0.19->pmdarima) (2.8.2)\nRequirement already satisfied: pytz>=2017.3 in /opt/conda/lib/python3.7/site-packages (from pandas>=0.19->pmdarima) (2021.3)\nRequirement already satisfied: threadpoolctl>=2.0.0 in /opt/conda/lib/python3.7/site-packages (from scikit-learn>=0.22->pmdarima) (3.0.0)\nRequirement already satisfied: patsy>=0.5.2 in /opt/conda/lib/python3.7/site-packages (from statsmodels>=0.13.2->pmdarima) (0.5.2)\nRequirement already satisfied: six in /opt/conda/lib/python3.7/site-packages (from patsy>=0.5.2->statsmodels>=0.13.2->pmdarima) (1.16.0)\nInstalling collected packages: numpy, statsmodels, pmdarima\n  Attempting uninstall: numpy\n    Found existing installation: numpy 1.20.3\n    Uninstalling numpy-1.20.3:\n      Successfully uninstalled numpy-1.20.3\n  Attempting uninstall: statsmodels\n    Found existing installation: statsmodels 0.13.1\n    Uninstalling statsmodels-0.13.1:\n      Successfully uninstalled statsmodels-0.13.1\n\u001b[31mERROR: pip's dependency resolver does not currently take into account all the packages that are installed. This behaviour is the source of the following dependency conflicts.\ntensorflow-io 0.21.0 requires tensorflow-io-gcs-filesystem==0.21.0, which is not installed.\nexplainable-ai-sdk 1.3.2 requires xai-image-widget, which is not installed.\ndask-cudf 21.10.1 requires cupy-cuda114, which is not installed.\nbeatrix-jupyterlab 3.1.6 requires google-cloud-bigquery-storage, which is not installed.\nthinc 8.0.15 requires typing-extensions<4.0.0.0,>=3.7.4.1; python_version < \"3.8\", but you have typing-extensions 4.1.1 which is incompatible.\ntfx-bsl 1.5.0 requires absl-py<0.13,>=0.9, but you have absl-py 0.15.0 which is incompatible.\ntfx-bsl 1.5.0 requires numpy<1.20,>=1.16, but you have numpy 1.21.6 which is incompatible.\ntfx-bsl 1.5.0 requires pyarrow<6,>=1, but you have pyarrow 6.0.1 which is incompatible.\ntfx-bsl 1.5.0 requires tensorflow!=2.0.*,!=2.1.*,!=2.2.*,!=2.3.*,!=2.4.*,!=2.5.*,!=2.6.*,<3,>=1.15.2, but you have tensorflow 2.6.2 which is incompatible.\ntensorflow 2.6.2 requires numpy~=1.19.2, but you have numpy 1.21.6 which is incompatible.\ntensorflow 2.6.2 requires six~=1.15.0, but you have six 1.16.0 which is incompatible.\ntensorflow 2.6.2 requires typing-extensions~=3.7.4, but you have typing-extensions 4.1.1 which is incompatible.\ntensorflow 2.6.2 requires wrapt~=1.12.1, but you have wrapt 1.13.3 which is incompatible.\ntensorflow-transform 1.5.0 requires absl-py<0.13,>=0.9, but you have absl-py 0.15.0 which is incompatible.\ntensorflow-transform 1.5.0 requires numpy<1.20,>=1.16, but you have numpy 1.21.6 which is incompatible.\ntensorflow-transform 1.5.0 requires pyarrow<6,>=1, but you have pyarrow 6.0.1 which is incompatible.\ntensorflow-transform 1.5.0 requires tensorflow!=2.0.*,!=2.1.*,!=2.2.*,!=2.3.*,!=2.4.*,!=2.5.*,!=2.6.*,<2.8,>=1.15.2, but you have tensorflow 2.6.2 which is incompatible.\ntensorflow-serving-api 2.7.0 requires tensorflow<3,>=2.7.0, but you have tensorflow 2.6.2 which is incompatible.\nspacy 3.2.3 requires typing-extensions<4.0.0.0,>=3.7.4; python_version < \"3.8\", but you have typing-extensions 4.1.1 which is incompatible.\npdpbox 0.2.1 requires matplotlib==3.1.1, but you have matplotlib 3.5.1 which is incompatible.\nnumba 0.54.1 requires numpy<1.21,>=1.17, but you have numpy 1.21.6 which is incompatible.\ndask-cudf 21.10.1 requires dask==2021.09.1, but you have dask 2022.2.0 which is incompatible.\ndask-cudf 21.10.1 requires distributed==2021.09.1, but you have distributed 2022.2.0 which is incompatible.\narviz 0.11.4 requires typing-extensions<4,>=3.7.4.3, but you have typing-extensions 4.1.1 which is incompatible.\napache-beam 2.34.0 requires dill<0.3.2,>=0.3.1.1, but you have dill 0.3.4 which is incompatible.\napache-beam 2.34.0 requires httplib2<0.20.0,>=0.8, but you have httplib2 0.20.2 which is incompatible.\napache-beam 2.34.0 requires numpy<1.21.0,>=1.14.3, but you have numpy 1.21.6 which is incompatible.\napache-beam 2.34.0 requires pyarrow<6.0.0,>=0.15.1, but you have pyarrow 6.0.1 which is incompatible.\napache-beam 2.34.0 requires typing-extensions<4,>=3.7.0, but you have typing-extensions 4.1.1 which is incompatible.\u001b[0m\nSuccessfully installed numpy-1.21.6 pmdarima-2.0.4 statsmodels-0.13.5\n\u001b[33mWARNING: Running pip as the 'root' user can result in broken permissions and conflicting behaviour with the system package manager. It is recommended to use a virtual environment instead: https://pip.pypa.io/warnings/venv\u001b[0m\n","output_type":"stream"}]},{"cell_type":"code","source":"pd.options.display.max_columns=100 # to see columns ","metadata":{"execution":{"iopub.status.busy":"2024-05-11T22:47:37.518503Z","iopub.execute_input":"2024-05-11T22:47:37.518744Z","iopub.status.idle":"2024-05-11T22:47:37.523427Z","shell.execute_reply.started":"2024-05-11T22:47:37.518715Z","shell.execute_reply":"2024-05-11T22:47:37.522645Z"},"trusted":true},"execution_count":2,"outputs":[]},{"cell_type":"code","source":"df_store = pd.read_csv('../input/walmart-sales-forecast/stores.csv') #store data","metadata":{"execution":{"iopub.status.busy":"2024-05-11T22:47:37.524557Z","iopub.execute_input":"2024-05-11T22:47:37.524957Z","iopub.status.idle":"2024-05-11T22:47:37.549447Z","shell.execute_reply.started":"2024-05-11T22:47:37.524928Z","shell.execute_reply":"2024-05-11T22:47:37.548845Z"},"trusted":true},"execution_count":3,"outputs":[]},{"cell_type":"code","source":"df_train = pd.read_csv('../input/walmart-sales-forecast/train.csv') # train set","metadata":{"execution":{"iopub.status.busy":"2024-05-11T22:47:37.551113Z","iopub.execute_input":"2024-05-11T22:47:37.551329Z","iopub.status.idle":"2024-05-11T22:47:37.890214Z","shell.execute_reply.started":"2024-05-11T22:47:37.551299Z","shell.execute_reply":"2024-05-11T22:47:37.889467Z"},"trusted":true},"execution_count":4,"outputs":[]},{"cell_type":"code","source":"df_features = pd.read_csv('../input/walmart-sales-forecast/features.csv') #external information","metadata":{"execution":{"iopub.status.busy":"2024-05-11T22:47:37.891345Z","iopub.execute_input":"2024-05-11T22:47:37.891616Z","iopub.status.idle":"2024-05-11T22:47:37.920487Z","shell.execute_reply.started":"2024-05-11T22:47:37.891580Z","shell.execute_reply":"2024-05-11T22:47:37.919779Z"},"trusted":true},"execution_count":5,"outputs":[]},{"cell_type":"markdown","source":"# First Look to Data and Merging Three Dataframes","metadata":{}},{"cell_type":"code","source":"df_store.head()","metadata":{"execution":{"iopub.status.busy":"2024-05-11T22:47:37.921627Z","iopub.execute_input":"2024-05-11T22:47:37.921917Z","iopub.status.idle":"2024-05-11T22:47:37.940504Z","shell.execute_reply.started":"2024-05-11T22:47:37.921877Z","shell.execute_reply":"2024-05-11T22:47:37.939631Z"},"trusted":true},"execution_count":6,"outputs":[{"execution_count":6,"output_type":"execute_result","data":{"text/plain":"   Store Type    Size\n0      1    A  151315\n1      2    A  202307\n2      3    B   37392\n3      4    A  205863\n4      5    B   34875","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>Store</th>\n      <th>Type</th>\n      <th>Size</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>1</td>\n      <td>A</td>\n      <td>151315</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>2</td>\n      <td>A</td>\n      <td>202307</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>3</td>\n      <td>B</td>\n      <td>37392</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>4</td>\n      <td>A</td>\n      <td>205863</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>5</td>\n      <td>B</td>\n      <td>34875</td>\n    </tr>\n  </tbody>\n</table>\n</div>"},"metadata":{}}]},{"cell_type":"code","source":"df_train.head()","metadata":{"execution":{"iopub.status.busy":"2024-05-11T22:47:37.941407Z","iopub.execute_input":"2024-05-11T22:47:37.941622Z","iopub.status.idle":"2024-05-11T22:47:37.952182Z","shell.execute_reply.started":"2024-05-11T22:47:37.941596Z","shell.execute_reply":"2024-05-11T22:47:37.951486Z"},"trusted":true},"execution_count":7,"outputs":[{"execution_count":7,"output_type":"execute_result","data":{"text/plain":"   Store  Dept        Date  Weekly_Sales  IsHoliday\n0      1     1  2010-02-05      24924.50      False\n1      1     1  2010-02-12      46039.49       True\n2      1     1  2010-02-19      41595.55      False\n3      1     1  2010-02-26      19403.54      False\n4      1     1  2010-03-05      21827.90      False","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>Store</th>\n      <th>Dept</th>\n      <th>Date</th>\n      <th>Weekly_Sales</th>\n      <th>IsHoliday</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>1</td>\n      <td>1</td>\n      <td>2010-02-05</td>\n      <td>24924.50</td>\n      <td>False</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>1</td>\n      <td>1</td>\n      <td>2010-02-12</td>\n      <td>46039.49</td>\n      <td>True</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>1</td>\n      <td>1</td>\n      <td>2010-02-19</td>\n      <td>41595.55</td>\n      <td>False</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>1</td>\n      <td>1</td>\n      <td>2010-02-26</td>\n      <td>19403.54</td>\n      <td>False</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>1</td>\n      <td>1</td>\n      <td>2010-03-05</td>\n      <td>21827.90</td>\n      <td>False</td>\n    </tr>\n  </tbody>\n</table>\n</div>"},"metadata":{}}]},{"cell_type":"code","source":"df_features.head()","metadata":{"execution":{"iopub.status.busy":"2024-05-11T22:47:37.953292Z","iopub.execute_input":"2024-05-11T22:47:37.953847Z","iopub.status.idle":"2024-05-11T22:47:37.973177Z","shell.execute_reply.started":"2024-05-11T22:47:37.953785Z","shell.execute_reply":"2024-05-11T22:47:37.972464Z"},"trusted":true},"execution_count":8,"outputs":[{"execution_count":8,"output_type":"execute_result","data":{"text/plain":"   Store        Date  Temperature  Fuel_Price  MarkDown1  MarkDown2  \\\n0      1  2010-02-05        42.31       2.572        NaN        NaN   \n1      1  2010-02-12        38.51       2.548        NaN        NaN   \n2      1  2010-02-19        39.93       2.514        NaN        NaN   \n3      1  2010-02-26        46.63       2.561        NaN        NaN   \n4      1  2010-03-05        46.50       2.625        NaN        NaN   \n\n   MarkDown3  MarkDown4  MarkDown5         CPI  Unemployment  IsHoliday  \n0        NaN        NaN        NaN  211.096358         8.106      False  \n1        NaN        NaN        NaN  211.242170         8.106       True  \n2        NaN        NaN        NaN  211.289143         8.106      False  \n3        NaN        NaN        NaN  211.319643         8.106      False  \n4        NaN        NaN        NaN  211.350143         8.106      False  ","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>Store</th>\n      <th>Date</th>\n      <th>Temperature</th>\n      <th>Fuel_Price</th>\n      <th>MarkDown1</th>\n      <th>MarkDown2</th>\n      <th>MarkDown3</th>\n      <th>MarkDown4</th>\n      <th>MarkDown5</th>\n      <th>CPI</th>\n      <th>Unemployment</th>\n      <th>IsHoliday</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>1</td>\n      <td>2010-02-05</td>\n      <td>42.31</td>\n      <td>2.572</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>211.096358</td>\n      <td>8.106</td>\n      <td>False</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>1</td>\n      <td>2010-02-12</td>\n      <td>38.51</td>\n      <td>2.548</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>211.242170</td>\n      <td>8.106</td>\n      <td>True</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>1</td>\n      <td>2010-02-19</td>\n      <td>39.93</td>\n      <td>2.514</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>211.289143</td>\n      <td>8.106</td>\n      <td>False</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>1</td>\n      <td>2010-02-26</td>\n      <td>46.63</td>\n      <td>2.561</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>211.319643</td>\n      <td>8.106</td>\n      <td>False</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>1</td>\n      <td>2010-03-05</td>\n      <td>46.50</td>\n      <td>2.625</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>211.350143</td>\n      <td>8.106</td>\n      <td>False</td>\n    </tr>\n  </tbody>\n</table>\n</div>"},"metadata":{}}]},{"cell_type":"code","source":"# merging 3 different sets\ndf = df_train.merge(df_features, on=['Store', 'Date'], how='inner').merge(df_store, on=['Store'], how='inner')\ndf.head(5)","metadata":{"execution":{"iopub.status.busy":"2024-05-11T22:47:37.974179Z","iopub.execute_input":"2024-05-11T22:47:37.974404Z","iopub.status.idle":"2024-05-11T22:47:38.214502Z","shell.execute_reply.started":"2024-05-11T22:47:37.974377Z","shell.execute_reply":"2024-05-11T22:47:38.213761Z"},"trusted":true},"execution_count":9,"outputs":[{"execution_count":9,"output_type":"execute_result","data":{"text/plain":"   Store  Dept        Date  Weekly_Sales  IsHoliday_x  Temperature  \\\n0      1     1  2010-02-05      24924.50        False        42.31   \n1      1     2  2010-02-05      50605.27        False        42.31   \n2      1     3  2010-02-05      13740.12        False        42.31   \n3      1     4  2010-02-05      39954.04        False        42.31   \n4      1     5  2010-02-05      32229.38        False        42.31   \n\n   Fuel_Price  MarkDown1  MarkDown2  MarkDown3  MarkDown4  MarkDown5  \\\n0       2.572        NaN        NaN        NaN        NaN        NaN   \n1       2.572        NaN        NaN        NaN        NaN        NaN   \n2       2.572        NaN        NaN        NaN        NaN        NaN   \n3       2.572        NaN        NaN        NaN        NaN        NaN   \n4       2.572        NaN        NaN        NaN        NaN        NaN   \n\n          CPI  Unemployment  IsHoliday_y Type    Size  \n0  211.096358         8.106        False    A  151315  \n1  211.096358         8.106        False    A  151315  \n2  211.096358         8.106        False    A  151315  \n3  211.096358         8.106        False    A  151315  \n4  211.096358         8.106        False    A  151315  ","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>Store</th>\n      <th>Dept</th>\n      <th>Date</th>\n      <th>Weekly_Sales</th>\n      <th>IsHoliday_x</th>\n      <th>Temperature</th>\n      <th>Fuel_Price</th>\n      <th>MarkDown1</th>\n      <th>MarkDown2</th>\n      <th>MarkDown3</th>\n      <th>MarkDown4</th>\n      <th>MarkDown5</th>\n      <th>CPI</th>\n      <th>Unemployment</th>\n      <th>IsHoliday_y</th>\n      <th>Type</th>\n      <th>Size</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>1</td>\n      <td>1</td>\n      <td>2010-02-05</td>\n      <td>24924.50</td>\n      <td>False</td>\n      <td>42.31</td>\n      <td>2.572</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>211.096358</td>\n      <td>8.106</td>\n      <td>False</td>\n      <td>A</td>\n      <td>151315</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>1</td>\n      <td>2</td>\n      <td>2010-02-05</td>\n      <td>50605.27</td>\n      <td>False</td>\n      <td>42.31</td>\n      <td>2.572</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>211.096358</td>\n      <td>8.106</td>\n      <td>False</td>\n      <td>A</td>\n      <td>151315</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>1</td>\n      <td>3</td>\n      <td>2010-02-05</td>\n      <td>13740.12</td>\n      <td>False</td>\n      <td>42.31</td>\n      <td>2.572</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>211.096358</td>\n      <td>8.106</td>\n      <td>False</td>\n      <td>A</td>\n      <td>151315</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>1</td>\n      <td>4</td>\n      <td>2010-02-05</td>\n      <td>39954.04</td>\n      <td>False</td>\n      <td>42.31</td>\n      <td>2.572</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>211.096358</td>\n      <td>8.106</td>\n      <td>False</td>\n      <td>A</td>\n      <td>151315</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>1</td>\n      <td>5</td>\n      <td>2010-02-05</td>\n      <td>32229.38</td>\n      <td>False</td>\n      <td>42.31</td>\n      <td>2.572</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>211.096358</td>\n      <td>8.106</td>\n      <td>False</td>\n      <td>A</td>\n      <td>151315</td>\n    </tr>\n  </tbody>\n</table>\n</div>"},"metadata":{}}]},{"cell_type":"code","source":"df","metadata":{"execution":{"iopub.status.busy":"2024-05-11T22:47:38.217079Z","iopub.execute_input":"2024-05-11T22:47:38.217301Z","iopub.status.idle":"2024-05-11T22:47:38.248728Z","shell.execute_reply.started":"2024-05-11T22:47:38.217274Z","shell.execute_reply":"2024-05-11T22:47:38.248041Z"},"trusted":true},"execution_count":10,"outputs":[{"execution_count":10,"output_type":"execute_result","data":{"text/plain":"        Store  Dept        Date  Weekly_Sales  IsHoliday_x  Temperature  \\\n0           1     1  2010-02-05      24924.50        False        42.31   \n1           1     2  2010-02-05      50605.27        False        42.31   \n2           1     3  2010-02-05      13740.12        False        42.31   \n3           1     4  2010-02-05      39954.04        False        42.31   \n4           1     5  2010-02-05      32229.38        False        42.31   \n...       ...   ...         ...           ...          ...          ...   \n421565     45    93  2012-10-26       2487.80        False        58.85   \n421566     45    94  2012-10-26       5203.31        False        58.85   \n421567     45    95  2012-10-26      56017.47        False        58.85   \n421568     45    97  2012-10-26       6817.48        False        58.85   \n421569     45    98  2012-10-26       1076.80        False        58.85   \n\n        Fuel_Price  MarkDown1  MarkDown2  MarkDown3  MarkDown4  MarkDown5  \\\n0            2.572        NaN        NaN        NaN        NaN        NaN   \n1            2.572        NaN        NaN        NaN        NaN        NaN   \n2            2.572        NaN        NaN        NaN        NaN        NaN   \n3            2.572        NaN        NaN        NaN        NaN        NaN   \n4            2.572        NaN        NaN        NaN        NaN        NaN   \n...            ...        ...        ...        ...        ...        ...   \n421565       3.882    4018.91      58.08      100.0     211.94     858.33   \n421566       3.882    4018.91      58.08      100.0     211.94     858.33   \n421567       3.882    4018.91      58.08      100.0     211.94     858.33   \n421568       3.882    4018.91      58.08      100.0     211.94     858.33   \n421569       3.882    4018.91      58.08      100.0     211.94     858.33   \n\n               CPI  Unemployment  IsHoliday_y Type    Size  \n0       211.096358         8.106        False    A  151315  \n1       211.096358         8.106        False    A  151315  \n2       211.096358         8.106        False    A  151315  \n3       211.096358         8.106        False    A  151315  \n4       211.096358         8.106        False    A  151315  \n...            ...           ...          ...  ...     ...  \n421565  192.308899         8.667        False    B  118221  \n421566  192.308899         8.667        False    B  118221  \n421567  192.308899         8.667        False    B  118221  \n421568  192.308899         8.667        False    B  118221  \n421569  192.308899         8.667        False    B  118221  \n\n[421570 rows x 17 columns]","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>Store</th>\n      <th>Dept</th>\n      <th>Date</th>\n      <th>Weekly_Sales</th>\n      <th>IsHoliday_x</th>\n      <th>Temperature</th>\n      <th>Fuel_Price</th>\n      <th>MarkDown1</th>\n      <th>MarkDown2</th>\n      <th>MarkDown3</th>\n      <th>MarkDown4</th>\n      <th>MarkDown5</th>\n      <th>CPI</th>\n      <th>Unemployment</th>\n      <th>IsHoliday_y</th>\n      <th>Type</th>\n      <th>Size</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>1</td>\n      <td>1</td>\n      <td>2010-02-05</td>\n      <td>24924.50</td>\n      <td>False</td>\n      <td>42.31</td>\n      <td>2.572</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>211.096358</td>\n      <td>8.106</td>\n      <td>False</td>\n      <td>A</td>\n      <td>151315</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>1</td>\n      <td>2</td>\n      <td>2010-02-05</td>\n      <td>50605.27</td>\n      <td>False</td>\n      <td>42.31</td>\n      <td>2.572</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>211.096358</td>\n      <td>8.106</td>\n      <td>False</td>\n      <td>A</td>\n      <td>151315</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>1</td>\n      <td>3</td>\n      <td>2010-02-05</td>\n      <td>13740.12</td>\n      <td>False</td>\n      <td>42.31</td>\n      <td>2.572</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>211.096358</td>\n      <td>8.106</td>\n      <td>False</td>\n      <td>A</td>\n      <td>151315</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>1</td>\n      <td>4</td>\n      <td>2010-02-05</td>\n      <td>39954.04</td>\n      <td>False</td>\n      <td>42.31</td>\n      <td>2.572</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>211.096358</td>\n      <td>8.106</td>\n      <td>False</td>\n      <td>A</td>\n      <td>151315</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>1</td>\n      <td>5</td>\n      <td>2010-02-05</td>\n      <td>32229.38</td>\n      <td>False</td>\n      <td>42.31</td>\n      <td>2.572</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>211.096358</td>\n      <td>8.106</td>\n      <td>False</td>\n      <td>A</td>\n      <td>151315</td>\n    </tr>\n    <tr>\n      <th>...</th>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n    </tr>\n    <tr>\n      <th>421565</th>\n      <td>45</td>\n      <td>93</td>\n      <td>2012-10-26</td>\n      <td>2487.80</td>\n      <td>False</td>\n      <td>58.85</td>\n      <td>3.882</td>\n      <td>4018.91</td>\n      <td>58.08</td>\n      <td>100.0</td>\n      <td>211.94</td>\n      <td>858.33</td>\n      <td>192.308899</td>\n      <td>8.667</td>\n      <td>False</td>\n      <td>B</td>\n      <td>118221</td>\n    </tr>\n    <tr>\n      <th>421566</th>\n      <td>45</td>\n      <td>94</td>\n      <td>2012-10-26</td>\n      <td>5203.31</td>\n      <td>False</td>\n      <td>58.85</td>\n      <td>3.882</td>\n      <td>4018.91</td>\n      <td>58.08</td>\n      <td>100.0</td>\n      <td>211.94</td>\n      <td>858.33</td>\n      <td>192.308899</td>\n      <td>8.667</td>\n      <td>False</td>\n      <td>B</td>\n      <td>118221</td>\n    </tr>\n    <tr>\n      <th>421567</th>\n      <td>45</td>\n      <td>95</td>\n      <td>2012-10-26</td>\n      <td>56017.47</td>\n      <td>False</td>\n      <td>58.85</td>\n      <td>3.882</td>\n      <td>4018.91</td>\n      <td>58.08</td>\n      <td>100.0</td>\n      <td>211.94</td>\n      <td>858.33</td>\n      <td>192.308899</td>\n      <td>8.667</td>\n      <td>False</td>\n      <td>B</td>\n      <td>118221</td>\n    </tr>\n    <tr>\n      <th>421568</th>\n      <td>45</td>\n      <td>97</td>\n      <td>2012-10-26</td>\n      <td>6817.48</td>\n      <td>False</td>\n      <td>58.85</td>\n      <td>3.882</td>\n      <td>4018.91</td>\n      <td>58.08</td>\n      <td>100.0</td>\n      <td>211.94</td>\n      <td>858.33</td>\n      <td>192.308899</td>\n      <td>8.667</td>\n      <td>False</td>\n      <td>B</td>\n      <td>118221</td>\n    </tr>\n    <tr>\n      <th>421569</th>\n      <td>45</td>\n      <td>98</td>\n      <td>2012-10-26</td>\n      <td>1076.80</td>\n      <td>False</td>\n      <td>58.85</td>\n      <td>3.882</td>\n      <td>4018.91</td>\n      <td>58.08</td>\n      <td>100.0</td>\n      <td>211.94</td>\n      <td>858.33</td>\n      <td>192.308899</td>\n      <td>8.667</td>\n      <td>False</td>\n      <td>B</td>\n      <td>118221</td>\n    </tr>\n  </tbody>\n</table>\n<p>421570 rows × 17 columns</p>\n</div>"},"metadata":{}}]},{"cell_type":"code","source":"df.drop(['IsHoliday_y'], axis=1,inplace=True) # removing dublicated column","metadata":{"execution":{"iopub.status.busy":"2024-05-11T22:47:38.249939Z","iopub.execute_input":"2024-05-11T22:47:38.250215Z","iopub.status.idle":"2024-05-11T22:47:38.314738Z","shell.execute_reply.started":"2024-05-11T22:47:38.250178Z","shell.execute_reply":"2024-05-11T22:47:38.314092Z"},"trusted":true},"execution_count":11,"outputs":[]},{"cell_type":"code","source":"df.rename(columns={'IsHoliday_x':'IsHoliday'},inplace=True) # rename the column","metadata":{"execution":{"iopub.status.busy":"2024-05-11T22:47:38.315727Z","iopub.execute_input":"2024-05-11T22:47:38.315998Z","iopub.status.idle":"2024-05-11T22:47:38.320462Z","shell.execute_reply.started":"2024-05-11T22:47:38.315966Z","shell.execute_reply":"2024-05-11T22:47:38.319678Z"},"trusted":true},"execution_count":12,"outputs":[]},{"cell_type":"code","source":"df.head() # last ready data set","metadata":{"scrolled":true,"execution":{"iopub.status.busy":"2024-05-11T22:47:38.321382Z","iopub.execute_input":"2024-05-11T22:47:38.321582Z","iopub.status.idle":"2024-05-11T22:47:38.351960Z","shell.execute_reply.started":"2024-05-11T22:47:38.321557Z","shell.execute_reply":"2024-05-11T22:47:38.351199Z"},"trusted":true},"execution_count":13,"outputs":[{"execution_count":13,"output_type":"execute_result","data":{"text/plain":"   Store  Dept        Date  Weekly_Sales  IsHoliday  Temperature  Fuel_Price  \\\n0      1     1  2010-02-05      24924.50      False        42.31       2.572   \n1      1     2  2010-02-05      50605.27      False        42.31       2.572   \n2      1     3  2010-02-05      13740.12      False        42.31       2.572   \n3      1     4  2010-02-05      39954.04      False        42.31       2.572   \n4      1     5  2010-02-05      32229.38      False        42.31       2.572   \n\n   MarkDown1  MarkDown2  MarkDown3  MarkDown4  MarkDown5         CPI  \\\n0        NaN        NaN        NaN        NaN        NaN  211.096358   \n1        NaN        NaN        NaN        NaN        NaN  211.096358   \n2        NaN        NaN        NaN        NaN        NaN  211.096358   \n3        NaN        NaN        NaN        NaN        NaN  211.096358   \n4        NaN        NaN        NaN        NaN        NaN  211.096358   \n\n   Unemployment Type    Size  \n0         8.106    A  151315  \n1         8.106    A  151315  \n2         8.106    A  151315  \n3         8.106    A  151315  \n4         8.106    A  151315  ","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>Store</th>\n      <th>Dept</th>\n      <th>Date</th>\n      <th>Weekly_Sales</th>\n      <th>IsHoliday</th>\n      <th>Temperature</th>\n      <th>Fuel_Price</th>\n      <th>MarkDown1</th>\n      <th>MarkDown2</th>\n      <th>MarkDown3</th>\n      <th>MarkDown4</th>\n      <th>MarkDown5</th>\n      <th>CPI</th>\n      <th>Unemployment</th>\n      <th>Type</th>\n      <th>Size</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>1</td>\n      <td>1</td>\n      <td>2010-02-05</td>\n      <td>24924.50</td>\n      <td>False</td>\n      <td>42.31</td>\n      <td>2.572</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>211.096358</td>\n      <td>8.106</td>\n      <td>A</td>\n      <td>151315</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>1</td>\n      <td>2</td>\n      <td>2010-02-05</td>\n      <td>50605.27</td>\n      <td>False</td>\n      <td>42.31</td>\n      <td>2.572</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>211.096358</td>\n      <td>8.106</td>\n      <td>A</td>\n      <td>151315</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>1</td>\n      <td>3</td>\n      <td>2010-02-05</td>\n      <td>13740.12</td>\n      <td>False</td>\n      <td>42.31</td>\n      <td>2.572</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>211.096358</td>\n      <td>8.106</td>\n      <td>A</td>\n      <td>151315</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>1</td>\n      <td>4</td>\n      <td>2010-02-05</td>\n      <td>39954.04</td>\n      <td>False</td>\n      <td>42.31</td>\n      <td>2.572</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>211.096358</td>\n      <td>8.106</td>\n      <td>A</td>\n      <td>151315</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>1</td>\n      <td>5</td>\n      <td>2010-02-05</td>\n      <td>32229.38</td>\n      <td>False</td>\n      <td>42.31</td>\n      <td>2.572</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>211.096358</td>\n      <td>8.106</td>\n      <td>A</td>\n      <td>151315</td>\n    </tr>\n  </tbody>\n</table>\n</div>"},"metadata":{}}]},{"cell_type":"code","source":"df.shape","metadata":{"execution":{"iopub.status.busy":"2024-05-11T22:47:38.353056Z","iopub.execute_input":"2024-05-11T22:47:38.353319Z","iopub.status.idle":"2024-05-11T22:47:38.365005Z","shell.execute_reply.started":"2024-05-11T22:47:38.353284Z","shell.execute_reply":"2024-05-11T22:47:38.364270Z"},"trusted":true},"execution_count":14,"outputs":[{"execution_count":14,"output_type":"execute_result","data":{"text/plain":"(421570, 16)"},"metadata":{}}]},{"cell_type":"markdown","source":"# Store & Department Numbers","metadata":{}},{"cell_type":"code","source":"df['Store'].nunique() # number of different values","metadata":{"execution":{"iopub.status.busy":"2024-05-11T22:47:38.365885Z","iopub.execute_input":"2024-05-11T22:47:38.366087Z","iopub.status.idle":"2024-05-11T22:47:38.379954Z","shell.execute_reply.started":"2024-05-11T22:47:38.366063Z","shell.execute_reply":"2024-05-11T22:47:38.379259Z"},"trusted":true},"execution_count":15,"outputs":[{"execution_count":15,"output_type":"execute_result","data":{"text/plain":"45"},"metadata":{}}]},{"cell_type":"code","source":"df['Dept'].nunique() # number of different values","metadata":{"scrolled":true,"execution":{"iopub.status.busy":"2024-05-11T22:47:38.380989Z","iopub.execute_input":"2024-05-11T22:47:38.381275Z","iopub.status.idle":"2024-05-11T22:47:38.390992Z","shell.execute_reply.started":"2024-05-11T22:47:38.381241Z","shell.execute_reply":"2024-05-11T22:47:38.390257Z"},"trusted":true},"execution_count":16,"outputs":[{"execution_count":16,"output_type":"execute_result","data":{"text/plain":"81"},"metadata":{}}]},{"cell_type":"markdown","source":"Now, I will look at the average weekly sales for each store and each department to see if there is any weird values or not. There are 45 stores and 81 departments for stores. ","metadata":{}},{"cell_type":"code","source":"store_dept_table = pd.pivot_table(df, index='Store', columns='Dept',\n                                  values='Weekly_Sales', aggfunc=np.mean)\ndisplay(store_dept_table)","metadata":{"execution":{"iopub.status.busy":"2024-05-11T22:47:38.391900Z","iopub.execute_input":"2024-05-11T22:47:38.392129Z","iopub.status.idle":"2024-05-11T22:47:38.627290Z","shell.execute_reply.started":"2024-05-11T22:47:38.392100Z","shell.execute_reply":"2024-05-11T22:47:38.626528Z"},"trusted":true},"execution_count":17,"outputs":[{"output_type":"display_data","data":{"text/plain":"Dept             1              2             3             4             5   \\\nStore                                                                          \n1      22513.322937   46102.090420  13150.478042  36964.154476  24257.941119   \n2      30777.980769   65912.922517  17476.563357  45607.666573  30555.315315   \n3       7328.621049   16841.775664   5509.300769   8434.186503  11695.366573   \n4      36979.940070   93639.315385  19012.491678  56603.400140  45668.406783   \n5       9774.553077   12317.953287   4101.085175   9860.806783   6699.202238   \n6      23867.553776   50269.437273  16806.638811  34187.366503  34465.307622   \n7       9542.801259   22603.690769   8633.536923  14950.518601  13860.350490   \n8      14789.827343   35729.821748  10683.305105  21089.309301  19838.849231   \n9      11846.558252   24969.477413   7497.356783  17165.947762  19282.746014   \n10     39925.138951  109795.291469  32086.181469  48579.826364  58373.460280   \n11     18860.911958   57114.326224  17628.778671  28837.744545  36663.363916   \n12     17330.087622   74494.846224  17535.251678  26673.788182  27756.204615   \n13     47020.455455   76339.960000  26116.623706  42563.275455  56786.934755   \n14     30611.783357   77704.857972  19418.273986  52936.323287  33468.325035   \n15     13845.747832   26317.410769  10470.811958  13082.172448  16465.706993   \n16     11352.479371   23549.144965   7635.427273  14748.078112  13494.538671   \n17     22801.609161   42231.844406  19278.955035  23961.357273  27082.325594   \n18     21988.356224   63665.139510  16392.980490  26775.207203  22933.954965   \n19     21504.029161   50841.072937  18414.224476  31365.545315  28759.223846   \n20     40545.473217   78251.249930  15490.971259  51456.376643  41647.786503   \n21     14950.049231   47780.599161  14607.126923  19354.728042  16090.874545   \n22     21493.271119   53361.851888  13150.979510  32104.132378  23187.335105   \n23     33186.460559   70522.580140  19912.564755  27324.303077  36895.869021   \n24     18859.023357   40797.169301  11825.589021  29245.357552  29178.058811   \n25     20145.897483   36871.310559  11788.130979  20351.455455  12422.996434   \n26     19402.762937   27398.030979   7357.400769  24498.113846  17589.532587   \n27     30437.976224   79001.049161  20226.734615  43596.933916  28059.038252   \n28     20180.453986   57751.274336  12562.223287  27980.817203  28221.618392   \n29     15504.699580   25181.662727   7995.955804  14326.216224  12931.821259   \n30      9788.376643   12974.464476    739.981888  13216.100909    405.565944   \n31     17356.652448   58512.131538  10616.675944  34848.899231  18715.630769   \n32     22852.639510   50323.497343  15472.540140  28137.154965  20748.371888   \n33      2379.086573    7471.425105    283.950140   6107.616014    112.728310   \n34     19947.573077   34916.225874   8377.376434  19791.509021  21633.900559   \n35     17082.647902   45578.456224  14308.382797  19495.631119  24858.433706   \n36      2239.227413   13416.025664    381.324266   9873.505105    314.753982   \n37     11024.235874   16511.446224   1297.862028  17614.013636   1137.631189   \n38      6923.538531   10986.172657    498.700210  10669.501329    397.418322   \n39     21925.021189   67338.429371  20569.701608  44807.515105  24043.436783   \n40     18794.578811   26702.705175   6489.030350  24386.750559  17689.671678   \n41     23205.259930   48349.828951  17021.833357  30538.574895  25513.943776   \n42     10375.148392   15976.902448    814.451189  14885.264755   1052.296783   \n43      7549.109021   20722.851469    999.648881  18227.382168    575.417326   \n44      8049.992308    9377.273007    571.016713   7403.959580    960.670490   \n45     17745.916014   35800.912448   9508.014965  24229.873147  16107.063077   \n\nDept             6             7             8             9             10  \\\nStore                                                                         \n1       4801.780140  24566.487413  35718.257622  28062.052238  31033.386364   \n2       6808.382517  40477.837063  58707.369441  34375.864476  38845.854476   \n3       2012.411818  10044.341608   8310.254196   9062.007692  10871.944126   \n4       8241.777692  50728.151399  62949.723776  34437.170979  37269.667413   \n5       1191.057622   6124.484336  13735.709441   7919.805944   9783.395385   \n6       7225.566643  34526.870420  47577.719790  48271.060140  47436.477902   \n7       6329.928811  10925.757063  13970.619371  29722.736084  21136.560280   \n8       3395.425455  20268.743776  26438.524336  11792.661678  20666.433776   \n9       2806.416364  13826.694336  21424.470699  13196.569720  12810.480350   \n10     10556.550769  58964.715664  86739.846643  64436.722517  48108.063497   \n11      5925.281678  34844.108462  34415.449580  19056.162168  23449.992727   \n12      6741.174895  34242.449161  42229.665035  19553.030490  17975.211119   \n13      7886.826993  59896.738601  36238.867972  41236.445175  29431.879231   \n14      7016.829790  53256.150280  53425.359860  22025.603497  20165.667133   \n15      4244.143776  22267.220070  20416.967273  15954.692937  11524.856294   \n16      5146.038951  11544.310140  14676.778322  28990.377343  12681.776643   \n17      5944.435245  19474.770559  20110.270839  27293.658042  14165.000000   \n18      5664.913077  33152.347203  32036.582098  18589.371259  16754.599860   \n19      5948.962867  33882.926853  42613.662937  30645.018112  27622.457762   \n20      8210.745734  49394.699231  76445.061259  38243.623916  41826.467552   \n21      3988.656294  24456.825664  18238.059790  16387.963636  14695.978881   \n22      5236.811329  29068.621608  37236.347692  23452.908881  19438.354266   \n23      7393.499650  43624.067413  36710.240909  50178.361748  31155.170559   \n24      4911.185804  28788.329441  49171.841748  23246.748322  27175.089231   \n25      3760.045035  17971.439580  29858.353636  14636.113636  20202.701469   \n26      4656.670490  16287.658531  28694.950909  16556.330769  10172.815734   \n27      7730.729091  43272.914965  42181.469580  29315.697133  36757.327413   \n28      5016.258671  29228.446923  33375.575524  17930.710070  21083.404825   \n29      3289.884965  16854.082238  20680.465944  11370.866364   9400.183077   \n30        27.303937    379.771958  11733.993776     76.845352    196.116923   \n31      3489.809441  21012.438531  25277.976713  10815.516713  19911.584406   \n32      4589.748392  25375.036993  24681.349580  20739.684685  22887.257483   \n33        11.996538    392.912867   3679.792168     42.788348     80.301189   \n34      3419.062028  18055.491608  27165.013147  17224.253497  16957.163566   \n35      7256.417133  30267.589790  18416.401678  15657.032937  14818.443706   \n36        26.291579    414.428322   3417.640420    102.211739    175.052308   \n37        46.313630    824.978392  16151.397902    151.233803    387.644685   \n38        37.014855    413.539021   9485.399441     77.520350    365.364895   \n39      4911.540420  40020.492867  36130.641608  19396.117692  14919.373916   \n40      4003.068601  18898.214336  33971.532238  19065.436294  19612.629301   \n41      5267.832098  33711.105734  33729.081678  32743.470140  15194.223706   \n42         3.333333    721.913846  18238.584196    135.524056    404.596014   \n43        37.843246    516.772867  13185.211678    147.694196    507.426713   \n44        34.648722    531.034895   4963.966224     99.817273    153.792657   \n45      3554.222657  23757.771538  34050.409580  15485.885804  14245.086993   \n\nDept             11            12            13            14            16  \\\nStore                                                                         \n1      24919.270629  10566.545315  38692.880490  15268.550909  24151.061329   \n2      23382.686154   7735.946294  46117.959231  21314.132937  27005.179650   \n3       8774.928042   2383.603007  11363.061678   4626.649021   7871.568322   \n4      27145.836643   8141.910979  69596.447343  28567.509441  21270.153007   \n5       7389.049441   2515.347273  11242.656084   3697.422378   7717.567622   \n6      21882.119091   6683.218671  37746.931399  25583.741399  28204.007552   \n7      15362.294126   5674.272517  14916.528392  10108.054476  13788.448881   \n8      18628.061469   7132.540769  25257.586434  10771.757343  16500.473776   \n9      14721.070979   6466.066014  22133.400629   7369.519580  12013.562797   \n10     32911.815385   9243.158531  62799.067483  40044.637762  30273.874755   \n11     18045.040210   4293.703497  41228.146154  24644.513077  15371.136434   \n12     17789.776993   4878.279650  46974.984965  19719.239650   7579.577552   \n13     21280.789790   7926.647483  47698.818182  26378.644196  22255.482098   \n14     20359.693077   5467.919301  60009.833706  24775.077972  29647.140140   \n15     14041.217832   3658.448112  18879.250350  12785.902867  14527.979441   \n16     12037.149091   4149.637972  15070.387273   8656.873217   9811.741958   \n17     14527.290490   7534.953916  24648.896434  14118.147413  11246.852657   \n18     21485.875734   3865.536923  42342.913916  21977.352517  16067.656224   \n19     21997.256503   6403.788601  33957.896224  18478.815734  28023.600070   \n20     25925.433916   7786.979860  56580.504266  24275.736573  27048.008881   \n21     13006.376783   2793.614126  28373.730909  15897.316084   6308.213147   \n22     14951.826783   3710.651538  37381.400839  17203.417902  19672.921538   \n23     31371.205175   5611.221608  37969.255664  33355.681259  23404.868601   \n24     17088.586573   4230.501818  29558.638252  17265.871818  20444.668182   \n25     11245.617273   3191.893706  25436.934336  11277.145315  16102.888601   \n26     12809.284615   4525.693636  21155.702797  10843.478881  12557.320350   \n27     20785.579091   3911.993986  52941.787273  28918.602867  24741.912517   \n28     13539.147762   3441.027832  38297.386573  16522.443566   7550.626364   \n29      8232.700280   2237.276993  17953.007552   9601.125245   7115.321049   \n30       835.302727     72.023706  11386.088112    975.040280   1681.668462   \n31     11583.676154   2800.221958  42661.320629  17550.170000   8361.894755   \n32     14865.003916   3193.536573  30027.923986  15590.275734  14786.892028   \n33       170.112448     21.053969   6931.686503   1018.867552    323.628392   \n34     15681.386993   5312.239301  23518.439860  10049.688462  16687.234965   \n35     17897.421888   2124.073147  33504.498112  28741.281678   7441.906364   \n36       281.674789     35.497984  12176.395315   1799.510979    624.467762   \n37      1747.183147    182.048252  16734.088112   1416.220490   2215.632448   \n38       752.881678     63.583706  10033.864755    997.098462    849.879930   \n39     20428.262308   4621.159860  54991.423427  21125.778322  26691.769161   \n40     12807.144685   4403.534615  21550.356923  12348.471399  13322.372028   \n41     13605.678462   4273.264965  32562.995804  17161.987552  18588.113776   \n42       939.838042     87.767273  15069.359930   1501.013357   1102.671818   \n43       584.831608     89.136084  17852.915175   1664.022937   2654.802657   \n44       608.494685     77.139021   7300.262448    730.311469    846.433636   \n45     14228.378671   3620.284615  27243.504615  12476.371608  16600.540490   \n\nDept             17            18           19            20            21  \\\nStore                                                                        \n1       9196.557902   7765.304425  1259.018531   4091.571538   7808.450559   \n2      13790.854196  11687.563009  4053.439930   5748.619441   9910.939860   \n3       2634.199650   2960.677739   731.313147   1682.199231   1244.529650   \n4      15815.878042  13146.543790  3038.317762   8888.302867   8865.273147   \n5       2396.781329   2185.893000    46.327368   1220.832797   1316.414615   \n6      16296.992448  11500.897168  2585.304755   9299.858601   9398.605455   \n7       5568.405385   4255.952842   468.264615   3127.778531   1885.265175   \n8       7494.439021   6304.318017  1065.873916   3771.235734   4685.762378   \n9       4951.019091   4100.968364  1444.764755   2567.934895   3614.488741   \n10     27206.583357  18255.933810  3077.088462  15551.453776   9678.942098   \n11     13373.138322  11033.074286  1435.587073   9634.961958   7571.596573   \n12     11666.809161   9893.141316  2949.156084   6558.721329   4225.581189   \n13     17713.297902  17013.656410  3979.954056   8781.979231   9117.091259   \n14     23075.393916  14279.863689  1041.957762  11375.547133   8697.367413   \n15     11225.805175   6269.619545  1117.350490   4452.434545   3068.546294   \n16      7202.830699   3521.880412   994.926224   3328.785105   3618.622378   \n17     10386.823007   8111.507500  4495.581049   4475.987483   4130.295524   \n18     15289.541888   9246.560317  2783.278392   8409.801958   5059.748252   \n19     17137.079091  10440.354182    -5.219231   6727.757273   7112.320490   \n20     18464.403846  13170.096000   162.158929   6992.899720  13457.564895   \n21      7181.937692   7233.380481  2032.323986   5405.155245   3153.500559   \n22     14551.985175  10156.836911   939.871190   6672.666014   5386.000839   \n23     27120.621608  11716.354180  1641.919301  11766.417203   9004.245804   \n24     13903.568811   6965.927480    82.640909   5825.841189   6153.428252   \n25     10380.811888   6647.172960    11.605263   3904.717972   5208.073776   \n26      7816.898601   3583.714492  1283.249371   3474.472238   5651.439580   \n27     18713.578042  11320.961095   790.685524  11159.393077   6867.747972   \n28      9821.526154   8402.612456  1805.895245   5695.885315   5153.508392   \n29      8000.553217   3539.801607    36.908161   3925.716014   3755.090210   \n30       153.277833    424.115465     2.380000     46.317857   1572.905944   \n31      8043.448671   5800.120800    41.546503   6430.436713   4636.288601   \n32     11409.636993   7540.921695  1642.624685   5057.866713   5054.996643   \n33       297.031189    308.954321          NaN     52.826014    200.845315   \n34      6743.749860   5104.287724    29.990741   2977.826014   4441.242587   \n35     17153.866503   6476.613750    -9.788000  11896.808601   3823.951888   \n36       476.275804    272.562247          NaN     64.166312    240.628951   \n37       324.243916    580.277381          NaN     64.420423   1915.625455   \n38       424.559580    359.198462          NaN     54.377558   1054.039161   \n39     11699.538951  11333.330584    -3.238182   7874.601678   7177.074685   \n40      7652.320769   4509.372119    -5.000000   3526.321958   6585.782937   \n41     12054.236364   9113.079450  1163.505309   5546.318881   5066.603636   \n42       518.832308    385.767905          NaN     63.398136   1262.854266   \n43       623.737762    704.650521          NaN     44.114348   1563.513007   \n44       330.388042    430.257253          NaN     31.559714    770.183287   \n45     10523.128392   6340.195691  1370.072657   5109.063077   4061.309580   \n\nDept             22            23            24            25            26  \\\nStore                                                                         \n1       8052.076154  21623.184685   6187.389720  10152.336783   6767.997273   \n2      12923.013846  29170.616573   8309.564545  15299.508392   9347.725105   \n3       3101.769860  10913.330070   2763.627343   4260.447972   2850.050839   \n4      17289.916294  46234.012867  10875.301189  15640.748531  18429.759930   \n5       2430.053986   6141.862727   1480.232797   2685.578182   1782.209510   \n6      18833.150909  30538.913776   6789.380909  13777.691399   9098.639371   \n7       6814.387692  14138.214266   2555.765245   5219.990280   1948.915804   \n8       7138.113287  14693.072587   4429.390909   6801.176503   6156.060979   \n9       4941.852587  11000.589720   2477.753986   5204.926434   4032.770769   \n10     25618.934126  65729.846573  15179.222937  21141.616294  17197.121678   \n11     15500.204266  34322.483497   8592.320839  11419.655385  11332.874685   \n12     10085.826154  38809.980769  11182.713077  20129.949790  13748.230000   \n13     16476.987692  30216.258741  10426.793077  15181.840140  12958.888392   \n14     18677.513077  35968.250699   9186.777343  14231.128531  12048.150699   \n15      8515.664685  21542.936364   4822.264615   8952.884336   4955.726224   \n16      6302.361049  11264.889371   2244.065594   4963.603776   2004.945105   \n17      7668.886713  13680.794056   4975.966224   5370.106294   7752.311748   \n18     15759.978951  36048.422727   8890.141748  16470.192238  10527.132448   \n19     12343.916084  28089.819091   5768.380979  12986.697413   7878.555944   \n20     13931.855175  37655.158322   8309.914825  17515.605385  12804.132587   \n21      8436.536923  36872.786713   8738.996643  18281.019301  10623.598811   \n22     11814.320909  29973.003497   8391.796224   9725.432727   8375.324476   \n23     22195.440210  47301.983986  10698.334126  16160.491748  12961.146713   \n24     12189.695245  28485.677483   6015.021329  11885.935804   8280.752797   \n25      6499.126084  16186.003986   3011.059860   7118.890769   3887.950490   \n26      6069.362727  13208.499231   2697.797273   6370.333427   3502.906643   \n27     17859.665455  37222.157203   9648.699161  12774.555874  12383.764266   \n28     10210.134825  31939.141399   8328.875804  15434.385944  10936.965315   \n29      6408.913776  19722.253636   4440.371538   6452.345664   4071.857692   \n30        56.522500     17.175870      9.068750     43.547643      7.119730   \n31      8635.451888  20767.686923   4491.356923   9346.158392   7158.594545   \n32      8995.943916  18601.974545   4089.416923   7758.946154   5855.900490   \n33        35.148116      5.342857     23.967500     34.633958    134.939860   \n34      6152.821678  13611.645524   3032.286713   5790.009161   4476.318182   \n35     21541.952937  40062.517343  11090.520559  14760.109650  13033.820210   \n36        39.170526     10.945556     14.606000     19.733125    180.602517   \n37        85.164839     42.991264      6.342222     67.344895     10.471667   \n38        54.129167     37.848679      8.803871     52.630699      7.574528   \n39     13013.560140  18550.752517   6470.795385   7243.153007   9406.726783   \n40      6454.651608  14064.668462   2954.521818   6704.410350   4318.451329   \n41     10331.841329  18920.311399   5172.027343   7374.309301   6488.948462   \n42       111.992500     44.536588     10.955000     75.980699      1.245714   \n43        70.411176     25.812609      2.235000     71.822238      4.463333   \n44        63.158182     19.318247     14.097391     34.191888    120.533125   \n45      8324.060769  22916.690979   5463.712867   8409.669301   7258.836224   \n\nDept            27           28            29            30           31  \\\nStore                                                                      \n1      1374.649650   593.113986   4651.040210   3415.295035  2408.533287   \n2      1837.954615   798.913217   7111.482657   4981.155385  3884.756993   \n3       500.193636   166.870070   1517.404056   1243.926993   878.475455   \n4      2579.906154   916.232238   9472.121189   7683.686783  3813.243986   \n5       377.289161   203.282378   1343.724895    857.152448   655.449790   \n6      1798.563846   578.535455   6858.093916   5020.268182  3248.543776   \n7       644.632867   190.669510   1363.612448   1103.170979  1799.559231   \n8       923.820699   316.680839   2915.290070   2335.261818  1415.699650   \n9       703.237413   246.345664   1919.389231   1601.397972  1100.412028   \n10     4361.426503  1327.127273  15703.823427  11490.118951  6122.350070   \n11     2203.137483   912.481958   9225.784755   6765.267762  2947.045455   \n12     2017.176364   880.158881   6973.458392   5950.700140  3510.652587   \n13     2685.000140  1410.386713   6152.025944   4520.360559  3977.739091   \n14     2564.011329  1223.812657   9880.402308   6691.436434  3804.086364   \n15     1561.304615   695.465105   4687.410979   3397.482098  2359.409930   \n16      758.228112   287.466573   1634.660280   1330.003077  1164.366853   \n17     1373.430420  1290.935594   2649.323147   2276.462098  1923.034266   \n18     2741.878811  1241.995455  10271.007622   6178.887762  3424.756294   \n19     2385.669021   876.876434   5822.995245   4690.908322  3067.292937   \n20     2710.690070   954.691538   8946.720769   6298.868322  3840.956154   \n21     1647.096923   731.438392   5102.697692   4638.772587  3884.023077   \n22     2042.667622   894.010699   7864.640280   4983.480979  2947.230559   \n23     3260.970140  1043.950699  11110.549650   8216.539021  4749.540629   \n24     1950.734545   679.705664   5705.871748   4308.367343  2530.608951   \n25     1207.298042   597.461329   3583.101049   2329.320420  1655.917133   \n26      961.844895   374.188462   3216.479371   2387.515944  1269.019930   \n27     2114.502378   963.910140   7801.956713   5028.221049  3562.270839   \n28     1525.020280   561.688462   5349.592517   3909.740420  2583.945035   \n29     1406.568671   651.774965   4577.955804   3032.902517  1974.257203   \n30       10.064000    89.652937      8.615000           NaN    67.092109   \n31     1211.643636   605.255874   4374.872657   3127.922797  2309.877203   \n32     1261.875524   659.995175   3253.888881   2364.780559  2156.684545   \n33        1.000000          NaN           NaN           NaN    40.069697   \n34      731.110210   273.555455   2146.340559   1903.133776   959.736783   \n35     1618.056154   740.852587   8768.500629   6063.604825  4629.956783   \n36             NaN          NaN      4.000000           NaN    74.102791   \n37       23.268795   139.915455           NaN           NaN   123.623239   \n38       12.048000    91.476993     14.739167           NaN    31.459916   \n39     1424.361119   622.260839   5678.498112   3799.688252  2337.074336   \n40     1006.653077   324.234545   3270.596853   2635.789650  1319.277063   \n41     1373.244965   463.271329   4197.461049   2790.015804  2066.554965   \n42       31.292805    57.608462           NaN           NaN    56.049219   \n43       12.443077    87.095254           NaN           NaN    27.587255   \n44       12.555469    72.642867           NaN           NaN    12.395556   \n45     1328.196783   646.841469   4753.078671   3021.689650  2654.704406   \n\nDept             32            33            34           35           36  \\\nStore                                                                       \n1       8202.668392   5946.431189  11530.831678  2535.730909  1476.203566   \n2      11755.096713   7488.096993  17595.203497  3875.588601  2631.750559   \n3       4296.111049   3228.155105   4579.719161  1439.325524   622.689371   \n4      13685.430350  12304.056224  25142.675385  4376.574755  3005.231469   \n5       2450.897622   1598.760909   3602.762587  1162.082028   587.063706   \n6      11369.829650   7213.951469  18101.451329  3551.453706  3456.005385   \n7       5376.747902   2279.562098   4684.393776   403.049021  1880.910140   \n8       5807.735245   5115.140979   8371.814056  1885.470210   989.164406   \n9       4458.402797   2564.069301   5711.079091  1445.754406   800.506408   \n10     21571.249510  14919.342587  43753.474615  8592.219091  3654.797832   \n11     10765.959091   8348.490559  22379.140210  4222.688881  2976.055245   \n12      9506.941888  10888.284196  23284.510909  2952.662308  2468.503636   \n13     10234.196643  10897.800070  19201.303636  3660.573986  2464.866713   \n14     12817.232867   9513.732028  24504.491538  4034.992028  3415.643636   \n15      5126.108951   4277.763986  13800.849091  2622.769580  1383.587902   \n16      4561.439231   2188.839860   4906.217692   593.819860  1824.481119   \n17      5776.951958   5108.334126   9295.045175  1541.422378  1878.117902   \n18      9269.177692   8893.556643  20971.567063  3873.937273  2283.017413   \n19      7693.104755   6206.423007  17472.371329  3434.005734  1972.846853   \n20     13728.180350   9485.906364  22106.986503  5834.606923  3393.552517   \n21      7116.295245   8190.056014  19044.877902  2690.189510  2079.540839   \n22      6281.170979   7419.500350  21841.058671  4243.829301  2380.836643   \n23     11303.890490  11289.378881  26048.926434  5237.248392  3722.621119   \n24      6998.907343   6394.550000  16351.961329  3081.727273  1940.518392   \n25      3963.240909   2926.216364  11331.330979  2277.483357  1319.586503   \n26      4162.972657   3076.487273   7963.855175  1954.978601  1027.915385   \n27      8397.365315   9801.541748  18926.597972  3579.206294  2536.471329   \n28      8619.192308   8378.118392  17685.602308  2675.184615  1802.246014   \n29      4196.283846   4058.077972  11029.653986  2413.346294  1125.371958   \n30        38.039180      7.250000      3.677778          NaN          NaN   \n31      6118.760070   4924.689441  14279.747273  1900.871538  1459.959510   \n32      5196.571119   3830.254825  11422.796993  2141.696154  1461.063427   \n33        28.796970     20.191500      4.352000    19.000000    45.000000   \n34      5010.569720   3464.044825   8064.623916  1693.454336   883.716434   \n35      7872.417273  10770.603986  25881.453217  3282.671049  3780.496294   \n36        15.093750     -3.156667      8.424000          NaN   -30.000000   \n37       103.303333      4.885556           NaN          NaN          NaN   \n38        42.526462      6.548750     12.672857     7.000000          NaN   \n39      5976.223007   6923.695455  16354.447273  2057.284056  2032.195594   \n40      4532.503497   3106.724126   7590.319510  2060.226014   828.586434   \n41      5361.930909   5735.627762  12943.632587  2225.103217  1617.619091   \n42        40.771631      9.500000     11.970000          NaN          NaN   \n43        20.476724      2.500000           NaN          NaN          NaN   \n44        33.574470      9.030000     -9.880000          NaN          NaN   \n45      4863.574825   5181.216783  14224.687273  2647.283846  1732.512937   \n\nDept            37             38         39            40            41  \\\nStore                                                                      \n1      2800.495105   79978.222587        NaN  58510.409161   1064.769650   \n2      4500.250769   85114.996014   2.340000  78174.560210   2592.220769   \n3              NaN  108598.364126        NaN  18203.108252    646.832028   \n4      3640.752727   80093.946084   1.560000  78729.263077    975.417622   \n5              NaN   55199.791888        NaN  19328.994965    524.753217   \n6      3911.769091   78545.199161        NaN  65833.727203   2641.542378   \n7              NaN   31451.814685        NaN  31603.352098   1606.004406   \n8      2248.622028   58609.542937        NaN  38028.880699   1147.069161   \n9              NaN   78211.802657        NaN  29158.154126   1008.202098   \n10     4048.279441   88068.007762        NaN  99866.581608  10875.343566   \n11     3933.259790   73555.425385        NaN  53640.645105   1295.749720   \n12             NaN   51935.883147        NaN  48414.821678    770.451259   \n13     3510.937273   83485.895804        NaN  77752.306713   2757.629580   \n14             NaN  103360.027343        NaN  72356.461049   4054.569860   \n15       -2.500000   52572.179441        NaN  30755.287692   1183.880769   \n16             NaN   52078.700909        NaN  31687.432657   1542.986923   \n17             NaN   77339.776434        NaN  47372.023007     30.569843   \n18             NaN   65312.475734  28.000000  61637.689021    706.987343   \n19     2733.671748   78019.815175  15.231111  54198.527133   2876.399441   \n20     4006.388112  110205.216294        NaN  86518.837483   6177.195385   \n21             NaN   40298.334056        NaN  39586.809930   2570.596573   \n22             NaN   70038.717902        NaN  54340.605734   1299.613217   \n23             NaN   43869.156713        NaN  62100.266573   2056.521469   \n24     3036.471259   58689.380140        NaN  45267.238322   1579.177483   \n25     2981.991189   44627.650280        NaN  42220.734266   3302.998112   \n26             NaN  103498.203497        NaN  37448.672098   1388.559231   \n27     2566.781469   39725.397762   1.980000  70061.091259   2278.351818   \n28     1981.053357   49179.485524        NaN  46197.603706   1384.858112   \n29             NaN   42484.149371        NaN  28640.312378    909.938252   \n30             NaN   61266.489580        NaN  23431.058462     49.768293   \n31     3032.648322   80572.528392        NaN  56982.266294   1334.491888   \n32     2951.560699   61116.867832        NaN  58275.672867   2817.829371   \n33             NaN   13539.820000        NaN   6243.193916     43.040323   \n34     2221.717413   48819.291818        NaN  38458.909930    407.492676   \n35             NaN   35790.490559        NaN  36092.428182   2074.757762   \n36             NaN   18169.855524        NaN  10541.569860     60.636364   \n37             NaN   69388.854476        NaN  27125.879790      5.666667   \n38             NaN   54955.784336        NaN  16473.388042           NaN   \n39             NaN   43195.578322        NaN  59145.962448   1321.499161   \n40     1957.964545   36229.275804        NaN  33370.945315    280.907832   \n41        3.000000   46406.426573        NaN  54458.219510   1938.808182   \n42             NaN   38834.043427        NaN  19788.368531     -8.000000   \n43             NaN   57623.884895        NaN  18156.535664           NaN   \n44             NaN   45778.574685        NaN  15146.968112           NaN   \n45             NaN   53242.555524        NaN  39205.858601   2671.420210   \n\nDept             42        43            44         45            46  \\\nStore                                                                  \n1       7940.326224       NaN   4872.724406  23.995070  19662.989860   \n2       8768.857692       NaN   7245.541189  29.139848  29675.324545   \n3       4422.944406       NaN   2133.657762   9.922500   6179.259510   \n4       9511.818531       NaN   5441.563566  13.696939  39128.896154   \n5       2932.116154       NaN   1317.444126  18.588261   4895.629510   \n6       9399.415035       NaN   7780.472238  39.007910  27602.171958   \n7       6485.042308       NaN   3562.497203  22.821059  14670.128741   \n8       5284.069161       NaN   3700.214406   6.166429  17933.371259   \n9       3063.908252       NaN   3328.352727  14.957647   7773.091469   \n10     11608.849510       NaN   8878.497692  33.193038  54965.004685   \n11      6152.948112       NaN   5414.242098  17.969577  27483.859860   \n12      5995.964685       NaN   6753.662587  27.718171  32805.734196   \n13      8015.876364  1.070000  10270.138112  22.433516  41422.690559   \n14      7869.010350  0.250000   5377.124266  11.741176  32701.435594   \n15      3544.991818  3.000000   3378.734685  11.861600  12364.400699   \n16      3694.454406       NaN   3922.697063  18.177273  14231.886294   \n17      3974.562378       NaN   7535.032587  21.294095  26006.988601   \n18      6802.007902       NaN   5055.879510  21.186571  25474.858462   \n19      6430.056713       NaN   5562.715664  12.228889  20351.556643   \n20      8970.767273       NaN   8003.207552  16.248293  33583.898601   \n21      4886.625524       NaN   4255.040699  11.968000  19187.062937   \n22      7634.136364       NaN   5073.863357  28.775309  22168.489930   \n23     11755.600490       NaN   8527.952587  40.033130  36354.623007   \n24      5946.428042       NaN   4817.372238  21.124259  15930.056084   \n25      5350.679231       NaN   3972.579231  17.384483  18687.708252   \n26      2778.091259       NaN   3806.177203  28.551304   9771.878462   \n27     10201.298252       NaN   4936.005804  43.344615  38260.784615   \n28      6342.158671  0.750000   4490.995385  26.117812  20424.318531   \n29      3763.450699  0.916667   1984.067133  31.897143  12095.779510   \n30        64.555175       NaN      5.858824        NaN   6429.953986   \n31      5371.462378       NaN   2291.057063  10.521212  25648.204755   \n32      6578.807622       NaN   4266.812098  16.967848  26530.454825   \n33        55.752231       NaN      3.250455        NaN   1953.485804   \n34      4210.795594       NaN   3303.273636  15.973400  17203.738182   \n35      8072.815594       NaN   1809.156783   4.365000  16286.060070   \n36        92.584692       NaN      4.323750        NaN   2464.321119   \n37       114.220350       NaN      4.442353        NaN   8520.157203   \n38        99.815035       NaN      6.146852        NaN   4948.939371   \n39      3576.484476       NaN   4434.812168  18.438676  34122.182238   \n40      4607.132797       NaN   3247.999231  18.241607   9412.404196   \n41      5091.624965       NaN   4615.455524  24.919412  28213.117832   \n42       172.777273       NaN      2.373200        NaN   6050.036364   \n43       184.143287       NaN      5.314737        NaN   7426.636364   \n44        52.422519       NaN      4.743000        NaN   5871.248182   \n45      4447.306364       NaN   2596.319441  15.093600  14638.547692   \n\nDept           47           48            49           50         51  \\\nStore                                                                  \n1     -116.454545   917.727920  11437.931259          NaN  32.712727   \n2       18.068182  1358.347914  15568.465664          NaN  16.226667   \n3       38.875000          NaN     17.581481          NaN   5.411803   \n4       23.536154  2324.615532   6911.676643          NaN   8.200000   \n5       38.727273          NaN     39.141607          NaN   6.680000   \n6      -42.023333  1779.871418  12496.313147          NaN  31.228750   \n7       -9.906250  1385.855422     31.356711          NaN  35.368205   \n8       41.958333          NaN   2272.392308          NaN  17.386667   \n9       -3.070000   763.787879     39.097101          NaN   4.720000   \n10     -64.694444  2175.001399  19815.522378  4257.660280  35.028462   \n11       0.920000     7.500000   8122.647762    19.750000  14.503333   \n12     -43.899091          NaN     26.183158          NaN  13.154000   \n13     221.294000  1321.433525   9206.929441  2175.795455  21.398947   \n14      -7.777917          NaN  11864.542657  2186.921678  34.008333   \n15      22.900000   126.980000   9656.480140  2262.172797  10.023929   \n16     -57.726667   647.275000     54.719667          NaN  34.232821   \n17      15.608571  1294.475248     38.223457          NaN  18.565000   \n18      20.176471    10.000000  10765.219650   937.838235   7.205854   \n19      23.709583   249.288000   5436.057413   941.968085  30.204545   \n20     -12.619333  1496.297769  21402.477273  3301.240210  14.652727   \n21      22.472105     0.000000  10646.975664    10.000000   2.020000   \n22      19.260000     3.654444      8.783250          NaN  33.348846   \n23     -45.958333   119.315333  25204.691538  6875.752448  33.648571   \n24     -26.921429          NaN   5294.918741  1277.185315   8.750952   \n25      26.811176   -21.760000  11311.776434  2204.384615   6.970769   \n26      69.018889   611.372549   3383.052727   566.100000  24.172121   \n27       5.826087          NaN  10716.222657  2752.781469   5.892308   \n28      84.146000          NaN  13234.785524          NaN   2.364444   \n29      15.978333     8.982000     43.503333          NaN  20.110877   \n30            NaN          NaN      7.317222          NaN        NaN   \n31     -20.261333          NaN   8670.792657          NaN  17.722642   \n32      -5.250000     4.351111   4663.605594          NaN  26.955775   \n33            NaN          NaN      8.000000          NaN        NaN   \n34     -78.919167  1219.994206   3965.940769          NaN  27.203382   \n35     -99.088333          NaN      0.517544          NaN  22.831294   \n36            NaN          NaN      5.000000          NaN        NaN   \n37            NaN          NaN     18.469778          NaN        NaN   \n38            NaN          NaN     10.118000          NaN        NaN   \n39       2.360000          NaN   7623.418042          NaN  16.196056   \n40     -17.254286   752.392441     43.962113          NaN  22.127255   \n41      20.863478  1307.908140   5887.886853          NaN  16.185526   \n42            NaN          NaN     33.411842          NaN        NaN   \n43            NaN          NaN     17.337500          NaN        NaN   \n44            NaN          NaN      5.416667          NaN        NaN   \n45     -88.420000          NaN     44.705692          NaN   4.750909   \n\nDept            52          54            55           56            58  \\\nStore                                                                     \n1      2355.439371   90.921053  12817.843357  4000.480629   3372.474476   \n2      4148.373566  104.502868  13060.297692  5545.122308  21610.019091   \n3       961.390210   58.311239   7153.737902  1606.808881           NaN   \n4      3721.521329  131.887000  18662.627203  6040.540839   6078.142308   \n5       530.814685   45.917755   3445.100000  1220.316713    871.176471   \n6      4208.439580  156.990780  16407.804476  6530.876154   2993.474895   \n7      1303.614615   65.396000   6616.540490  6417.879021    972.628500   \n8      1945.215594   67.894803   7072.041049  5129.931049   2025.435115   \n9      1672.207133   57.523800   8607.050490  3070.459645           NaN   \n10     5158.843357  217.283597  20608.687972  1265.848392   4554.738322   \n11     2558.425804  243.776475  12609.361259  3346.916573   3298.496294   \n12     3806.997203  129.717941  14179.372727  1000.415315   2580.660146   \n13     4579.380280  114.982857  20055.630000  6751.401469   7501.691259   \n14     2370.137203  148.685489  15850.217832  5950.539930   8157.243916   \n15     1561.243077   53.922609   6675.751469  3684.035804    865.858407   \n16     1644.284406   69.335041   7090.456154  6037.615423    638.681818   \n17     3552.823217   66.399323  10572.849510  4245.378671   1486.478643   \n18     2950.368462  144.460682  10265.073007  5011.655245   3844.226853   \n19     1653.083497   91.635802  13923.061538  5716.974476   3062.104895   \n20     3264.065105  221.913475  19815.983147  5396.582098   4185.081620   \n21     2755.241608  127.319855   8286.281399  1511.944895   1319.000492   \n22     1626.951049   82.537500  10854.880699  4899.722128   3042.584085   \n23     3080.011329  238.397972  15810.811259  8809.958392   2402.012878   \n24     1501.941958   82.282426  15937.714545  4810.956364   2454.434348   \n25     1499.620629   47.662991   7071.007273  4359.542517    709.652174   \n26     1697.144685   53.900781   8998.729790  3909.698811           NaN   \n27     2255.905035   95.303551  14255.320210  5568.830909   1538.538462   \n28     2645.526923   96.117132  10960.007552   727.594155   4806.917133   \n29      959.371469   42.186455   5803.394406  3089.913846   1150.654800   \n30       19.153380         NaN     18.617778    92.237097           NaN   \n31      725.605385   84.190153   7946.053217  1747.507552   3305.775734   \n32     2512.983427   80.427594   9195.223497  5524.586224   2006.440629   \n33       17.411977         NaN     32.762295   123.403077           NaN   \n34     1243.242797   58.336696  10208.866923  3916.442657   1879.231739   \n35     1616.180070  198.649485  11675.244965   834.114191   2744.160714   \n36        5.280571         NaN    128.961905   202.857692           NaN   \n37       32.246503         NaN      6.268889   352.670862           NaN   \n38       21.399580         NaN      9.412500   111.742174           NaN   \n39     1901.061958   94.659254  11598.198601  3781.564196   2479.951259   \n40      942.737972   96.272932   9000.258741  3787.050769   3107.429907   \n41     1964.381888   68.283556  10052.520769  7643.873566   5249.282867   \n42       33.125734         NaN     -7.326667   179.754179           NaN   \n43       40.221408         NaN    -11.880000   160.386100           NaN   \n44       25.698462         NaN      4.174667   589.096727           NaN   \n45     1466.265175   52.113694   6085.695874  3632.149860   1735.106835   \n\nDept            59           60            65            67            71  \\\nStore                                                                       \n1       857.775105  1020.995804           NaN   7436.017343   2732.473357   \n2      1391.520559   221.545946           NaN  12125.255594   4634.609371   \n3       244.878455   138.125874           NaN   2021.482657   1101.610000   \n4      1586.446993   410.795105           NaN  12471.426713   7686.018741   \n5        78.256019   236.531469           NaN   3036.864545    456.661259   \n6      1016.749091   295.855824           NaN  11701.160699   5752.100909   \n7        81.489487    99.733986           NaN   3989.642098   2394.079790   \n8       620.909720   236.345455           NaN   5298.260280   2299.299301   \n9       214.684188    80.780000           NaN   3493.406224   1389.086294   \n10     2006.511119   505.600000           NaN  13352.773566  15768.505524   \n11     1057.406364   187.707143           NaN  10119.990979   9661.256014   \n12     1250.024476   419.502098           NaN   6223.470210   7628.997133   \n13     1327.836364   950.973427           NaN  16219.265594   9723.250210   \n14     1368.092867   371.405315           NaN  14631.920140   9795.648462   \n15      332.596154   111.426263           NaN   6214.881469   4327.138811   \n16      104.548034   114.590556           NaN   3431.070070   2223.935944   \n17      638.855385   371.307692           NaN   7757.146224   3465.274965   \n18      992.127972   163.889720           NaN   7935.269790   7599.357343   \n19      715.449580   532.988811           NaN  13792.077063   6318.644056   \n20     1681.055385   586.673427           NaN  17437.547622   8415.035385   \n21      703.785944   205.769925           NaN   5126.370839   5845.902028   \n22      852.313217   409.997203           NaN  12021.640490   5264.149580   \n23     1413.678671   113.021978           NaN  14421.243986  12109.695455   \n24      610.263287   102.965766           NaN  11250.376783   5011.297483   \n25      553.070350   189.770000           NaN   8719.053636   3184.024895   \n26      259.718042   102.242222           NaN   6660.914126   2831.279510   \n27     1200.596993   101.843511           NaN  12280.209231  10846.354266   \n28      835.300420   665.557972           NaN   6407.026364   6836.110070   \n29      329.170070   274.658182           NaN   6207.304476   2852.893986   \n30       91.678182   696.250350           NaN   1452.344406           NaN   \n31      524.495035   252.921212           NaN   6633.951259   5743.170909   \n32      656.273916   800.099301           NaN   9503.097762   5067.614965   \n33       24.498621   107.265734           NaN    645.405455      5.000000   \n34      501.387063    68.410377  45441.706224   6732.085734   2360.717552   \n35      830.778529    93.416783           NaN   5412.058741  12648.171538   \n36       28.774667   162.317483           NaN    675.943706    -29.000000   \n37      142.401469   755.886713           NaN   2402.826993     26.500000   \n38       67.256000   395.911888           NaN    791.922797           NaN   \n39      722.352098   405.140244           NaN  11633.406573   6469.893287   \n40      274.052448   122.585385           NaN   7014.410000   2330.955524   \n41      795.357413   455.327273           NaN   9756.677343   5300.854056   \n42       88.986224   335.433566           NaN   1236.355664    -58.445000   \n43      126.476058   481.206400           NaN   1238.293706      6.920000   \n44       92.995760   370.760839           NaN   1117.737552    -41.283333   \n45      600.786364   177.015385           NaN   6801.026643   4396.411329   \n\nDept              72            74           77         78            79  \\\nStore                                                                      \n1       47390.644895  11652.827413   677.000000  11.500000  33974.792937   \n2       72929.496643  16986.406014   817.500000  11.764000  32759.096993   \n3       22796.856573   3374.960769   424.000000   6.000000   7230.372448   \n4      101244.450839  20627.307762   344.571429   5.375000  52436.656923   \n5       11656.519091   3523.767972   465.075000   6.000000   5009.172448   \n6       80187.181119  21902.677483   625.185000   7.555556  24457.038601   \n7       45089.824895   9714.135315   293.250000  12.000000   5856.907273   \n8       37373.369301   9137.057552   333.000000   7.228000  21138.986224   \n9       32268.857133   7289.247063   477.000000   0.000000  12208.863916   \n10     142733.752168  41975.974825  1590.000000   6.000000  37787.772098   \n11      72246.888881  23297.207762   339.424000  10.833333  31344.327972   \n12      60536.222238  17777.107483   217.880000   8.090909  43270.337622   \n13      77119.189441  29780.093497  1272.000000  11.350000  53337.985175   \n14      94140.832867  25990.076923   248.250000   5.980000  37782.090839   \n15      41946.936923  13953.432937   236.108333   3.090909   8385.031259   \n16      31998.784545   9806.358601   238.500000   0.000000   5529.899790   \n17      52591.132028  15300.776993   238.500000   2.605714  27208.437622   \n18      62042.982238  22229.816503   421.000000   5.187500  22571.552238   \n19      72434.486364  18657.597832   548.750000  15.624615  21683.665594   \n20      91989.863217  22289.123077   350.082222   9.666667  38597.259231   \n21      42966.006224  11570.641049   326.000000  12.000000  22626.552727   \n22      66645.669021  18629.509860   246.000000   8.166667  16913.783147   \n23      76844.022727  37033.356713   498.000000   4.777778  31002.880350   \n24      58377.364545  14541.123357   225.833333   3.888889  22440.393916   \n25      38884.314895  11868.813287   477.000000   5.500000   8545.165524   \n26      42909.598601   8579.792797   348.750000  10.435000  12253.602238   \n27      68527.765944  27537.111259   189.077778   6.750000  36864.109580   \n28      55202.679091  13054.228462   463.000000  10.080000  43467.724895   \n29      34201.581049   8432.304336   220.000000   0.333333   8221.684126   \n30         66.886408    274.105455          NaN        NaN   5857.313916   \n31      45999.661469  15344.295734   192.333333   0.874286  36201.938601   \n32      44351.628951  14739.222168   447.500000   2.112000  15463.952797   \n33         10.453333    363.301818          NaN        NaN  10952.508112   \n34      36636.553077   7516.448182   477.000000   3.000000  14997.882308   \n35      88331.808881  21901.520490    99.096000  12.600000  25282.461469   \n36        -27.646364    602.500280          NaN        NaN  17498.489091   \n37        213.453217    681.267343          NaN        NaN   7642.500699   \n38        170.982238    393.066294          NaN        NaN   8630.962168   \n39      54929.078531  22014.285245   135.964000  12.000000  39430.359161   \n40      39443.062587   9822.268182   363.000000   7.500000  13128.156154   \n41      54877.302448  18638.237902   231.500000   9.000000  21840.979510   \n42        -43.211786    267.038043          NaN        NaN  13686.231608   \n43         84.384676    650.886084          NaN        NaN  13525.426224   \n44        102.720210    430.983706          NaN        NaN   4496.693287   \n45      37466.308392  10710.121119   190.745000  11.000000  15245.023147   \n\nDept             80            81            82            83           85  \\\nStore                                                                        \n1      17139.314615  29780.696573  20727.860909   5704.048951  3685.875524   \n2      26041.273566  31000.484266  24647.232587   5710.719650  3672.042797   \n3         24.420476   1429.300070   6746.578392     19.330000   874.128182   \n4      19379.101399  31055.285315  29371.320979   9161.217343  2730.060000   \n5          6.080000   2615.837133   3887.787483           NaN   935.077063   \n6      13724.418182  15454.445734  20111.968741   4031.013916  2682.879650   \n7        450.670296   6426.511888   9500.961958    574.099071  2056.184685   \n8       9188.915105  12591.407622  14826.027483   2633.327483  2321.860070   \n9        -10.334667   2381.783916   9933.852098           NaN   876.629441   \n10       355.171958  10607.048112  23516.407972    279.449021  2933.471538   \n11     13446.621538  12944.031469  22978.825455   3327.589650  1925.043217   \n12        56.475461   7305.612448  15254.526993    208.086014  2284.139790   \n13     18874.443636  33276.243217  32619.534056   5037.178252  4806.598951   \n14     35638.000210  40388.748881  26844.946503  10933.487902  2385.044336   \n15        44.161799   4409.563427  10606.899231    360.163077  3235.168182   \n16       309.784385   3822.620629   9439.101329    258.742105  2679.624895   \n17       798.676713  12839.772867  17173.994685    498.399790  4209.212238   \n18       373.290000  12115.718601  15535.521399   1404.947556  1749.712308   \n19     21870.027273  21678.774825  22816.835035   4239.971818  4915.799930   \n20     39870.767413  32958.593007  30421.473846   5624.949441  4993.776294   \n21        33.692235   5249.491608  15120.754615    200.042238  1441.914615   \n22      1447.042308  12368.909301  18085.210140   1535.118182  2936.096084   \n23       970.676742   8803.582378  22905.974755    976.504113  5104.391189   \n24     28479.774056  24627.877552  19401.593287   4287.338322  1759.883217   \n25       328.242014   8061.941399  10742.568601    290.784895  3403.212797   \n26     19365.780350  19192.056434  13917.993147   2883.004126  1871.351958   \n27     26832.988112  29560.686643  26075.516364   9225.643427  4228.461818   \n28     18546.610979  22125.112657  19119.629650   6364.809091  1432.971049   \n29        30.234385   5291.476643   9307.916573    758.946573  1802.412517   \n30      6619.199371  11365.228741   4564.526643   1803.641608    77.297376   \n31     19019.947902  25303.361888  18063.452098   8511.813077  1305.194196   \n32     16749.993776  17124.838112  18208.699930   3742.837762  2272.820000   \n33      8293.086923   8913.666084   3134.103007   2565.923077          NaN   \n34     11687.922448  15840.579580  15730.698601   2838.023986  1882.830490   \n35        51.006940   7423.777483  11032.787832   2497.196853  2012.566294   \n36     20561.601958  12266.726014   4846.001818   3425.058322    59.420000   \n37     10629.770490  10698.796713   5569.438322   2329.613846   127.904965   \n38     11158.941399  10260.830699   5551.165245   2392.042098    80.161357   \n39     11972.877063  19245.249650  22436.572727   5738.832517  1710.142028   \n40     16461.212797  19893.858601  13581.162028   3370.232517  1981.239790   \n41     17436.274825  19958.047483  18788.876294   3879.168741  2272.113427   \n42     15307.678322  15918.666503   7409.559441   3708.991678    62.735786   \n43     17045.276783  19464.723007   8264.136573   4952.252168    83.495833   \n44      5023.550909   7472.975944   3882.942657    952.012657   132.426304   \n45       558.634385  14653.096014  13430.491399    824.582797  2001.383077   \n\nDept             87             90            91             92            93  \\\nStore                                                                           \n1      46006.277203   82427.547832  64238.943427  135458.969510  71699.182378   \n2      24932.985804   97611.537133  80610.380350  164840.230979  70581.977063   \n3        939.435455    1540.049161    318.685594    7568.280210           NaN   \n4      14223.462308   89248.965524  66535.407203  159365.107902  67815.163007   \n5      10089.581818    3059.520000   1457.221678    7759.205594           NaN   \n6      40390.257413   53715.366084  45270.405175   99024.796503  41359.651189   \n7      11113.217203   13858.405874  10263.880000   26530.890559   1328.178252   \n8      20204.175594   39333.566154  31530.560909   60465.630000  27515.635315   \n9      14689.862937    2981.249510    869.273287   14123.063147     21.240000   \n10     24066.091538   14291.869790  12703.554406   50450.731958   1420.418462   \n11     14801.952028   48995.984196  42030.370699   77392.741608  32623.853706   \n12     11452.455664   11060.175455   6779.841469   24682.599161    562.897203   \n13     15365.753357  115592.108042  81272.990979  162034.099301  50024.937203   \n14     17387.930699  107174.743986  91406.434615  182527.956014  62088.622937   \n15      9142.630420    5345.240420   3414.740909   18262.376853    422.878252   \n16      9171.064545    6922.744685   3331.204965   20446.967832    997.032281   \n17     12189.037972   31293.306224  12033.678951   53043.348741   3646.955664   \n18     18423.949860   18481.394266  14124.482517   50079.623636   2113.300147   \n19     16986.922657   67545.406434  54692.797413  113720.212937  37087.937063   \n20     44301.724266   95858.587343  78493.190140  164633.741538  52818.583706   \n21      7308.057692   10983.598741   6735.454126   21915.114965    663.384126   \n22     14335.824825   21413.411608  21405.250629   51603.339091   2531.663986   \n23     31811.612378   20814.992168  19604.867692   59604.574615   2111.610780   \n24     25763.400070   72650.442867  52435.498252  121882.073916  37876.836853   \n25      6456.661049   11932.596503   7767.272098   38854.460699    777.747483   \n26     19821.437622   57016.589231  39434.281259   84988.311818  25615.331469   \n27     16603.751399   96374.536573  66687.096573  146518.141399  54910.693776   \n28     12536.787203   65285.952098  57575.601119   98486.960350  47923.508671   \n29      9095.476643   10950.327972   4691.213217   25166.714266   1190.882098   \n30       321.332587   34622.986224  31576.583986   53256.041399  22409.698392   \n31      8460.688252   86167.265804  70232.133566  127010.118601  57876.205664   \n32      6909.307203   61639.637133  48368.756154  100122.929021  30732.226923   \n33       332.944155   24899.923147   9862.862867   34227.662867  25648.054266   \n34      6067.450629   44338.936783  34018.102238   67782.520909  29590.111329   \n35     11760.228392   12960.450210   7919.080140   33776.032028   1528.451469   \n36       280.252353   35474.191958  11097.875874   44539.564476  26103.315664   \n37      1020.067203   44144.428112  30870.677063   59440.577133  21599.851049   \n38       582.250769   34765.576783  25404.860420   45314.434825  18868.919091   \n39      6762.436993   78649.534685  60386.286014  110126.209580  39684.510000   \n40     20070.128951   61258.202867  43256.156853   96475.753287  27532.751189   \n41     10042.527762   70852.021818  52714.928462  115827.664056  35415.340000   \n42       960.774366   53384.897902  42913.221259   83497.778671  32852.632308   \n43        79.424240   63668.895594  34808.442168   83646.160909  36196.693217   \n44       218.220909   31182.601818  18169.510070   39619.563287  11029.915734   \n45      6307.075874   23674.035245  16641.927343   48125.897762   2728.627133   \n\nDept             94             95            96            97            98  \\\nStore                                                                          \n1      63180.568182  120772.062168  33251.831639  35207.348811  11827.770769   \n2      70018.672517  143588.751888  34319.063846  40697.204056  14035.400839   \n3        656.294444   15745.528252   3934.540000    343.437357     30.570833   \n4      68159.106573  147236.473706  38346.573077  39339.238951  15009.249371   \n5        411.431486   19340.693986   5985.671119    667.070315     29.976087   \n6      41701.693497   89208.786294  30450.542238  20637.667063   9728.100629   \n7        699.332522   34208.097273   1123.383217   4374.927902    260.886596   \n8      25442.578042   62951.463706     16.986667  16978.366503   6880.466434   \n9        599.112568   29575.050769   3596.107762    372.655556     27.930000   \n10       393.833168   73344.654685  11079.676643   5323.506503    198.179091   \n11     37474.038531   77487.279091  21685.298811  16596.197552   9570.351469   \n12       355.264000   43405.853357      6.441176   2394.894755    747.609860   \n13     75522.874406  136844.834056   9165.079930  27556.759231  14980.825385   \n14     64541.165664  144446.932517      5.193846  25684.497762  17768.013706   \n15       272.906250   27291.017133   2784.158881   2071.211888    273.504884   \n16       673.280928   27385.769231    126.934126   2116.696993     42.618571   \n17       855.782273   50614.958462    819.416458   7798.283427    169.379120   \n18      4880.242248   57668.251748      0.481333   5350.500432    881.150853   \n19     37643.786434   97240.503566  15860.814825  20370.269720  12884.229091   \n20     63148.334965  150613.955385     15.266875  25836.062238  19284.377343   \n21       537.663333   40379.295175      2.000000   3260.404685    111.680672   \n22       857.190894   57868.571119      6.243000   4582.594755    177.560576   \n23       374.898804   54199.088322  13168.146713   6149.684755    100.585083   \n24     51850.045105   93927.992098  13623.074615  18597.824126   9878.970140   \n25      2607.109754   43991.147692     -1.270000   2706.628252    665.919779   \n26     42544.202028   70236.827622  18596.331888  14830.084825   8025.948601   \n27     69638.930420  119519.410909  20806.990909  21268.805734  11524.137832   \n28     36164.364615   96322.113846  26288.955734  23828.861329  10673.133077   \n29       263.083012   30980.395594     11.800000   2131.676783    139.677971   \n30     24522.622587   45456.508322  19163.112028  13172.531119   3207.034685   \n31     68732.141818  106696.019231  30335.294266  31144.978112  10101.886713   \n32     48650.040979   84695.234196   2308.411818  17160.310000   7939.262378   \n33     29002.624476   27022.949161   9371.822168   5375.769510   7340.692168   \n34     37428.096923   69245.187972  19154.212308  17570.577483   7775.998182   \n35       200.270435   43286.536993     10.788333   3738.292517     68.284831   \n36     47372.151119   39735.688741  15683.341818   6469.273636   9009.943776   \n37     33656.648112   51410.551119  20375.380769  13960.701399   5286.761119   \n38     21331.411259   41793.649021  11981.676643   9902.368182   4783.086713   \n39     59830.190280  103036.757133  27089.158601  23993.406853   9767.295734   \n40     38210.900699   66572.881259  15309.077972  17131.033497   8178.371049   \n41     47218.529161   88666.468392   2883.492238  19789.219231   9371.531608   \n42     35724.612098   61205.272308  15183.474196  17495.198811   6540.721259   \n43     50769.708322   72883.223287  25058.369371  19349.989930   9594.867483   \n44     23812.046993   31100.185175   2834.139580   6636.467413   3466.077063   \n45      3690.272090   52896.166643      2.970000   6466.961888    561.239037   \n\nDept           99  \nStore              \n1      306.091081  \n2      475.896905  \n3             NaN  \n4      623.182381  \n5             NaN  \n6      388.636750  \n7       15.000000  \n8      298.153714  \n9             NaN  \n10            NaN  \n11     520.938125  \n12      29.880000  \n13     732.604651  \n14     635.556047  \n15      29.880000  \n16      59.760000  \n17       2.290000  \n18      12.560000  \n19     440.374878  \n20     796.153864  \n21      29.880000  \n22      27.150000  \n23      29.880000  \n24     413.774211  \n25            NaN  \n26     221.950278  \n27     562.980000  \n28     316.605610  \n29      29.880000  \n30      -0.641818  \n31     218.742203  \n32     379.147250  \n33       0.022000  \n34     347.144324  \n35            NaN  \n36       0.020000  \n37      15.000000  \n38      25.000000  \n39     334.869756  \n40     167.374167  \n41     443.736512  \n42            NaN  \n43      26.250000  \n44       3.505000  \n45            NaN  ","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th>Dept</th>\n      <th>1</th>\n      <th>2</th>\n      <th>3</th>\n      <th>4</th>\n      <th>5</th>\n      <th>6</th>\n      <th>7</th>\n      <th>8</th>\n      <th>9</th>\n      <th>10</th>\n      <th>11</th>\n      <th>12</th>\n      <th>13</th>\n      <th>14</th>\n      <th>16</th>\n      <th>17</th>\n      <th>18</th>\n      <th>19</th>\n      <th>20</th>\n      <th>21</th>\n      <th>22</th>\n      <th>23</th>\n      <th>24</th>\n      <th>25</th>\n      <th>26</th>\n      <th>27</th>\n      <th>28</th>\n      <th>29</th>\n      <th>30</th>\n      <th>31</th>\n      <th>32</th>\n      <th>33</th>\n      <th>34</th>\n      <th>35</th>\n      <th>36</th>\n      <th>37</th>\n      <th>38</th>\n      <th>39</th>\n      <th>40</th>\n      <th>41</th>\n      <th>42</th>\n      <th>43</th>\n      <th>44</th>\n      <th>45</th>\n      <th>46</th>\n      <th>47</th>\n      <th>48</th>\n      <th>49</th>\n      <th>50</th>\n      <th>51</th>\n      <th>52</th>\n      <th>54</th>\n      <th>55</th>\n      <th>56</th>\n      <th>58</th>\n      <th>59</th>\n      <th>60</th>\n      <th>65</th>\n      <th>67</th>\n      <th>71</th>\n      <th>72</th>\n      <th>74</th>\n      <th>77</th>\n      <th>78</th>\n      <th>79</th>\n      <th>80</th>\n      <th>81</th>\n      <th>82</th>\n      <th>83</th>\n      <th>85</th>\n      <th>87</th>\n      <th>90</th>\n      <th>91</th>\n      <th>92</th>\n      <th>93</th>\n      <th>94</th>\n      <th>95</th>\n      <th>96</th>\n      <th>97</th>\n      <th>98</th>\n      <th>99</th>\n    </tr>\n    <tr>\n      <th>Store</th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>1</th>\n      <td>22513.322937</td>\n      <td>46102.090420</td>\n      <td>13150.478042</td>\n      <td>36964.154476</td>\n      <td>24257.941119</td>\n      <td>4801.780140</td>\n      <td>24566.487413</td>\n      <td>35718.257622</td>\n      <td>28062.052238</td>\n      <td>31033.386364</td>\n      <td>24919.270629</td>\n      <td>10566.545315</td>\n      <td>38692.880490</td>\n      <td>15268.550909</td>\n      <td>24151.061329</td>\n      <td>9196.557902</td>\n      <td>7765.304425</td>\n      <td>1259.018531</td>\n      <td>4091.571538</td>\n      <td>7808.450559</td>\n      <td>8052.076154</td>\n      <td>21623.184685</td>\n      <td>6187.389720</td>\n      <td>10152.336783</td>\n      <td>6767.997273</td>\n      <td>1374.649650</td>\n      <td>593.113986</td>\n      <td>4651.040210</td>\n      <td>3415.295035</td>\n      <td>2408.533287</td>\n      <td>8202.668392</td>\n      <td>5946.431189</td>\n      <td>11530.831678</td>\n      <td>2535.730909</td>\n      <td>1476.203566</td>\n      <td>2800.495105</td>\n      <td>79978.222587</td>\n      <td>NaN</td>\n      <td>58510.409161</td>\n      <td>1064.769650</td>\n      <td>7940.326224</td>\n      <td>NaN</td>\n      <td>4872.724406</td>\n      <td>23.995070</td>\n      <td>19662.989860</td>\n      <td>-116.454545</td>\n      <td>917.727920</td>\n      <td>11437.931259</td>\n      <td>NaN</td>\n      <td>32.712727</td>\n      <td>2355.439371</td>\n      <td>90.921053</td>\n      <td>12817.843357</td>\n      <td>4000.480629</td>\n      <td>3372.474476</td>\n      <td>857.775105</td>\n      <td>1020.995804</td>\n      <td>NaN</td>\n      <td>7436.017343</td>\n      <td>2732.473357</td>\n      <td>47390.644895</td>\n      <td>11652.827413</td>\n      <td>677.000000</td>\n      <td>11.500000</td>\n      <td>33974.792937</td>\n      <td>17139.314615</td>\n      <td>29780.696573</td>\n      <td>20727.860909</td>\n      <td>5704.048951</td>\n      <td>3685.875524</td>\n      <td>46006.277203</td>\n      <td>82427.547832</td>\n      <td>64238.943427</td>\n      <td>135458.969510</td>\n      <td>71699.182378</td>\n      <td>63180.568182</td>\n      <td>120772.062168</td>\n      <td>33251.831639</td>\n      <td>35207.348811</td>\n      <td>11827.770769</td>\n      <td>306.091081</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>30777.980769</td>\n      <td>65912.922517</td>\n      <td>17476.563357</td>\n      <td>45607.666573</td>\n      <td>30555.315315</td>\n      <td>6808.382517</td>\n      <td>40477.837063</td>\n      <td>58707.369441</td>\n      <td>34375.864476</td>\n      <td>38845.854476</td>\n      <td>23382.686154</td>\n      <td>7735.946294</td>\n      <td>46117.959231</td>\n      <td>21314.132937</td>\n      <td>27005.179650</td>\n      <td>13790.854196</td>\n      <td>11687.563009</td>\n      <td>4053.439930</td>\n      <td>5748.619441</td>\n      <td>9910.939860</td>\n      <td>12923.013846</td>\n      <td>29170.616573</td>\n      <td>8309.564545</td>\n      <td>15299.508392</td>\n      <td>9347.725105</td>\n      <td>1837.954615</td>\n      <td>798.913217</td>\n      <td>7111.482657</td>\n      <td>4981.155385</td>\n      <td>3884.756993</td>\n      <td>11755.096713</td>\n      <td>7488.096993</td>\n      <td>17595.203497</td>\n      <td>3875.588601</td>\n      <td>2631.750559</td>\n      <td>4500.250769</td>\n      <td>85114.996014</td>\n      <td>2.340000</td>\n      <td>78174.560210</td>\n      <td>2592.220769</td>\n      <td>8768.857692</td>\n      <td>NaN</td>\n      <td>7245.541189</td>\n      <td>29.139848</td>\n      <td>29675.324545</td>\n      <td>18.068182</td>\n      <td>1358.347914</td>\n      <td>15568.465664</td>\n      <td>NaN</td>\n      <td>16.226667</td>\n      <td>4148.373566</td>\n      <td>104.502868</td>\n      <td>13060.297692</td>\n      <td>5545.122308</td>\n      <td>21610.019091</td>\n      <td>1391.520559</td>\n      <td>221.545946</td>\n      <td>NaN</td>\n      <td>12125.255594</td>\n      <td>4634.609371</td>\n      <td>72929.496643</td>\n      <td>16986.406014</td>\n      <td>817.500000</td>\n      <td>11.764000</td>\n      <td>32759.096993</td>\n      <td>26041.273566</td>\n      <td>31000.484266</td>\n      <td>24647.232587</td>\n      <td>5710.719650</td>\n      <td>3672.042797</td>\n      <td>24932.985804</td>\n      <td>97611.537133</td>\n      <td>80610.380350</td>\n      <td>164840.230979</td>\n      <td>70581.977063</td>\n      <td>70018.672517</td>\n      <td>143588.751888</td>\n      <td>34319.063846</td>\n      <td>40697.204056</td>\n      <td>14035.400839</td>\n      <td>475.896905</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>7328.621049</td>\n      <td>16841.775664</td>\n      <td>5509.300769</td>\n      <td>8434.186503</td>\n      <td>11695.366573</td>\n      <td>2012.411818</td>\n      <td>10044.341608</td>\n      <td>8310.254196</td>\n      <td>9062.007692</td>\n      <td>10871.944126</td>\n      <td>8774.928042</td>\n      <td>2383.603007</td>\n      <td>11363.061678</td>\n      <td>4626.649021</td>\n      <td>7871.568322</td>\n      <td>2634.199650</td>\n      <td>2960.677739</td>\n      <td>731.313147</td>\n      <td>1682.199231</td>\n      <td>1244.529650</td>\n      <td>3101.769860</td>\n      <td>10913.330070</td>\n      <td>2763.627343</td>\n      <td>4260.447972</td>\n      <td>2850.050839</td>\n      <td>500.193636</td>\n      <td>166.870070</td>\n      <td>1517.404056</td>\n      <td>1243.926993</td>\n      <td>878.475455</td>\n      <td>4296.111049</td>\n      <td>3228.155105</td>\n      <td>4579.719161</td>\n      <td>1439.325524</td>\n      <td>622.689371</td>\n      <td>NaN</td>\n      <td>108598.364126</td>\n      <td>NaN</td>\n      <td>18203.108252</td>\n      <td>646.832028</td>\n      <td>4422.944406</td>\n      <td>NaN</td>\n      <td>2133.657762</td>\n      <td>9.922500</td>\n      <td>6179.259510</td>\n      <td>38.875000</td>\n      <td>NaN</td>\n      <td>17.581481</td>\n      <td>NaN</td>\n      <td>5.411803</td>\n      <td>961.390210</td>\n      <td>58.311239</td>\n      <td>7153.737902</td>\n      <td>1606.808881</td>\n      <td>NaN</td>\n      <td>244.878455</td>\n      <td>138.125874</td>\n      <td>NaN</td>\n      <td>2021.482657</td>\n      <td>1101.610000</td>\n      <td>22796.856573</td>\n      <td>3374.960769</td>\n      <td>424.000000</td>\n      <td>6.000000</td>\n      <td>7230.372448</td>\n      <td>24.420476</td>\n      <td>1429.300070</td>\n      <td>6746.578392</td>\n      <td>19.330000</td>\n      <td>874.128182</td>\n      <td>939.435455</td>\n      <td>1540.049161</td>\n      <td>318.685594</td>\n      <td>7568.280210</td>\n      <td>NaN</td>\n      <td>656.294444</td>\n      <td>15745.528252</td>\n      <td>3934.540000</td>\n      <td>343.437357</td>\n      <td>30.570833</td>\n      <td>NaN</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>36979.940070</td>\n      <td>93639.315385</td>\n      <td>19012.491678</td>\n      <td>56603.400140</td>\n      <td>45668.406783</td>\n      <td>8241.777692</td>\n      <td>50728.151399</td>\n      <td>62949.723776</td>\n      <td>34437.170979</td>\n      <td>37269.667413</td>\n      <td>27145.836643</td>\n      <td>8141.910979</td>\n      <td>69596.447343</td>\n      <td>28567.509441</td>\n      <td>21270.153007</td>\n      <td>15815.878042</td>\n      <td>13146.543790</td>\n      <td>3038.317762</td>\n      <td>8888.302867</td>\n      <td>8865.273147</td>\n      <td>17289.916294</td>\n      <td>46234.012867</td>\n      <td>10875.301189</td>\n      <td>15640.748531</td>\n      <td>18429.759930</td>\n      <td>2579.906154</td>\n      <td>916.232238</td>\n      <td>9472.121189</td>\n      <td>7683.686783</td>\n      <td>3813.243986</td>\n      <td>13685.430350</td>\n      <td>12304.056224</td>\n      <td>25142.675385</td>\n      <td>4376.574755</td>\n      <td>3005.231469</td>\n      <td>3640.752727</td>\n      <td>80093.946084</td>\n      <td>1.560000</td>\n      <td>78729.263077</td>\n      <td>975.417622</td>\n      <td>9511.818531</td>\n      <td>NaN</td>\n      <td>5441.563566</td>\n      <td>13.696939</td>\n      <td>39128.896154</td>\n      <td>23.536154</td>\n      <td>2324.615532</td>\n      <td>6911.676643</td>\n      <td>NaN</td>\n      <td>8.200000</td>\n      <td>3721.521329</td>\n      <td>131.887000</td>\n      <td>18662.627203</td>\n      <td>6040.540839</td>\n      <td>6078.142308</td>\n      <td>1586.446993</td>\n      <td>410.795105</td>\n      <td>NaN</td>\n      <td>12471.426713</td>\n      <td>7686.018741</td>\n      <td>101244.450839</td>\n      <td>20627.307762</td>\n      <td>344.571429</td>\n      <td>5.375000</td>\n      <td>52436.656923</td>\n      <td>19379.101399</td>\n      <td>31055.285315</td>\n      <td>29371.320979</td>\n      <td>9161.217343</td>\n      <td>2730.060000</td>\n      <td>14223.462308</td>\n      <td>89248.965524</td>\n      <td>66535.407203</td>\n      <td>159365.107902</td>\n      <td>67815.163007</td>\n      <td>68159.106573</td>\n      <td>147236.473706</td>\n      <td>38346.573077</td>\n      <td>39339.238951</td>\n      <td>15009.249371</td>\n      <td>623.182381</td>\n    </tr>\n    <tr>\n      <th>5</th>\n      <td>9774.553077</td>\n      <td>12317.953287</td>\n      <td>4101.085175</td>\n      <td>9860.806783</td>\n      <td>6699.202238</td>\n      <td>1191.057622</td>\n      <td>6124.484336</td>\n      <td>13735.709441</td>\n      <td>7919.805944</td>\n      <td>9783.395385</td>\n      <td>7389.049441</td>\n      <td>2515.347273</td>\n      <td>11242.656084</td>\n      <td>3697.422378</td>\n      <td>7717.567622</td>\n      <td>2396.781329</td>\n      <td>2185.893000</td>\n      <td>46.327368</td>\n      <td>1220.832797</td>\n      <td>1316.414615</td>\n      <td>2430.053986</td>\n      <td>6141.862727</td>\n      <td>1480.232797</td>\n      <td>2685.578182</td>\n      <td>1782.209510</td>\n      <td>377.289161</td>\n      <td>203.282378</td>\n      <td>1343.724895</td>\n      <td>857.152448</td>\n      <td>655.449790</td>\n      <td>2450.897622</td>\n      <td>1598.760909</td>\n      <td>3602.762587</td>\n      <td>1162.082028</td>\n      <td>587.063706</td>\n      <td>NaN</td>\n      <td>55199.791888</td>\n      <td>NaN</td>\n      <td>19328.994965</td>\n      <td>524.753217</td>\n      <td>2932.116154</td>\n      <td>NaN</td>\n      <td>1317.444126</td>\n      <td>18.588261</td>\n      <td>4895.629510</td>\n      <td>38.727273</td>\n      <td>NaN</td>\n      <td>39.141607</td>\n      <td>NaN</td>\n      <td>6.680000</td>\n      <td>530.814685</td>\n      <td>45.917755</td>\n      <td>3445.100000</td>\n      <td>1220.316713</td>\n      <td>871.176471</td>\n      <td>78.256019</td>\n      <td>236.531469</td>\n      <td>NaN</td>\n      <td>3036.864545</td>\n      <td>456.661259</td>\n      <td>11656.519091</td>\n      <td>3523.767972</td>\n      <td>465.075000</td>\n      <td>6.000000</td>\n      <td>5009.172448</td>\n      <td>6.080000</td>\n      <td>2615.837133</td>\n      <td>3887.787483</td>\n      <td>NaN</td>\n      <td>935.077063</td>\n      <td>10089.581818</td>\n      <td>3059.520000</td>\n      <td>1457.221678</td>\n      <td>7759.205594</td>\n      <td>NaN</td>\n      <td>411.431486</td>\n      <td>19340.693986</td>\n      <td>5985.671119</td>\n      <td>667.070315</td>\n      <td>29.976087</td>\n      <td>NaN</td>\n    </tr>\n    <tr>\n      <th>6</th>\n      <td>23867.553776</td>\n      <td>50269.437273</td>\n      <td>16806.638811</td>\n      <td>34187.366503</td>\n      <td>34465.307622</td>\n      <td>7225.566643</td>\n      <td>34526.870420</td>\n      <td>47577.719790</td>\n      <td>48271.060140</td>\n      <td>47436.477902</td>\n      <td>21882.119091</td>\n      <td>6683.218671</td>\n      <td>37746.931399</td>\n      <td>25583.741399</td>\n      <td>28204.007552</td>\n      <td>16296.992448</td>\n      <td>11500.897168</td>\n      <td>2585.304755</td>\n      <td>9299.858601</td>\n      <td>9398.605455</td>\n      <td>18833.150909</td>\n      <td>30538.913776</td>\n      <td>6789.380909</td>\n      <td>13777.691399</td>\n      <td>9098.639371</td>\n      <td>1798.563846</td>\n      <td>578.535455</td>\n      <td>6858.093916</td>\n      <td>5020.268182</td>\n      <td>3248.543776</td>\n      <td>11369.829650</td>\n      <td>7213.951469</td>\n      <td>18101.451329</td>\n      <td>3551.453706</td>\n      <td>3456.005385</td>\n      <td>3911.769091</td>\n      <td>78545.199161</td>\n      <td>NaN</td>\n      <td>65833.727203</td>\n      <td>2641.542378</td>\n      <td>9399.415035</td>\n      <td>NaN</td>\n      <td>7780.472238</td>\n      <td>39.007910</td>\n      <td>27602.171958</td>\n      <td>-42.023333</td>\n      <td>1779.871418</td>\n      <td>12496.313147</td>\n      <td>NaN</td>\n      <td>31.228750</td>\n      <td>4208.439580</td>\n      <td>156.990780</td>\n      <td>16407.804476</td>\n      <td>6530.876154</td>\n      <td>2993.474895</td>\n      <td>1016.749091</td>\n      <td>295.855824</td>\n      <td>NaN</td>\n      <td>11701.160699</td>\n      <td>5752.100909</td>\n      <td>80187.181119</td>\n      <td>21902.677483</td>\n      <td>625.185000</td>\n      <td>7.555556</td>\n      <td>24457.038601</td>\n      <td>13724.418182</td>\n      <td>15454.445734</td>\n      <td>20111.968741</td>\n      <td>4031.013916</td>\n      <td>2682.879650</td>\n      <td>40390.257413</td>\n      <td>53715.366084</td>\n      <td>45270.405175</td>\n      <td>99024.796503</td>\n      <td>41359.651189</td>\n      <td>41701.693497</td>\n      <td>89208.786294</td>\n      <td>30450.542238</td>\n      <td>20637.667063</td>\n      <td>9728.100629</td>\n      <td>388.636750</td>\n    </tr>\n    <tr>\n      <th>7</th>\n      <td>9542.801259</td>\n      <td>22603.690769</td>\n      <td>8633.536923</td>\n      <td>14950.518601</td>\n      <td>13860.350490</td>\n      <td>6329.928811</td>\n      <td>10925.757063</td>\n      <td>13970.619371</td>\n      <td>29722.736084</td>\n      <td>21136.560280</td>\n      <td>15362.294126</td>\n      <td>5674.272517</td>\n      <td>14916.528392</td>\n      <td>10108.054476</td>\n      <td>13788.448881</td>\n      <td>5568.405385</td>\n      <td>4255.952842</td>\n      <td>468.264615</td>\n      <td>3127.778531</td>\n      <td>1885.265175</td>\n      <td>6814.387692</td>\n      <td>14138.214266</td>\n      <td>2555.765245</td>\n      <td>5219.990280</td>\n      <td>1948.915804</td>\n      <td>644.632867</td>\n      <td>190.669510</td>\n      <td>1363.612448</td>\n      <td>1103.170979</td>\n      <td>1799.559231</td>\n      <td>5376.747902</td>\n      <td>2279.562098</td>\n      <td>4684.393776</td>\n      <td>403.049021</td>\n      <td>1880.910140</td>\n      <td>NaN</td>\n      <td>31451.814685</td>\n      <td>NaN</td>\n      <td>31603.352098</td>\n      <td>1606.004406</td>\n      <td>6485.042308</td>\n      <td>NaN</td>\n      <td>3562.497203</td>\n      <td>22.821059</td>\n      <td>14670.128741</td>\n      <td>-9.906250</td>\n      <td>1385.855422</td>\n      <td>31.356711</td>\n      <td>NaN</td>\n      <td>35.368205</td>\n      <td>1303.614615</td>\n      <td>65.396000</td>\n      <td>6616.540490</td>\n      <td>6417.879021</td>\n      <td>972.628500</td>\n      <td>81.489487</td>\n      <td>99.733986</td>\n      <td>NaN</td>\n      <td>3989.642098</td>\n      <td>2394.079790</td>\n      <td>45089.824895</td>\n      <td>9714.135315</td>\n      <td>293.250000</td>\n      <td>12.000000</td>\n      <td>5856.907273</td>\n      <td>450.670296</td>\n      <td>6426.511888</td>\n      <td>9500.961958</td>\n      <td>574.099071</td>\n      <td>2056.184685</td>\n      <td>11113.217203</td>\n      <td>13858.405874</td>\n      <td>10263.880000</td>\n      <td>26530.890559</td>\n      <td>1328.178252</td>\n      <td>699.332522</td>\n      <td>34208.097273</td>\n      <td>1123.383217</td>\n      <td>4374.927902</td>\n      <td>260.886596</td>\n      <td>15.000000</td>\n    </tr>\n    <tr>\n      <th>8</th>\n      <td>14789.827343</td>\n      <td>35729.821748</td>\n      <td>10683.305105</td>\n      <td>21089.309301</td>\n      <td>19838.849231</td>\n      <td>3395.425455</td>\n      <td>20268.743776</td>\n      <td>26438.524336</td>\n      <td>11792.661678</td>\n      <td>20666.433776</td>\n      <td>18628.061469</td>\n      <td>7132.540769</td>\n      <td>25257.586434</td>\n      <td>10771.757343</td>\n      <td>16500.473776</td>\n      <td>7494.439021</td>\n      <td>6304.318017</td>\n      <td>1065.873916</td>\n      <td>3771.235734</td>\n      <td>4685.762378</td>\n      <td>7138.113287</td>\n      <td>14693.072587</td>\n      <td>4429.390909</td>\n      <td>6801.176503</td>\n      <td>6156.060979</td>\n      <td>923.820699</td>\n      <td>316.680839</td>\n      <td>2915.290070</td>\n      <td>2335.261818</td>\n      <td>1415.699650</td>\n      <td>5807.735245</td>\n      <td>5115.140979</td>\n      <td>8371.814056</td>\n      <td>1885.470210</td>\n      <td>989.164406</td>\n      <td>2248.622028</td>\n      <td>58609.542937</td>\n      <td>NaN</td>\n      <td>38028.880699</td>\n      <td>1147.069161</td>\n      <td>5284.069161</td>\n      <td>NaN</td>\n      <td>3700.214406</td>\n      <td>6.166429</td>\n      <td>17933.371259</td>\n      <td>41.958333</td>\n      <td>NaN</td>\n      <td>2272.392308</td>\n      <td>NaN</td>\n      <td>17.386667</td>\n      <td>1945.215594</td>\n      <td>67.894803</td>\n      <td>7072.041049</td>\n      <td>5129.931049</td>\n      <td>2025.435115</td>\n      <td>620.909720</td>\n      <td>236.345455</td>\n      <td>NaN</td>\n      <td>5298.260280</td>\n      <td>2299.299301</td>\n      <td>37373.369301</td>\n      <td>9137.057552</td>\n      <td>333.000000</td>\n      <td>7.228000</td>\n      <td>21138.986224</td>\n      <td>9188.915105</td>\n      <td>12591.407622</td>\n      <td>14826.027483</td>\n      <td>2633.327483</td>\n      <td>2321.860070</td>\n      <td>20204.175594</td>\n      <td>39333.566154</td>\n      <td>31530.560909</td>\n      <td>60465.630000</td>\n      <td>27515.635315</td>\n      <td>25442.578042</td>\n      <td>62951.463706</td>\n      <td>16.986667</td>\n      <td>16978.366503</td>\n      <td>6880.466434</td>\n      <td>298.153714</td>\n    </tr>\n    <tr>\n      <th>9</th>\n      <td>11846.558252</td>\n      <td>24969.477413</td>\n      <td>7497.356783</td>\n      <td>17165.947762</td>\n      <td>19282.746014</td>\n      <td>2806.416364</td>\n      <td>13826.694336</td>\n      <td>21424.470699</td>\n      <td>13196.569720</td>\n      <td>12810.480350</td>\n      <td>14721.070979</td>\n      <td>6466.066014</td>\n      <td>22133.400629</td>\n      <td>7369.519580</td>\n      <td>12013.562797</td>\n      <td>4951.019091</td>\n      <td>4100.968364</td>\n      <td>1444.764755</td>\n      <td>2567.934895</td>\n      <td>3614.488741</td>\n      <td>4941.852587</td>\n      <td>11000.589720</td>\n      <td>2477.753986</td>\n      <td>5204.926434</td>\n      <td>4032.770769</td>\n      <td>703.237413</td>\n      <td>246.345664</td>\n      <td>1919.389231</td>\n      <td>1601.397972</td>\n      <td>1100.412028</td>\n      <td>4458.402797</td>\n      <td>2564.069301</td>\n      <td>5711.079091</td>\n      <td>1445.754406</td>\n      <td>800.506408</td>\n      <td>NaN</td>\n      <td>78211.802657</td>\n      <td>NaN</td>\n      <td>29158.154126</td>\n      <td>1008.202098</td>\n      <td>3063.908252</td>\n      <td>NaN</td>\n      <td>3328.352727</td>\n      <td>14.957647</td>\n      <td>7773.091469</td>\n      <td>-3.070000</td>\n      <td>763.787879</td>\n      <td>39.097101</td>\n      <td>NaN</td>\n      <td>4.720000</td>\n      <td>1672.207133</td>\n      <td>57.523800</td>\n      <td>8607.050490</td>\n      <td>3070.459645</td>\n      <td>NaN</td>\n      <td>214.684188</td>\n      <td>80.780000</td>\n      <td>NaN</td>\n      <td>3493.406224</td>\n      <td>1389.086294</td>\n      <td>32268.857133</td>\n      <td>7289.247063</td>\n      <td>477.000000</td>\n      <td>0.000000</td>\n      <td>12208.863916</td>\n      <td>-10.334667</td>\n      <td>2381.783916</td>\n      <td>9933.852098</td>\n      <td>NaN</td>\n      <td>876.629441</td>\n      <td>14689.862937</td>\n      <td>2981.249510</td>\n      <td>869.273287</td>\n      <td>14123.063147</td>\n      <td>21.240000</td>\n      <td>599.112568</td>\n      <td>29575.050769</td>\n      <td>3596.107762</td>\n      <td>372.655556</td>\n      <td>27.930000</td>\n      <td>NaN</td>\n    </tr>\n    <tr>\n      <th>10</th>\n      <td>39925.138951</td>\n      <td>109795.291469</td>\n      <td>32086.181469</td>\n      <td>48579.826364</td>\n      <td>58373.460280</td>\n      <td>10556.550769</td>\n      <td>58964.715664</td>\n      <td>86739.846643</td>\n      <td>64436.722517</td>\n      <td>48108.063497</td>\n      <td>32911.815385</td>\n      <td>9243.158531</td>\n      <td>62799.067483</td>\n      <td>40044.637762</td>\n      <td>30273.874755</td>\n      <td>27206.583357</td>\n      <td>18255.933810</td>\n      <td>3077.088462</td>\n      <td>15551.453776</td>\n      <td>9678.942098</td>\n      <td>25618.934126</td>\n      <td>65729.846573</td>\n      <td>15179.222937</td>\n      <td>21141.616294</td>\n      <td>17197.121678</td>\n      <td>4361.426503</td>\n      <td>1327.127273</td>\n      <td>15703.823427</td>\n      <td>11490.118951</td>\n      <td>6122.350070</td>\n      <td>21571.249510</td>\n      <td>14919.342587</td>\n      <td>43753.474615</td>\n      <td>8592.219091</td>\n      <td>3654.797832</td>\n      <td>4048.279441</td>\n      <td>88068.007762</td>\n      <td>NaN</td>\n      <td>99866.581608</td>\n      <td>10875.343566</td>\n      <td>11608.849510</td>\n      <td>NaN</td>\n      <td>8878.497692</td>\n      <td>33.193038</td>\n      <td>54965.004685</td>\n      <td>-64.694444</td>\n      <td>2175.001399</td>\n      <td>19815.522378</td>\n      <td>4257.660280</td>\n      <td>35.028462</td>\n      <td>5158.843357</td>\n      <td>217.283597</td>\n      <td>20608.687972</td>\n      <td>1265.848392</td>\n      <td>4554.738322</td>\n      <td>2006.511119</td>\n      <td>505.600000</td>\n      <td>NaN</td>\n      <td>13352.773566</td>\n      <td>15768.505524</td>\n      <td>142733.752168</td>\n      <td>41975.974825</td>\n      <td>1590.000000</td>\n      <td>6.000000</td>\n      <td>37787.772098</td>\n      <td>355.171958</td>\n      <td>10607.048112</td>\n      <td>23516.407972</td>\n      <td>279.449021</td>\n      <td>2933.471538</td>\n      <td>24066.091538</td>\n      <td>14291.869790</td>\n      <td>12703.554406</td>\n      <td>50450.731958</td>\n      <td>1420.418462</td>\n      <td>393.833168</td>\n      <td>73344.654685</td>\n      <td>11079.676643</td>\n      <td>5323.506503</td>\n      <td>198.179091</td>\n      <td>NaN</td>\n    </tr>\n    <tr>\n      <th>11</th>\n      <td>18860.911958</td>\n      <td>57114.326224</td>\n      <td>17628.778671</td>\n      <td>28837.744545</td>\n      <td>36663.363916</td>\n      <td>5925.281678</td>\n      <td>34844.108462</td>\n      <td>34415.449580</td>\n      <td>19056.162168</td>\n      <td>23449.992727</td>\n      <td>18045.040210</td>\n      <td>4293.703497</td>\n      <td>41228.146154</td>\n      <td>24644.513077</td>\n      <td>15371.136434</td>\n      <td>13373.138322</td>\n      <td>11033.074286</td>\n      <td>1435.587073</td>\n      <td>9634.961958</td>\n      <td>7571.596573</td>\n      <td>15500.204266</td>\n      <td>34322.483497</td>\n      <td>8592.320839</td>\n      <td>11419.655385</td>\n      <td>11332.874685</td>\n      <td>2203.137483</td>\n      <td>912.481958</td>\n      <td>9225.784755</td>\n      <td>6765.267762</td>\n      <td>2947.045455</td>\n      <td>10765.959091</td>\n      <td>8348.490559</td>\n      <td>22379.140210</td>\n      <td>4222.688881</td>\n      <td>2976.055245</td>\n      <td>3933.259790</td>\n      <td>73555.425385</td>\n      <td>NaN</td>\n      <td>53640.645105</td>\n      <td>1295.749720</td>\n      <td>6152.948112</td>\n      <td>NaN</td>\n      <td>5414.242098</td>\n      <td>17.969577</td>\n      <td>27483.859860</td>\n      <td>0.920000</td>\n      <td>7.500000</td>\n      <td>8122.647762</td>\n      <td>19.750000</td>\n      <td>14.503333</td>\n      <td>2558.425804</td>\n      <td>243.776475</td>\n      <td>12609.361259</td>\n      <td>3346.916573</td>\n      <td>3298.496294</td>\n      <td>1057.406364</td>\n      <td>187.707143</td>\n      <td>NaN</td>\n      <td>10119.990979</td>\n      <td>9661.256014</td>\n      <td>72246.888881</td>\n      <td>23297.207762</td>\n      <td>339.424000</td>\n      <td>10.833333</td>\n      <td>31344.327972</td>\n      <td>13446.621538</td>\n      <td>12944.031469</td>\n      <td>22978.825455</td>\n      <td>3327.589650</td>\n      <td>1925.043217</td>\n      <td>14801.952028</td>\n      <td>48995.984196</td>\n      <td>42030.370699</td>\n      <td>77392.741608</td>\n      <td>32623.853706</td>\n      <td>37474.038531</td>\n      <td>77487.279091</td>\n      <td>21685.298811</td>\n      <td>16596.197552</td>\n      <td>9570.351469</td>\n      <td>520.938125</td>\n    </tr>\n    <tr>\n      <th>12</th>\n      <td>17330.087622</td>\n      <td>74494.846224</td>\n      <td>17535.251678</td>\n      <td>26673.788182</td>\n      <td>27756.204615</td>\n      <td>6741.174895</td>\n      <td>34242.449161</td>\n      <td>42229.665035</td>\n      <td>19553.030490</td>\n      <td>17975.211119</td>\n      <td>17789.776993</td>\n      <td>4878.279650</td>\n      <td>46974.984965</td>\n      <td>19719.239650</td>\n      <td>7579.577552</td>\n      <td>11666.809161</td>\n      <td>9893.141316</td>\n      <td>2949.156084</td>\n      <td>6558.721329</td>\n      <td>4225.581189</td>\n      <td>10085.826154</td>\n      <td>38809.980769</td>\n      <td>11182.713077</td>\n      <td>20129.949790</td>\n      <td>13748.230000</td>\n      <td>2017.176364</td>\n      <td>880.158881</td>\n      <td>6973.458392</td>\n      <td>5950.700140</td>\n      <td>3510.652587</td>\n      <td>9506.941888</td>\n      <td>10888.284196</td>\n      <td>23284.510909</td>\n      <td>2952.662308</td>\n      <td>2468.503636</td>\n      <td>NaN</td>\n      <td>51935.883147</td>\n      <td>NaN</td>\n      <td>48414.821678</td>\n      <td>770.451259</td>\n      <td>5995.964685</td>\n      <td>NaN</td>\n      <td>6753.662587</td>\n      <td>27.718171</td>\n      <td>32805.734196</td>\n      <td>-43.899091</td>\n      <td>NaN</td>\n      <td>26.183158</td>\n      <td>NaN</td>\n      <td>13.154000</td>\n      <td>3806.997203</td>\n      <td>129.717941</td>\n      <td>14179.372727</td>\n      <td>1000.415315</td>\n      <td>2580.660146</td>\n      <td>1250.024476</td>\n      <td>419.502098</td>\n      <td>NaN</td>\n      <td>6223.470210</td>\n      <td>7628.997133</td>\n      <td>60536.222238</td>\n      <td>17777.107483</td>\n      <td>217.880000</td>\n      <td>8.090909</td>\n      <td>43270.337622</td>\n      <td>56.475461</td>\n      <td>7305.612448</td>\n      <td>15254.526993</td>\n      <td>208.086014</td>\n      <td>2284.139790</td>\n      <td>11452.455664</td>\n      <td>11060.175455</td>\n      <td>6779.841469</td>\n      <td>24682.599161</td>\n      <td>562.897203</td>\n      <td>355.264000</td>\n      <td>43405.853357</td>\n      <td>6.441176</td>\n      <td>2394.894755</td>\n      <td>747.609860</td>\n      <td>29.880000</td>\n    </tr>\n    <tr>\n      <th>13</th>\n      <td>47020.455455</td>\n      <td>76339.960000</td>\n      <td>26116.623706</td>\n      <td>42563.275455</td>\n      <td>56786.934755</td>\n      <td>7886.826993</td>\n      <td>59896.738601</td>\n      <td>36238.867972</td>\n      <td>41236.445175</td>\n      <td>29431.879231</td>\n      <td>21280.789790</td>\n      <td>7926.647483</td>\n      <td>47698.818182</td>\n      <td>26378.644196</td>\n      <td>22255.482098</td>\n      <td>17713.297902</td>\n      <td>17013.656410</td>\n      <td>3979.954056</td>\n      <td>8781.979231</td>\n      <td>9117.091259</td>\n      <td>16476.987692</td>\n      <td>30216.258741</td>\n      <td>10426.793077</td>\n      <td>15181.840140</td>\n      <td>12958.888392</td>\n      <td>2685.000140</td>\n      <td>1410.386713</td>\n      <td>6152.025944</td>\n      <td>4520.360559</td>\n      <td>3977.739091</td>\n      <td>10234.196643</td>\n      <td>10897.800070</td>\n      <td>19201.303636</td>\n      <td>3660.573986</td>\n      <td>2464.866713</td>\n      <td>3510.937273</td>\n      <td>83485.895804</td>\n      <td>NaN</td>\n      <td>77752.306713</td>\n      <td>2757.629580</td>\n      <td>8015.876364</td>\n      <td>1.070000</td>\n      <td>10270.138112</td>\n      <td>22.433516</td>\n      <td>41422.690559</td>\n      <td>221.294000</td>\n      <td>1321.433525</td>\n      <td>9206.929441</td>\n      <td>2175.795455</td>\n      <td>21.398947</td>\n      <td>4579.380280</td>\n      <td>114.982857</td>\n      <td>20055.630000</td>\n      <td>6751.401469</td>\n      <td>7501.691259</td>\n      <td>1327.836364</td>\n      <td>950.973427</td>\n      <td>NaN</td>\n      <td>16219.265594</td>\n      <td>9723.250210</td>\n      <td>77119.189441</td>\n      <td>29780.093497</td>\n      <td>1272.000000</td>\n      <td>11.350000</td>\n      <td>53337.985175</td>\n      <td>18874.443636</td>\n      <td>33276.243217</td>\n      <td>32619.534056</td>\n      <td>5037.178252</td>\n      <td>4806.598951</td>\n      <td>15365.753357</td>\n      <td>115592.108042</td>\n      <td>81272.990979</td>\n      <td>162034.099301</td>\n      <td>50024.937203</td>\n      <td>75522.874406</td>\n      <td>136844.834056</td>\n      <td>9165.079930</td>\n      <td>27556.759231</td>\n      <td>14980.825385</td>\n      <td>732.604651</td>\n    </tr>\n    <tr>\n      <th>14</th>\n      <td>30611.783357</td>\n      <td>77704.857972</td>\n      <td>19418.273986</td>\n      <td>52936.323287</td>\n      <td>33468.325035</td>\n      <td>7016.829790</td>\n      <td>53256.150280</td>\n      <td>53425.359860</td>\n      <td>22025.603497</td>\n      <td>20165.667133</td>\n      <td>20359.693077</td>\n      <td>5467.919301</td>\n      <td>60009.833706</td>\n      <td>24775.077972</td>\n      <td>29647.140140</td>\n      <td>23075.393916</td>\n      <td>14279.863689</td>\n      <td>1041.957762</td>\n      <td>11375.547133</td>\n      <td>8697.367413</td>\n      <td>18677.513077</td>\n      <td>35968.250699</td>\n      <td>9186.777343</td>\n      <td>14231.128531</td>\n      <td>12048.150699</td>\n      <td>2564.011329</td>\n      <td>1223.812657</td>\n      <td>9880.402308</td>\n      <td>6691.436434</td>\n      <td>3804.086364</td>\n      <td>12817.232867</td>\n      <td>9513.732028</td>\n      <td>24504.491538</td>\n      <td>4034.992028</td>\n      <td>3415.643636</td>\n      <td>NaN</td>\n      <td>103360.027343</td>\n      <td>NaN</td>\n      <td>72356.461049</td>\n      <td>4054.569860</td>\n      <td>7869.010350</td>\n      <td>0.250000</td>\n      <td>5377.124266</td>\n      <td>11.741176</td>\n      <td>32701.435594</td>\n      <td>-7.777917</td>\n      <td>NaN</td>\n      <td>11864.542657</td>\n      <td>2186.921678</td>\n      <td>34.008333</td>\n      <td>2370.137203</td>\n      <td>148.685489</td>\n      <td>15850.217832</td>\n      <td>5950.539930</td>\n      <td>8157.243916</td>\n      <td>1368.092867</td>\n      <td>371.405315</td>\n      <td>NaN</td>\n      <td>14631.920140</td>\n      <td>9795.648462</td>\n      <td>94140.832867</td>\n      <td>25990.076923</td>\n      <td>248.250000</td>\n      <td>5.980000</td>\n      <td>37782.090839</td>\n      <td>35638.000210</td>\n      <td>40388.748881</td>\n      <td>26844.946503</td>\n      <td>10933.487902</td>\n      <td>2385.044336</td>\n      <td>17387.930699</td>\n      <td>107174.743986</td>\n      <td>91406.434615</td>\n      <td>182527.956014</td>\n      <td>62088.622937</td>\n      <td>64541.165664</td>\n      <td>144446.932517</td>\n      <td>5.193846</td>\n      <td>25684.497762</td>\n      <td>17768.013706</td>\n      <td>635.556047</td>\n    </tr>\n    <tr>\n      <th>15</th>\n      <td>13845.747832</td>\n      <td>26317.410769</td>\n      <td>10470.811958</td>\n      <td>13082.172448</td>\n      <td>16465.706993</td>\n      <td>4244.143776</td>\n      <td>22267.220070</td>\n      <td>20416.967273</td>\n      <td>15954.692937</td>\n      <td>11524.856294</td>\n      <td>14041.217832</td>\n      <td>3658.448112</td>\n      <td>18879.250350</td>\n      <td>12785.902867</td>\n      <td>14527.979441</td>\n      <td>11225.805175</td>\n      <td>6269.619545</td>\n      <td>1117.350490</td>\n      <td>4452.434545</td>\n      <td>3068.546294</td>\n      <td>8515.664685</td>\n      <td>21542.936364</td>\n      <td>4822.264615</td>\n      <td>8952.884336</td>\n      <td>4955.726224</td>\n      <td>1561.304615</td>\n      <td>695.465105</td>\n      <td>4687.410979</td>\n      <td>3397.482098</td>\n      <td>2359.409930</td>\n      <td>5126.108951</td>\n      <td>4277.763986</td>\n      <td>13800.849091</td>\n      <td>2622.769580</td>\n      <td>1383.587902</td>\n      <td>-2.500000</td>\n      <td>52572.179441</td>\n      <td>NaN</td>\n      <td>30755.287692</td>\n      <td>1183.880769</td>\n      <td>3544.991818</td>\n      <td>3.000000</td>\n      <td>3378.734685</td>\n      <td>11.861600</td>\n      <td>12364.400699</td>\n      <td>22.900000</td>\n      <td>126.980000</td>\n      <td>9656.480140</td>\n      <td>2262.172797</td>\n      <td>10.023929</td>\n      <td>1561.243077</td>\n      <td>53.922609</td>\n      <td>6675.751469</td>\n      <td>3684.035804</td>\n      <td>865.858407</td>\n      <td>332.596154</td>\n      <td>111.426263</td>\n      <td>NaN</td>\n      <td>6214.881469</td>\n      <td>4327.138811</td>\n      <td>41946.936923</td>\n      <td>13953.432937</td>\n      <td>236.108333</td>\n      <td>3.090909</td>\n      <td>8385.031259</td>\n      <td>44.161799</td>\n      <td>4409.563427</td>\n      <td>10606.899231</td>\n      <td>360.163077</td>\n      <td>3235.168182</td>\n      <td>9142.630420</td>\n      <td>5345.240420</td>\n      <td>3414.740909</td>\n      <td>18262.376853</td>\n      <td>422.878252</td>\n      <td>272.906250</td>\n      <td>27291.017133</td>\n      <td>2784.158881</td>\n      <td>2071.211888</td>\n      <td>273.504884</td>\n      <td>29.880000</td>\n    </tr>\n    <tr>\n      <th>16</th>\n      <td>11352.479371</td>\n      <td>23549.144965</td>\n      <td>7635.427273</td>\n      <td>14748.078112</td>\n      <td>13494.538671</td>\n      <td>5146.038951</td>\n      <td>11544.310140</td>\n      <td>14676.778322</td>\n      <td>28990.377343</td>\n      <td>12681.776643</td>\n      <td>12037.149091</td>\n      <td>4149.637972</td>\n      <td>15070.387273</td>\n      <td>8656.873217</td>\n      <td>9811.741958</td>\n      <td>7202.830699</td>\n      <td>3521.880412</td>\n      <td>994.926224</td>\n      <td>3328.785105</td>\n      <td>3618.622378</td>\n      <td>6302.361049</td>\n      <td>11264.889371</td>\n      <td>2244.065594</td>\n      <td>4963.603776</td>\n      <td>2004.945105</td>\n      <td>758.228112</td>\n      <td>287.466573</td>\n      <td>1634.660280</td>\n      <td>1330.003077</td>\n      <td>1164.366853</td>\n      <td>4561.439231</td>\n      <td>2188.839860</td>\n      <td>4906.217692</td>\n      <td>593.819860</td>\n      <td>1824.481119</td>\n      <td>NaN</td>\n      <td>52078.700909</td>\n      <td>NaN</td>\n      <td>31687.432657</td>\n      <td>1542.986923</td>\n      <td>3694.454406</td>\n      <td>NaN</td>\n      <td>3922.697063</td>\n      <td>18.177273</td>\n      <td>14231.886294</td>\n      <td>-57.726667</td>\n      <td>647.275000</td>\n      <td>54.719667</td>\n      <td>NaN</td>\n      <td>34.232821</td>\n      <td>1644.284406</td>\n      <td>69.335041</td>\n      <td>7090.456154</td>\n      <td>6037.615423</td>\n      <td>638.681818</td>\n      <td>104.548034</td>\n      <td>114.590556</td>\n      <td>NaN</td>\n      <td>3431.070070</td>\n      <td>2223.935944</td>\n      <td>31998.784545</td>\n      <td>9806.358601</td>\n      <td>238.500000</td>\n      <td>0.000000</td>\n      <td>5529.899790</td>\n      <td>309.784385</td>\n      <td>3822.620629</td>\n      <td>9439.101329</td>\n      <td>258.742105</td>\n      <td>2679.624895</td>\n      <td>9171.064545</td>\n      <td>6922.744685</td>\n      <td>3331.204965</td>\n      <td>20446.967832</td>\n      <td>997.032281</td>\n      <td>673.280928</td>\n      <td>27385.769231</td>\n      <td>126.934126</td>\n      <td>2116.696993</td>\n      <td>42.618571</td>\n      <td>59.760000</td>\n    </tr>\n    <tr>\n      <th>17</th>\n      <td>22801.609161</td>\n      <td>42231.844406</td>\n      <td>19278.955035</td>\n      <td>23961.357273</td>\n      <td>27082.325594</td>\n      <td>5944.435245</td>\n      <td>19474.770559</td>\n      <td>20110.270839</td>\n      <td>27293.658042</td>\n      <td>14165.000000</td>\n      <td>14527.290490</td>\n      <td>7534.953916</td>\n      <td>24648.896434</td>\n      <td>14118.147413</td>\n      <td>11246.852657</td>\n      <td>10386.823007</td>\n      <td>8111.507500</td>\n      <td>4495.581049</td>\n      <td>4475.987483</td>\n      <td>4130.295524</td>\n      <td>7668.886713</td>\n      <td>13680.794056</td>\n      <td>4975.966224</td>\n      <td>5370.106294</td>\n      <td>7752.311748</td>\n      <td>1373.430420</td>\n      <td>1290.935594</td>\n      <td>2649.323147</td>\n      <td>2276.462098</td>\n      <td>1923.034266</td>\n      <td>5776.951958</td>\n      <td>5108.334126</td>\n      <td>9295.045175</td>\n      <td>1541.422378</td>\n      <td>1878.117902</td>\n      <td>NaN</td>\n      <td>77339.776434</td>\n      <td>NaN</td>\n      <td>47372.023007</td>\n      <td>30.569843</td>\n      <td>3974.562378</td>\n      <td>NaN</td>\n      <td>7535.032587</td>\n      <td>21.294095</td>\n      <td>26006.988601</td>\n      <td>15.608571</td>\n      <td>1294.475248</td>\n      <td>38.223457</td>\n      <td>NaN</td>\n      <td>18.565000</td>\n      <td>3552.823217</td>\n      <td>66.399323</td>\n      <td>10572.849510</td>\n      <td>4245.378671</td>\n      <td>1486.478643</td>\n      <td>638.855385</td>\n      <td>371.307692</td>\n      <td>NaN</td>\n      <td>7757.146224</td>\n      <td>3465.274965</td>\n      <td>52591.132028</td>\n      <td>15300.776993</td>\n      <td>238.500000</td>\n      <td>2.605714</td>\n      <td>27208.437622</td>\n      <td>798.676713</td>\n      <td>12839.772867</td>\n      <td>17173.994685</td>\n      <td>498.399790</td>\n      <td>4209.212238</td>\n      <td>12189.037972</td>\n      <td>31293.306224</td>\n      <td>12033.678951</td>\n      <td>53043.348741</td>\n      <td>3646.955664</td>\n      <td>855.782273</td>\n      <td>50614.958462</td>\n      <td>819.416458</td>\n      <td>7798.283427</td>\n      <td>169.379120</td>\n      <td>2.290000</td>\n    </tr>\n    <tr>\n      <th>18</th>\n      <td>21988.356224</td>\n      <td>63665.139510</td>\n      <td>16392.980490</td>\n      <td>26775.207203</td>\n      <td>22933.954965</td>\n      <td>5664.913077</td>\n      <td>33152.347203</td>\n      <td>32036.582098</td>\n      <td>18589.371259</td>\n      <td>16754.599860</td>\n      <td>21485.875734</td>\n      <td>3865.536923</td>\n      <td>42342.913916</td>\n      <td>21977.352517</td>\n      <td>16067.656224</td>\n      <td>15289.541888</td>\n      <td>9246.560317</td>\n      <td>2783.278392</td>\n      <td>8409.801958</td>\n      <td>5059.748252</td>\n      <td>15759.978951</td>\n      <td>36048.422727</td>\n      <td>8890.141748</td>\n      <td>16470.192238</td>\n      <td>10527.132448</td>\n      <td>2741.878811</td>\n      <td>1241.995455</td>\n      <td>10271.007622</td>\n      <td>6178.887762</td>\n      <td>3424.756294</td>\n      <td>9269.177692</td>\n      <td>8893.556643</td>\n      <td>20971.567063</td>\n      <td>3873.937273</td>\n      <td>2283.017413</td>\n      <td>NaN</td>\n      <td>65312.475734</td>\n      <td>28.000000</td>\n      <td>61637.689021</td>\n      <td>706.987343</td>\n      <td>6802.007902</td>\n      <td>NaN</td>\n      <td>5055.879510</td>\n      <td>21.186571</td>\n      <td>25474.858462</td>\n      <td>20.176471</td>\n      <td>10.000000</td>\n      <td>10765.219650</td>\n      <td>937.838235</td>\n      <td>7.205854</td>\n      <td>2950.368462</td>\n      <td>144.460682</td>\n      <td>10265.073007</td>\n      <td>5011.655245</td>\n      <td>3844.226853</td>\n      <td>992.127972</td>\n      <td>163.889720</td>\n      <td>NaN</td>\n      <td>7935.269790</td>\n      <td>7599.357343</td>\n      <td>62042.982238</td>\n      <td>22229.816503</td>\n      <td>421.000000</td>\n      <td>5.187500</td>\n      <td>22571.552238</td>\n      <td>373.290000</td>\n      <td>12115.718601</td>\n      <td>15535.521399</td>\n      <td>1404.947556</td>\n      <td>1749.712308</td>\n      <td>18423.949860</td>\n      <td>18481.394266</td>\n      <td>14124.482517</td>\n      <td>50079.623636</td>\n      <td>2113.300147</td>\n      <td>4880.242248</td>\n      <td>57668.251748</td>\n      <td>0.481333</td>\n      <td>5350.500432</td>\n      <td>881.150853</td>\n      <td>12.560000</td>\n    </tr>\n    <tr>\n      <th>19</th>\n      <td>21504.029161</td>\n      <td>50841.072937</td>\n      <td>18414.224476</td>\n      <td>31365.545315</td>\n      <td>28759.223846</td>\n      <td>5948.962867</td>\n      <td>33882.926853</td>\n      <td>42613.662937</td>\n      <td>30645.018112</td>\n      <td>27622.457762</td>\n      <td>21997.256503</td>\n      <td>6403.788601</td>\n      <td>33957.896224</td>\n      <td>18478.815734</td>\n      <td>28023.600070</td>\n      <td>17137.079091</td>\n      <td>10440.354182</td>\n      <td>-5.219231</td>\n      <td>6727.757273</td>\n      <td>7112.320490</td>\n      <td>12343.916084</td>\n      <td>28089.819091</td>\n      <td>5768.380979</td>\n      <td>12986.697413</td>\n      <td>7878.555944</td>\n      <td>2385.669021</td>\n      <td>876.876434</td>\n      <td>5822.995245</td>\n      <td>4690.908322</td>\n      <td>3067.292937</td>\n      <td>7693.104755</td>\n      <td>6206.423007</td>\n      <td>17472.371329</td>\n      <td>3434.005734</td>\n      <td>1972.846853</td>\n      <td>2733.671748</td>\n      <td>78019.815175</td>\n      <td>15.231111</td>\n      <td>54198.527133</td>\n      <td>2876.399441</td>\n      <td>6430.056713</td>\n      <td>NaN</td>\n      <td>5562.715664</td>\n      <td>12.228889</td>\n      <td>20351.556643</td>\n      <td>23.709583</td>\n      <td>249.288000</td>\n      <td>5436.057413</td>\n      <td>941.968085</td>\n      <td>30.204545</td>\n      <td>1653.083497</td>\n      <td>91.635802</td>\n      <td>13923.061538</td>\n      <td>5716.974476</td>\n      <td>3062.104895</td>\n      <td>715.449580</td>\n      <td>532.988811</td>\n      <td>NaN</td>\n      <td>13792.077063</td>\n      <td>6318.644056</td>\n      <td>72434.486364</td>\n      <td>18657.597832</td>\n      <td>548.750000</td>\n      <td>15.624615</td>\n      <td>21683.665594</td>\n      <td>21870.027273</td>\n      <td>21678.774825</td>\n      <td>22816.835035</td>\n      <td>4239.971818</td>\n      <td>4915.799930</td>\n      <td>16986.922657</td>\n      <td>67545.406434</td>\n      <td>54692.797413</td>\n      <td>113720.212937</td>\n      <td>37087.937063</td>\n      <td>37643.786434</td>\n      <td>97240.503566</td>\n      <td>15860.814825</td>\n      <td>20370.269720</td>\n      <td>12884.229091</td>\n      <td>440.374878</td>\n    </tr>\n    <tr>\n      <th>20</th>\n      <td>40545.473217</td>\n      <td>78251.249930</td>\n      <td>15490.971259</td>\n      <td>51456.376643</td>\n      <td>41647.786503</td>\n      <td>8210.745734</td>\n      <td>49394.699231</td>\n      <td>76445.061259</td>\n      <td>38243.623916</td>\n      <td>41826.467552</td>\n      <td>25925.433916</td>\n      <td>7786.979860</td>\n      <td>56580.504266</td>\n      <td>24275.736573</td>\n      <td>27048.008881</td>\n      <td>18464.403846</td>\n      <td>13170.096000</td>\n      <td>162.158929</td>\n      <td>6992.899720</td>\n      <td>13457.564895</td>\n      <td>13931.855175</td>\n      <td>37655.158322</td>\n      <td>8309.914825</td>\n      <td>17515.605385</td>\n      <td>12804.132587</td>\n      <td>2710.690070</td>\n      <td>954.691538</td>\n      <td>8946.720769</td>\n      <td>6298.868322</td>\n      <td>3840.956154</td>\n      <td>13728.180350</td>\n      <td>9485.906364</td>\n      <td>22106.986503</td>\n      <td>5834.606923</td>\n      <td>3393.552517</td>\n      <td>4006.388112</td>\n      <td>110205.216294</td>\n      <td>NaN</td>\n      <td>86518.837483</td>\n      <td>6177.195385</td>\n      <td>8970.767273</td>\n      <td>NaN</td>\n      <td>8003.207552</td>\n      <td>16.248293</td>\n      <td>33583.898601</td>\n      <td>-12.619333</td>\n      <td>1496.297769</td>\n      <td>21402.477273</td>\n      <td>3301.240210</td>\n      <td>14.652727</td>\n      <td>3264.065105</td>\n      <td>221.913475</td>\n      <td>19815.983147</td>\n      <td>5396.582098</td>\n      <td>4185.081620</td>\n      <td>1681.055385</td>\n      <td>586.673427</td>\n      <td>NaN</td>\n      <td>17437.547622</td>\n      <td>8415.035385</td>\n      <td>91989.863217</td>\n      <td>22289.123077</td>\n      <td>350.082222</td>\n      <td>9.666667</td>\n      <td>38597.259231</td>\n      <td>39870.767413</td>\n      <td>32958.593007</td>\n      <td>30421.473846</td>\n      <td>5624.949441</td>\n      <td>4993.776294</td>\n      <td>44301.724266</td>\n      <td>95858.587343</td>\n      <td>78493.190140</td>\n      <td>164633.741538</td>\n      <td>52818.583706</td>\n      <td>63148.334965</td>\n      <td>150613.955385</td>\n      <td>15.266875</td>\n      <td>25836.062238</td>\n      <td>19284.377343</td>\n      <td>796.153864</td>\n    </tr>\n    <tr>\n      <th>21</th>\n      <td>14950.049231</td>\n      <td>47780.599161</td>\n      <td>14607.126923</td>\n      <td>19354.728042</td>\n      <td>16090.874545</td>\n      <td>3988.656294</td>\n      <td>24456.825664</td>\n      <td>18238.059790</td>\n      <td>16387.963636</td>\n      <td>14695.978881</td>\n      <td>13006.376783</td>\n      <td>2793.614126</td>\n      <td>28373.730909</td>\n      <td>15897.316084</td>\n      <td>6308.213147</td>\n      <td>7181.937692</td>\n      <td>7233.380481</td>\n      <td>2032.323986</td>\n      <td>5405.155245</td>\n      <td>3153.500559</td>\n      <td>8436.536923</td>\n      <td>36872.786713</td>\n      <td>8738.996643</td>\n      <td>18281.019301</td>\n      <td>10623.598811</td>\n      <td>1647.096923</td>\n      <td>731.438392</td>\n      <td>5102.697692</td>\n      <td>4638.772587</td>\n      <td>3884.023077</td>\n      <td>7116.295245</td>\n      <td>8190.056014</td>\n      <td>19044.877902</td>\n      <td>2690.189510</td>\n      <td>2079.540839</td>\n      <td>NaN</td>\n      <td>40298.334056</td>\n      <td>NaN</td>\n      <td>39586.809930</td>\n      <td>2570.596573</td>\n      <td>4886.625524</td>\n      <td>NaN</td>\n      <td>4255.040699</td>\n      <td>11.968000</td>\n      <td>19187.062937</td>\n      <td>22.472105</td>\n      <td>0.000000</td>\n      <td>10646.975664</td>\n      <td>10.000000</td>\n      <td>2.020000</td>\n      <td>2755.241608</td>\n      <td>127.319855</td>\n      <td>8286.281399</td>\n      <td>1511.944895</td>\n      <td>1319.000492</td>\n      <td>703.785944</td>\n      <td>205.769925</td>\n      <td>NaN</td>\n      <td>5126.370839</td>\n      <td>5845.902028</td>\n      <td>42966.006224</td>\n      <td>11570.641049</td>\n      <td>326.000000</td>\n      <td>12.000000</td>\n      <td>22626.552727</td>\n      <td>33.692235</td>\n      <td>5249.491608</td>\n      <td>15120.754615</td>\n      <td>200.042238</td>\n      <td>1441.914615</td>\n      <td>7308.057692</td>\n      <td>10983.598741</td>\n      <td>6735.454126</td>\n      <td>21915.114965</td>\n      <td>663.384126</td>\n      <td>537.663333</td>\n      <td>40379.295175</td>\n      <td>2.000000</td>\n      <td>3260.404685</td>\n      <td>111.680672</td>\n      <td>29.880000</td>\n    </tr>\n    <tr>\n      <th>22</th>\n      <td>21493.271119</td>\n      <td>53361.851888</td>\n      <td>13150.979510</td>\n      <td>32104.132378</td>\n      <td>23187.335105</td>\n      <td>5236.811329</td>\n      <td>29068.621608</td>\n      <td>37236.347692</td>\n      <td>23452.908881</td>\n      <td>19438.354266</td>\n      <td>14951.826783</td>\n      <td>3710.651538</td>\n      <td>37381.400839</td>\n      <td>17203.417902</td>\n      <td>19672.921538</td>\n      <td>14551.985175</td>\n      <td>10156.836911</td>\n      <td>939.871190</td>\n      <td>6672.666014</td>\n      <td>5386.000839</td>\n      <td>11814.320909</td>\n      <td>29973.003497</td>\n      <td>8391.796224</td>\n      <td>9725.432727</td>\n      <td>8375.324476</td>\n      <td>2042.667622</td>\n      <td>894.010699</td>\n      <td>7864.640280</td>\n      <td>4983.480979</td>\n      <td>2947.230559</td>\n      <td>6281.170979</td>\n      <td>7419.500350</td>\n      <td>21841.058671</td>\n      <td>4243.829301</td>\n      <td>2380.836643</td>\n      <td>NaN</td>\n      <td>70038.717902</td>\n      <td>NaN</td>\n      <td>54340.605734</td>\n      <td>1299.613217</td>\n      <td>7634.136364</td>\n      <td>NaN</td>\n      <td>5073.863357</td>\n      <td>28.775309</td>\n      <td>22168.489930</td>\n      <td>19.260000</td>\n      <td>3.654444</td>\n      <td>8.783250</td>\n      <td>NaN</td>\n      <td>33.348846</td>\n      <td>1626.951049</td>\n      <td>82.537500</td>\n      <td>10854.880699</td>\n      <td>4899.722128</td>\n      <td>3042.584085</td>\n      <td>852.313217</td>\n      <td>409.997203</td>\n      <td>NaN</td>\n      <td>12021.640490</td>\n      <td>5264.149580</td>\n      <td>66645.669021</td>\n      <td>18629.509860</td>\n      <td>246.000000</td>\n      <td>8.166667</td>\n      <td>16913.783147</td>\n      <td>1447.042308</td>\n      <td>12368.909301</td>\n      <td>18085.210140</td>\n      <td>1535.118182</td>\n      <td>2936.096084</td>\n      <td>14335.824825</td>\n      <td>21413.411608</td>\n      <td>21405.250629</td>\n      <td>51603.339091</td>\n      <td>2531.663986</td>\n      <td>857.190894</td>\n      <td>57868.571119</td>\n      <td>6.243000</td>\n      <td>4582.594755</td>\n      <td>177.560576</td>\n      <td>27.150000</td>\n    </tr>\n    <tr>\n      <th>23</th>\n      <td>33186.460559</td>\n      <td>70522.580140</td>\n      <td>19912.564755</td>\n      <td>27324.303077</td>\n      <td>36895.869021</td>\n      <td>7393.499650</td>\n      <td>43624.067413</td>\n      <td>36710.240909</td>\n      <td>50178.361748</td>\n      <td>31155.170559</td>\n      <td>31371.205175</td>\n      <td>5611.221608</td>\n      <td>37969.255664</td>\n      <td>33355.681259</td>\n      <td>23404.868601</td>\n      <td>27120.621608</td>\n      <td>11716.354180</td>\n      <td>1641.919301</td>\n      <td>11766.417203</td>\n      <td>9004.245804</td>\n      <td>22195.440210</td>\n      <td>47301.983986</td>\n      <td>10698.334126</td>\n      <td>16160.491748</td>\n      <td>12961.146713</td>\n      <td>3260.970140</td>\n      <td>1043.950699</td>\n      <td>11110.549650</td>\n      <td>8216.539021</td>\n      <td>4749.540629</td>\n      <td>11303.890490</td>\n      <td>11289.378881</td>\n      <td>26048.926434</td>\n      <td>5237.248392</td>\n      <td>3722.621119</td>\n      <td>NaN</td>\n      <td>43869.156713</td>\n      <td>NaN</td>\n      <td>62100.266573</td>\n      <td>2056.521469</td>\n      <td>11755.600490</td>\n      <td>NaN</td>\n      <td>8527.952587</td>\n      <td>40.033130</td>\n      <td>36354.623007</td>\n      <td>-45.958333</td>\n      <td>119.315333</td>\n      <td>25204.691538</td>\n      <td>6875.752448</td>\n      <td>33.648571</td>\n      <td>3080.011329</td>\n      <td>238.397972</td>\n      <td>15810.811259</td>\n      <td>8809.958392</td>\n      <td>2402.012878</td>\n      <td>1413.678671</td>\n      <td>113.021978</td>\n      <td>NaN</td>\n      <td>14421.243986</td>\n      <td>12109.695455</td>\n      <td>76844.022727</td>\n      <td>37033.356713</td>\n      <td>498.000000</td>\n      <td>4.777778</td>\n      <td>31002.880350</td>\n      <td>970.676742</td>\n      <td>8803.582378</td>\n      <td>22905.974755</td>\n      <td>976.504113</td>\n      <td>5104.391189</td>\n      <td>31811.612378</td>\n      <td>20814.992168</td>\n      <td>19604.867692</td>\n      <td>59604.574615</td>\n      <td>2111.610780</td>\n      <td>374.898804</td>\n      <td>54199.088322</td>\n      <td>13168.146713</td>\n      <td>6149.684755</td>\n      <td>100.585083</td>\n      <td>29.880000</td>\n    </tr>\n    <tr>\n      <th>24</th>\n      <td>18859.023357</td>\n      <td>40797.169301</td>\n      <td>11825.589021</td>\n      <td>29245.357552</td>\n      <td>29178.058811</td>\n      <td>4911.185804</td>\n      <td>28788.329441</td>\n      <td>49171.841748</td>\n      <td>23246.748322</td>\n      <td>27175.089231</td>\n      <td>17088.586573</td>\n      <td>4230.501818</td>\n      <td>29558.638252</td>\n      <td>17265.871818</td>\n      <td>20444.668182</td>\n      <td>13903.568811</td>\n      <td>6965.927480</td>\n      <td>82.640909</td>\n      <td>5825.841189</td>\n      <td>6153.428252</td>\n      <td>12189.695245</td>\n      <td>28485.677483</td>\n      <td>6015.021329</td>\n      <td>11885.935804</td>\n      <td>8280.752797</td>\n      <td>1950.734545</td>\n      <td>679.705664</td>\n      <td>5705.871748</td>\n      <td>4308.367343</td>\n      <td>2530.608951</td>\n      <td>6998.907343</td>\n      <td>6394.550000</td>\n      <td>16351.961329</td>\n      <td>3081.727273</td>\n      <td>1940.518392</td>\n      <td>3036.471259</td>\n      <td>58689.380140</td>\n      <td>NaN</td>\n      <td>45267.238322</td>\n      <td>1579.177483</td>\n      <td>5946.428042</td>\n      <td>NaN</td>\n      <td>4817.372238</td>\n      <td>21.124259</td>\n      <td>15930.056084</td>\n      <td>-26.921429</td>\n      <td>NaN</td>\n      <td>5294.918741</td>\n      <td>1277.185315</td>\n      <td>8.750952</td>\n      <td>1501.941958</td>\n      <td>82.282426</td>\n      <td>15937.714545</td>\n      <td>4810.956364</td>\n      <td>2454.434348</td>\n      <td>610.263287</td>\n      <td>102.965766</td>\n      <td>NaN</td>\n      <td>11250.376783</td>\n      <td>5011.297483</td>\n      <td>58377.364545</td>\n      <td>14541.123357</td>\n      <td>225.833333</td>\n      <td>3.888889</td>\n      <td>22440.393916</td>\n      <td>28479.774056</td>\n      <td>24627.877552</td>\n      <td>19401.593287</td>\n      <td>4287.338322</td>\n      <td>1759.883217</td>\n      <td>25763.400070</td>\n      <td>72650.442867</td>\n      <td>52435.498252</td>\n      <td>121882.073916</td>\n      <td>37876.836853</td>\n      <td>51850.045105</td>\n      <td>93927.992098</td>\n      <td>13623.074615</td>\n      <td>18597.824126</td>\n      <td>9878.970140</td>\n      <td>413.774211</td>\n    </tr>\n    <tr>\n      <th>25</th>\n      <td>20145.897483</td>\n      <td>36871.310559</td>\n      <td>11788.130979</td>\n      <td>20351.455455</td>\n      <td>12422.996434</td>\n      <td>3760.045035</td>\n      <td>17971.439580</td>\n      <td>29858.353636</td>\n      <td>14636.113636</td>\n      <td>20202.701469</td>\n      <td>11245.617273</td>\n      <td>3191.893706</td>\n      <td>25436.934336</td>\n      <td>11277.145315</td>\n      <td>16102.888601</td>\n      <td>10380.811888</td>\n      <td>6647.172960</td>\n      <td>11.605263</td>\n      <td>3904.717972</td>\n      <td>5208.073776</td>\n      <td>6499.126084</td>\n      <td>16186.003986</td>\n      <td>3011.059860</td>\n      <td>7118.890769</td>\n      <td>3887.950490</td>\n      <td>1207.298042</td>\n      <td>597.461329</td>\n      <td>3583.101049</td>\n      <td>2329.320420</td>\n      <td>1655.917133</td>\n      <td>3963.240909</td>\n      <td>2926.216364</td>\n      <td>11331.330979</td>\n      <td>2277.483357</td>\n      <td>1319.586503</td>\n      <td>2981.991189</td>\n      <td>44627.650280</td>\n      <td>NaN</td>\n      <td>42220.734266</td>\n      <td>3302.998112</td>\n      <td>5350.679231</td>\n      <td>NaN</td>\n      <td>3972.579231</td>\n      <td>17.384483</td>\n      <td>18687.708252</td>\n      <td>26.811176</td>\n      <td>-21.760000</td>\n      <td>11311.776434</td>\n      <td>2204.384615</td>\n      <td>6.970769</td>\n      <td>1499.620629</td>\n      <td>47.662991</td>\n      <td>7071.007273</td>\n      <td>4359.542517</td>\n      <td>709.652174</td>\n      <td>553.070350</td>\n      <td>189.770000</td>\n      <td>NaN</td>\n      <td>8719.053636</td>\n      <td>3184.024895</td>\n      <td>38884.314895</td>\n      <td>11868.813287</td>\n      <td>477.000000</td>\n      <td>5.500000</td>\n      <td>8545.165524</td>\n      <td>328.242014</td>\n      <td>8061.941399</td>\n      <td>10742.568601</td>\n      <td>290.784895</td>\n      <td>3403.212797</td>\n      <td>6456.661049</td>\n      <td>11932.596503</td>\n      <td>7767.272098</td>\n      <td>38854.460699</td>\n      <td>777.747483</td>\n      <td>2607.109754</td>\n      <td>43991.147692</td>\n      <td>-1.270000</td>\n      <td>2706.628252</td>\n      <td>665.919779</td>\n      <td>NaN</td>\n    </tr>\n    <tr>\n      <th>26</th>\n      <td>19402.762937</td>\n      <td>27398.030979</td>\n      <td>7357.400769</td>\n      <td>24498.113846</td>\n      <td>17589.532587</td>\n      <td>4656.670490</td>\n      <td>16287.658531</td>\n      <td>28694.950909</td>\n      <td>16556.330769</td>\n      <td>10172.815734</td>\n      <td>12809.284615</td>\n      <td>4525.693636</td>\n      <td>21155.702797</td>\n      <td>10843.478881</td>\n      <td>12557.320350</td>\n      <td>7816.898601</td>\n      <td>3583.714492</td>\n      <td>1283.249371</td>\n      <td>3474.472238</td>\n      <td>5651.439580</td>\n      <td>6069.362727</td>\n      <td>13208.499231</td>\n      <td>2697.797273</td>\n      <td>6370.333427</td>\n      <td>3502.906643</td>\n      <td>961.844895</td>\n      <td>374.188462</td>\n      <td>3216.479371</td>\n      <td>2387.515944</td>\n      <td>1269.019930</td>\n      <td>4162.972657</td>\n      <td>3076.487273</td>\n      <td>7963.855175</td>\n      <td>1954.978601</td>\n      <td>1027.915385</td>\n      <td>NaN</td>\n      <td>103498.203497</td>\n      <td>NaN</td>\n      <td>37448.672098</td>\n      <td>1388.559231</td>\n      <td>2778.091259</td>\n      <td>NaN</td>\n      <td>3806.177203</td>\n      <td>28.551304</td>\n      <td>9771.878462</td>\n      <td>69.018889</td>\n      <td>611.372549</td>\n      <td>3383.052727</td>\n      <td>566.100000</td>\n      <td>24.172121</td>\n      <td>1697.144685</td>\n      <td>53.900781</td>\n      <td>8998.729790</td>\n      <td>3909.698811</td>\n      <td>NaN</td>\n      <td>259.718042</td>\n      <td>102.242222</td>\n      <td>NaN</td>\n      <td>6660.914126</td>\n      <td>2831.279510</td>\n      <td>42909.598601</td>\n      <td>8579.792797</td>\n      <td>348.750000</td>\n      <td>10.435000</td>\n      <td>12253.602238</td>\n      <td>19365.780350</td>\n      <td>19192.056434</td>\n      <td>13917.993147</td>\n      <td>2883.004126</td>\n      <td>1871.351958</td>\n      <td>19821.437622</td>\n      <td>57016.589231</td>\n      <td>39434.281259</td>\n      <td>84988.311818</td>\n      <td>25615.331469</td>\n      <td>42544.202028</td>\n      <td>70236.827622</td>\n      <td>18596.331888</td>\n      <td>14830.084825</td>\n      <td>8025.948601</td>\n      <td>221.950278</td>\n    </tr>\n    <tr>\n      <th>27</th>\n      <td>30437.976224</td>\n      <td>79001.049161</td>\n      <td>20226.734615</td>\n      <td>43596.933916</td>\n      <td>28059.038252</td>\n      <td>7730.729091</td>\n      <td>43272.914965</td>\n      <td>42181.469580</td>\n      <td>29315.697133</td>\n      <td>36757.327413</td>\n      <td>20785.579091</td>\n      <td>3911.993986</td>\n      <td>52941.787273</td>\n      <td>28918.602867</td>\n      <td>24741.912517</td>\n      <td>18713.578042</td>\n      <td>11320.961095</td>\n      <td>790.685524</td>\n      <td>11159.393077</td>\n      <td>6867.747972</td>\n      <td>17859.665455</td>\n      <td>37222.157203</td>\n      <td>9648.699161</td>\n      <td>12774.555874</td>\n      <td>12383.764266</td>\n      <td>2114.502378</td>\n      <td>963.910140</td>\n      <td>7801.956713</td>\n      <td>5028.221049</td>\n      <td>3562.270839</td>\n      <td>8397.365315</td>\n      <td>9801.541748</td>\n      <td>18926.597972</td>\n      <td>3579.206294</td>\n      <td>2536.471329</td>\n      <td>2566.781469</td>\n      <td>39725.397762</td>\n      <td>1.980000</td>\n      <td>70061.091259</td>\n      <td>2278.351818</td>\n      <td>10201.298252</td>\n      <td>NaN</td>\n      <td>4936.005804</td>\n      <td>43.344615</td>\n      <td>38260.784615</td>\n      <td>5.826087</td>\n      <td>NaN</td>\n      <td>10716.222657</td>\n      <td>2752.781469</td>\n      <td>5.892308</td>\n      <td>2255.905035</td>\n      <td>95.303551</td>\n      <td>14255.320210</td>\n      <td>5568.830909</td>\n      <td>1538.538462</td>\n      <td>1200.596993</td>\n      <td>101.843511</td>\n      <td>NaN</td>\n      <td>12280.209231</td>\n      <td>10846.354266</td>\n      <td>68527.765944</td>\n      <td>27537.111259</td>\n      <td>189.077778</td>\n      <td>6.750000</td>\n      <td>36864.109580</td>\n      <td>26832.988112</td>\n      <td>29560.686643</td>\n      <td>26075.516364</td>\n      <td>9225.643427</td>\n      <td>4228.461818</td>\n      <td>16603.751399</td>\n      <td>96374.536573</td>\n      <td>66687.096573</td>\n      <td>146518.141399</td>\n      <td>54910.693776</td>\n      <td>69638.930420</td>\n      <td>119519.410909</td>\n      <td>20806.990909</td>\n      <td>21268.805734</td>\n      <td>11524.137832</td>\n      <td>562.980000</td>\n    </tr>\n    <tr>\n      <th>28</th>\n      <td>20180.453986</td>\n      <td>57751.274336</td>\n      <td>12562.223287</td>\n      <td>27980.817203</td>\n      <td>28221.618392</td>\n      <td>5016.258671</td>\n      <td>29228.446923</td>\n      <td>33375.575524</td>\n      <td>17930.710070</td>\n      <td>21083.404825</td>\n      <td>13539.147762</td>\n      <td>3441.027832</td>\n      <td>38297.386573</td>\n      <td>16522.443566</td>\n      <td>7550.626364</td>\n      <td>9821.526154</td>\n      <td>8402.612456</td>\n      <td>1805.895245</td>\n      <td>5695.885315</td>\n      <td>5153.508392</td>\n      <td>10210.134825</td>\n      <td>31939.141399</td>\n      <td>8328.875804</td>\n      <td>15434.385944</td>\n      <td>10936.965315</td>\n      <td>1525.020280</td>\n      <td>561.688462</td>\n      <td>5349.592517</td>\n      <td>3909.740420</td>\n      <td>2583.945035</td>\n      <td>8619.192308</td>\n      <td>8378.118392</td>\n      <td>17685.602308</td>\n      <td>2675.184615</td>\n      <td>1802.246014</td>\n      <td>1981.053357</td>\n      <td>49179.485524</td>\n      <td>NaN</td>\n      <td>46197.603706</td>\n      <td>1384.858112</td>\n      <td>6342.158671</td>\n      <td>0.750000</td>\n      <td>4490.995385</td>\n      <td>26.117812</td>\n      <td>20424.318531</td>\n      <td>84.146000</td>\n      <td>NaN</td>\n      <td>13234.785524</td>\n      <td>NaN</td>\n      <td>2.364444</td>\n      <td>2645.526923</td>\n      <td>96.117132</td>\n      <td>10960.007552</td>\n      <td>727.594155</td>\n      <td>4806.917133</td>\n      <td>835.300420</td>\n      <td>665.557972</td>\n      <td>NaN</td>\n      <td>6407.026364</td>\n      <td>6836.110070</td>\n      <td>55202.679091</td>\n      <td>13054.228462</td>\n      <td>463.000000</td>\n      <td>10.080000</td>\n      <td>43467.724895</td>\n      <td>18546.610979</td>\n      <td>22125.112657</td>\n      <td>19119.629650</td>\n      <td>6364.809091</td>\n      <td>1432.971049</td>\n      <td>12536.787203</td>\n      <td>65285.952098</td>\n      <td>57575.601119</td>\n      <td>98486.960350</td>\n      <td>47923.508671</td>\n      <td>36164.364615</td>\n      <td>96322.113846</td>\n      <td>26288.955734</td>\n      <td>23828.861329</td>\n      <td>10673.133077</td>\n      <td>316.605610</td>\n    </tr>\n    <tr>\n      <th>29</th>\n      <td>15504.699580</td>\n      <td>25181.662727</td>\n      <td>7995.955804</td>\n      <td>14326.216224</td>\n      <td>12931.821259</td>\n      <td>3289.884965</td>\n      <td>16854.082238</td>\n      <td>20680.465944</td>\n      <td>11370.866364</td>\n      <td>9400.183077</td>\n      <td>8232.700280</td>\n      <td>2237.276993</td>\n      <td>17953.007552</td>\n      <td>9601.125245</td>\n      <td>7115.321049</td>\n      <td>8000.553217</td>\n      <td>3539.801607</td>\n      <td>36.908161</td>\n      <td>3925.716014</td>\n      <td>3755.090210</td>\n      <td>6408.913776</td>\n      <td>19722.253636</td>\n      <td>4440.371538</td>\n      <td>6452.345664</td>\n      <td>4071.857692</td>\n      <td>1406.568671</td>\n      <td>651.774965</td>\n      <td>4577.955804</td>\n      <td>3032.902517</td>\n      <td>1974.257203</td>\n      <td>4196.283846</td>\n      <td>4058.077972</td>\n      <td>11029.653986</td>\n      <td>2413.346294</td>\n      <td>1125.371958</td>\n      <td>NaN</td>\n      <td>42484.149371</td>\n      <td>NaN</td>\n      <td>28640.312378</td>\n      <td>909.938252</td>\n      <td>3763.450699</td>\n      <td>0.916667</td>\n      <td>1984.067133</td>\n      <td>31.897143</td>\n      <td>12095.779510</td>\n      <td>15.978333</td>\n      <td>8.982000</td>\n      <td>43.503333</td>\n      <td>NaN</td>\n      <td>20.110877</td>\n      <td>959.371469</td>\n      <td>42.186455</td>\n      <td>5803.394406</td>\n      <td>3089.913846</td>\n      <td>1150.654800</td>\n      <td>329.170070</td>\n      <td>274.658182</td>\n      <td>NaN</td>\n      <td>6207.304476</td>\n      <td>2852.893986</td>\n      <td>34201.581049</td>\n      <td>8432.304336</td>\n      <td>220.000000</td>\n      <td>0.333333</td>\n      <td>8221.684126</td>\n      <td>30.234385</td>\n      <td>5291.476643</td>\n      <td>9307.916573</td>\n      <td>758.946573</td>\n      <td>1802.412517</td>\n      <td>9095.476643</td>\n      <td>10950.327972</td>\n      <td>4691.213217</td>\n      <td>25166.714266</td>\n      <td>1190.882098</td>\n      <td>263.083012</td>\n      <td>30980.395594</td>\n      <td>11.800000</td>\n      <td>2131.676783</td>\n      <td>139.677971</td>\n      <td>29.880000</td>\n    </tr>\n    <tr>\n      <th>30</th>\n      <td>9788.376643</td>\n      <td>12974.464476</td>\n      <td>739.981888</td>\n      <td>13216.100909</td>\n      <td>405.565944</td>\n      <td>27.303937</td>\n      <td>379.771958</td>\n      <td>11733.993776</td>\n      <td>76.845352</td>\n      <td>196.116923</td>\n      <td>835.302727</td>\n      <td>72.023706</td>\n      <td>11386.088112</td>\n      <td>975.040280</td>\n      <td>1681.668462</td>\n      <td>153.277833</td>\n      <td>424.115465</td>\n      <td>2.380000</td>\n      <td>46.317857</td>\n      <td>1572.905944</td>\n      <td>56.522500</td>\n      <td>17.175870</td>\n      <td>9.068750</td>\n      <td>43.547643</td>\n      <td>7.119730</td>\n      <td>10.064000</td>\n      <td>89.652937</td>\n      <td>8.615000</td>\n      <td>NaN</td>\n      <td>67.092109</td>\n      <td>38.039180</td>\n      <td>7.250000</td>\n      <td>3.677778</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>61266.489580</td>\n      <td>NaN</td>\n      <td>23431.058462</td>\n      <td>49.768293</td>\n      <td>64.555175</td>\n      <td>NaN</td>\n      <td>5.858824</td>\n      <td>NaN</td>\n      <td>6429.953986</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>7.317222</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>19.153380</td>\n      <td>NaN</td>\n      <td>18.617778</td>\n      <td>92.237097</td>\n      <td>NaN</td>\n      <td>91.678182</td>\n      <td>696.250350</td>\n      <td>NaN</td>\n      <td>1452.344406</td>\n      <td>NaN</td>\n      <td>66.886408</td>\n      <td>274.105455</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>5857.313916</td>\n      <td>6619.199371</td>\n      <td>11365.228741</td>\n      <td>4564.526643</td>\n      <td>1803.641608</td>\n      <td>77.297376</td>\n      <td>321.332587</td>\n      <td>34622.986224</td>\n      <td>31576.583986</td>\n      <td>53256.041399</td>\n      <td>22409.698392</td>\n      <td>24522.622587</td>\n      <td>45456.508322</td>\n      <td>19163.112028</td>\n      <td>13172.531119</td>\n      <td>3207.034685</td>\n      <td>-0.641818</td>\n    </tr>\n    <tr>\n      <th>31</th>\n      <td>17356.652448</td>\n      <td>58512.131538</td>\n      <td>10616.675944</td>\n      <td>34848.899231</td>\n      <td>18715.630769</td>\n      <td>3489.809441</td>\n      <td>21012.438531</td>\n      <td>25277.976713</td>\n      <td>10815.516713</td>\n      <td>19911.584406</td>\n      <td>11583.676154</td>\n      <td>2800.221958</td>\n      <td>42661.320629</td>\n      <td>17550.170000</td>\n      <td>8361.894755</td>\n      <td>8043.448671</td>\n      <td>5800.120800</td>\n      <td>41.546503</td>\n      <td>6430.436713</td>\n      <td>4636.288601</td>\n      <td>8635.451888</td>\n      <td>20767.686923</td>\n      <td>4491.356923</td>\n      <td>9346.158392</td>\n      <td>7158.594545</td>\n      <td>1211.643636</td>\n      <td>605.255874</td>\n      <td>4374.872657</td>\n      <td>3127.922797</td>\n      <td>2309.877203</td>\n      <td>6118.760070</td>\n      <td>4924.689441</td>\n      <td>14279.747273</td>\n      <td>1900.871538</td>\n      <td>1459.959510</td>\n      <td>3032.648322</td>\n      <td>80572.528392</td>\n      <td>NaN</td>\n      <td>56982.266294</td>\n      <td>1334.491888</td>\n      <td>5371.462378</td>\n      <td>NaN</td>\n      <td>2291.057063</td>\n      <td>10.521212</td>\n      <td>25648.204755</td>\n      <td>-20.261333</td>\n      <td>NaN</td>\n      <td>8670.792657</td>\n      <td>NaN</td>\n      <td>17.722642</td>\n      <td>725.605385</td>\n      <td>84.190153</td>\n      <td>7946.053217</td>\n      <td>1747.507552</td>\n      <td>3305.775734</td>\n      <td>524.495035</td>\n      <td>252.921212</td>\n      <td>NaN</td>\n      <td>6633.951259</td>\n      <td>5743.170909</td>\n      <td>45999.661469</td>\n      <td>15344.295734</td>\n      <td>192.333333</td>\n      <td>0.874286</td>\n      <td>36201.938601</td>\n      <td>19019.947902</td>\n      <td>25303.361888</td>\n      <td>18063.452098</td>\n      <td>8511.813077</td>\n      <td>1305.194196</td>\n      <td>8460.688252</td>\n      <td>86167.265804</td>\n      <td>70232.133566</td>\n      <td>127010.118601</td>\n      <td>57876.205664</td>\n      <td>68732.141818</td>\n      <td>106696.019231</td>\n      <td>30335.294266</td>\n      <td>31144.978112</td>\n      <td>10101.886713</td>\n      <td>218.742203</td>\n    </tr>\n    <tr>\n      <th>32</th>\n      <td>22852.639510</td>\n      <td>50323.497343</td>\n      <td>15472.540140</td>\n      <td>28137.154965</td>\n      <td>20748.371888</td>\n      <td>4589.748392</td>\n      <td>25375.036993</td>\n      <td>24681.349580</td>\n      <td>20739.684685</td>\n      <td>22887.257483</td>\n      <td>14865.003916</td>\n      <td>3193.536573</td>\n      <td>30027.923986</td>\n      <td>15590.275734</td>\n      <td>14786.892028</td>\n      <td>11409.636993</td>\n      <td>7540.921695</td>\n      <td>1642.624685</td>\n      <td>5057.866713</td>\n      <td>5054.996643</td>\n      <td>8995.943916</td>\n      <td>18601.974545</td>\n      <td>4089.416923</td>\n      <td>7758.946154</td>\n      <td>5855.900490</td>\n      <td>1261.875524</td>\n      <td>659.995175</td>\n      <td>3253.888881</td>\n      <td>2364.780559</td>\n      <td>2156.684545</td>\n      <td>5196.571119</td>\n      <td>3830.254825</td>\n      <td>11422.796993</td>\n      <td>2141.696154</td>\n      <td>1461.063427</td>\n      <td>2951.560699</td>\n      <td>61116.867832</td>\n      <td>NaN</td>\n      <td>58275.672867</td>\n      <td>2817.829371</td>\n      <td>6578.807622</td>\n      <td>NaN</td>\n      <td>4266.812098</td>\n      <td>16.967848</td>\n      <td>26530.454825</td>\n      <td>-5.250000</td>\n      <td>4.351111</td>\n      <td>4663.605594</td>\n      <td>NaN</td>\n      <td>26.955775</td>\n      <td>2512.983427</td>\n      <td>80.427594</td>\n      <td>9195.223497</td>\n      <td>5524.586224</td>\n      <td>2006.440629</td>\n      <td>656.273916</td>\n      <td>800.099301</td>\n      <td>NaN</td>\n      <td>9503.097762</td>\n      <td>5067.614965</td>\n      <td>44351.628951</td>\n      <td>14739.222168</td>\n      <td>447.500000</td>\n      <td>2.112000</td>\n      <td>15463.952797</td>\n      <td>16749.993776</td>\n      <td>17124.838112</td>\n      <td>18208.699930</td>\n      <td>3742.837762</td>\n      <td>2272.820000</td>\n      <td>6909.307203</td>\n      <td>61639.637133</td>\n      <td>48368.756154</td>\n      <td>100122.929021</td>\n      <td>30732.226923</td>\n      <td>48650.040979</td>\n      <td>84695.234196</td>\n      <td>2308.411818</td>\n      <td>17160.310000</td>\n      <td>7939.262378</td>\n      <td>379.147250</td>\n    </tr>\n    <tr>\n      <th>33</th>\n      <td>2379.086573</td>\n      <td>7471.425105</td>\n      <td>283.950140</td>\n      <td>6107.616014</td>\n      <td>112.728310</td>\n      <td>11.996538</td>\n      <td>392.912867</td>\n      <td>3679.792168</td>\n      <td>42.788348</td>\n      <td>80.301189</td>\n      <td>170.112448</td>\n      <td>21.053969</td>\n      <td>6931.686503</td>\n      <td>1018.867552</td>\n      <td>323.628392</td>\n      <td>297.031189</td>\n      <td>308.954321</td>\n      <td>NaN</td>\n      <td>52.826014</td>\n      <td>200.845315</td>\n      <td>35.148116</td>\n      <td>5.342857</td>\n      <td>23.967500</td>\n      <td>34.633958</td>\n      <td>134.939860</td>\n      <td>1.000000</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>40.069697</td>\n      <td>28.796970</td>\n      <td>20.191500</td>\n      <td>4.352000</td>\n      <td>19.000000</td>\n      <td>45.000000</td>\n      <td>NaN</td>\n      <td>13539.820000</td>\n      <td>NaN</td>\n      <td>6243.193916</td>\n      <td>43.040323</td>\n      <td>55.752231</td>\n      <td>NaN</td>\n      <td>3.250455</td>\n      <td>NaN</td>\n      <td>1953.485804</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>8.000000</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>17.411977</td>\n      <td>NaN</td>\n      <td>32.762295</td>\n      <td>123.403077</td>\n      <td>NaN</td>\n      <td>24.498621</td>\n      <td>107.265734</td>\n      <td>NaN</td>\n      <td>645.405455</td>\n      <td>5.000000</td>\n      <td>10.453333</td>\n      <td>363.301818</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>10952.508112</td>\n      <td>8293.086923</td>\n      <td>8913.666084</td>\n      <td>3134.103007</td>\n      <td>2565.923077</td>\n      <td>NaN</td>\n      <td>332.944155</td>\n      <td>24899.923147</td>\n      <td>9862.862867</td>\n      <td>34227.662867</td>\n      <td>25648.054266</td>\n      <td>29002.624476</td>\n      <td>27022.949161</td>\n      <td>9371.822168</td>\n      <td>5375.769510</td>\n      <td>7340.692168</td>\n      <td>0.022000</td>\n    </tr>\n    <tr>\n      <th>34</th>\n      <td>19947.573077</td>\n      <td>34916.225874</td>\n      <td>8377.376434</td>\n      <td>19791.509021</td>\n      <td>21633.900559</td>\n      <td>3419.062028</td>\n      <td>18055.491608</td>\n      <td>27165.013147</td>\n      <td>17224.253497</td>\n      <td>16957.163566</td>\n      <td>15681.386993</td>\n      <td>5312.239301</td>\n      <td>23518.439860</td>\n      <td>10049.688462</td>\n      <td>16687.234965</td>\n      <td>6743.749860</td>\n      <td>5104.287724</td>\n      <td>29.990741</td>\n      <td>2977.826014</td>\n      <td>4441.242587</td>\n      <td>6152.821678</td>\n      <td>13611.645524</td>\n      <td>3032.286713</td>\n      <td>5790.009161</td>\n      <td>4476.318182</td>\n      <td>731.110210</td>\n      <td>273.555455</td>\n      <td>2146.340559</td>\n      <td>1903.133776</td>\n      <td>959.736783</td>\n      <td>5010.569720</td>\n      <td>3464.044825</td>\n      <td>8064.623916</td>\n      <td>1693.454336</td>\n      <td>883.716434</td>\n      <td>2221.717413</td>\n      <td>48819.291818</td>\n      <td>NaN</td>\n      <td>38458.909930</td>\n      <td>407.492676</td>\n      <td>4210.795594</td>\n      <td>NaN</td>\n      <td>3303.273636</td>\n      <td>15.973400</td>\n      <td>17203.738182</td>\n      <td>-78.919167</td>\n      <td>1219.994206</td>\n      <td>3965.940769</td>\n      <td>NaN</td>\n      <td>27.203382</td>\n      <td>1243.242797</td>\n      <td>58.336696</td>\n      <td>10208.866923</td>\n      <td>3916.442657</td>\n      <td>1879.231739</td>\n      <td>501.387063</td>\n      <td>68.410377</td>\n      <td>45441.706224</td>\n      <td>6732.085734</td>\n      <td>2360.717552</td>\n      <td>36636.553077</td>\n      <td>7516.448182</td>\n      <td>477.000000</td>\n      <td>3.000000</td>\n      <td>14997.882308</td>\n      <td>11687.922448</td>\n      <td>15840.579580</td>\n      <td>15730.698601</td>\n      <td>2838.023986</td>\n      <td>1882.830490</td>\n      <td>6067.450629</td>\n      <td>44338.936783</td>\n      <td>34018.102238</td>\n      <td>67782.520909</td>\n      <td>29590.111329</td>\n      <td>37428.096923</td>\n      <td>69245.187972</td>\n      <td>19154.212308</td>\n      <td>17570.577483</td>\n      <td>7775.998182</td>\n      <td>347.144324</td>\n    </tr>\n    <tr>\n      <th>35</th>\n      <td>17082.647902</td>\n      <td>45578.456224</td>\n      <td>14308.382797</td>\n      <td>19495.631119</td>\n      <td>24858.433706</td>\n      <td>7256.417133</td>\n      <td>30267.589790</td>\n      <td>18416.401678</td>\n      <td>15657.032937</td>\n      <td>14818.443706</td>\n      <td>17897.421888</td>\n      <td>2124.073147</td>\n      <td>33504.498112</td>\n      <td>28741.281678</td>\n      <td>7441.906364</td>\n      <td>17153.866503</td>\n      <td>6476.613750</td>\n      <td>-9.788000</td>\n      <td>11896.808601</td>\n      <td>3823.951888</td>\n      <td>21541.952937</td>\n      <td>40062.517343</td>\n      <td>11090.520559</td>\n      <td>14760.109650</td>\n      <td>13033.820210</td>\n      <td>1618.056154</td>\n      <td>740.852587</td>\n      <td>8768.500629</td>\n      <td>6063.604825</td>\n      <td>4629.956783</td>\n      <td>7872.417273</td>\n      <td>10770.603986</td>\n      <td>25881.453217</td>\n      <td>3282.671049</td>\n      <td>3780.496294</td>\n      <td>NaN</td>\n      <td>35790.490559</td>\n      <td>NaN</td>\n      <td>36092.428182</td>\n      <td>2074.757762</td>\n      <td>8072.815594</td>\n      <td>NaN</td>\n      <td>1809.156783</td>\n      <td>4.365000</td>\n      <td>16286.060070</td>\n      <td>-99.088333</td>\n      <td>NaN</td>\n      <td>0.517544</td>\n      <td>NaN</td>\n      <td>22.831294</td>\n      <td>1616.180070</td>\n      <td>198.649485</td>\n      <td>11675.244965</td>\n      <td>834.114191</td>\n      <td>2744.160714</td>\n      <td>830.778529</td>\n      <td>93.416783</td>\n      <td>NaN</td>\n      <td>5412.058741</td>\n      <td>12648.171538</td>\n      <td>88331.808881</td>\n      <td>21901.520490</td>\n      <td>99.096000</td>\n      <td>12.600000</td>\n      <td>25282.461469</td>\n      <td>51.006940</td>\n      <td>7423.777483</td>\n      <td>11032.787832</td>\n      <td>2497.196853</td>\n      <td>2012.566294</td>\n      <td>11760.228392</td>\n      <td>12960.450210</td>\n      <td>7919.080140</td>\n      <td>33776.032028</td>\n      <td>1528.451469</td>\n      <td>200.270435</td>\n      <td>43286.536993</td>\n      <td>10.788333</td>\n      <td>3738.292517</td>\n      <td>68.284831</td>\n      <td>NaN</td>\n    </tr>\n    <tr>\n      <th>36</th>\n      <td>2239.227413</td>\n      <td>13416.025664</td>\n      <td>381.324266</td>\n      <td>9873.505105</td>\n      <td>314.753982</td>\n      <td>26.291579</td>\n      <td>414.428322</td>\n      <td>3417.640420</td>\n      <td>102.211739</td>\n      <td>175.052308</td>\n      <td>281.674789</td>\n      <td>35.497984</td>\n      <td>12176.395315</td>\n      <td>1799.510979</td>\n      <td>624.467762</td>\n      <td>476.275804</td>\n      <td>272.562247</td>\n      <td>NaN</td>\n      <td>64.166312</td>\n      <td>240.628951</td>\n      <td>39.170526</td>\n      <td>10.945556</td>\n      <td>14.606000</td>\n      <td>19.733125</td>\n      <td>180.602517</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>4.000000</td>\n      <td>NaN</td>\n      <td>74.102791</td>\n      <td>15.093750</td>\n      <td>-3.156667</td>\n      <td>8.424000</td>\n      <td>NaN</td>\n      <td>-30.000000</td>\n      <td>NaN</td>\n      <td>18169.855524</td>\n      <td>NaN</td>\n      <td>10541.569860</td>\n      <td>60.636364</td>\n      <td>92.584692</td>\n      <td>NaN</td>\n      <td>4.323750</td>\n      <td>NaN</td>\n      <td>2464.321119</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>5.000000</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>5.280571</td>\n      <td>NaN</td>\n      <td>128.961905</td>\n      <td>202.857692</td>\n      <td>NaN</td>\n      <td>28.774667</td>\n      <td>162.317483</td>\n      <td>NaN</td>\n      <td>675.943706</td>\n      <td>-29.000000</td>\n      <td>-27.646364</td>\n      <td>602.500280</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>17498.489091</td>\n      <td>20561.601958</td>\n      <td>12266.726014</td>\n      <td>4846.001818</td>\n      <td>3425.058322</td>\n      <td>59.420000</td>\n      <td>280.252353</td>\n      <td>35474.191958</td>\n      <td>11097.875874</td>\n      <td>44539.564476</td>\n      <td>26103.315664</td>\n      <td>47372.151119</td>\n      <td>39735.688741</td>\n      <td>15683.341818</td>\n      <td>6469.273636</td>\n      <td>9009.943776</td>\n      <td>0.020000</td>\n    </tr>\n    <tr>\n      <th>37</th>\n      <td>11024.235874</td>\n      <td>16511.446224</td>\n      <td>1297.862028</td>\n      <td>17614.013636</td>\n      <td>1137.631189</td>\n      <td>46.313630</td>\n      <td>824.978392</td>\n      <td>16151.397902</td>\n      <td>151.233803</td>\n      <td>387.644685</td>\n      <td>1747.183147</td>\n      <td>182.048252</td>\n      <td>16734.088112</td>\n      <td>1416.220490</td>\n      <td>2215.632448</td>\n      <td>324.243916</td>\n      <td>580.277381</td>\n      <td>NaN</td>\n      <td>64.420423</td>\n      <td>1915.625455</td>\n      <td>85.164839</td>\n      <td>42.991264</td>\n      <td>6.342222</td>\n      <td>67.344895</td>\n      <td>10.471667</td>\n      <td>23.268795</td>\n      <td>139.915455</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>123.623239</td>\n      <td>103.303333</td>\n      <td>4.885556</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>69388.854476</td>\n      <td>NaN</td>\n      <td>27125.879790</td>\n      <td>5.666667</td>\n      <td>114.220350</td>\n      <td>NaN</td>\n      <td>4.442353</td>\n      <td>NaN</td>\n      <td>8520.157203</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>18.469778</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>32.246503</td>\n      <td>NaN</td>\n      <td>6.268889</td>\n      <td>352.670862</td>\n      <td>NaN</td>\n      <td>142.401469</td>\n      <td>755.886713</td>\n      <td>NaN</td>\n      <td>2402.826993</td>\n      <td>26.500000</td>\n      <td>213.453217</td>\n      <td>681.267343</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>7642.500699</td>\n      <td>10629.770490</td>\n      <td>10698.796713</td>\n      <td>5569.438322</td>\n      <td>2329.613846</td>\n      <td>127.904965</td>\n      <td>1020.067203</td>\n      <td>44144.428112</td>\n      <td>30870.677063</td>\n      <td>59440.577133</td>\n      <td>21599.851049</td>\n      <td>33656.648112</td>\n      <td>51410.551119</td>\n      <td>20375.380769</td>\n      <td>13960.701399</td>\n      <td>5286.761119</td>\n      <td>15.000000</td>\n    </tr>\n    <tr>\n      <th>38</th>\n      <td>6923.538531</td>\n      <td>10986.172657</td>\n      <td>498.700210</td>\n      <td>10669.501329</td>\n      <td>397.418322</td>\n      <td>37.014855</td>\n      <td>413.539021</td>\n      <td>9485.399441</td>\n      <td>77.520350</td>\n      <td>365.364895</td>\n      <td>752.881678</td>\n      <td>63.583706</td>\n      <td>10033.864755</td>\n      <td>997.098462</td>\n      <td>849.879930</td>\n      <td>424.559580</td>\n      <td>359.198462</td>\n      <td>NaN</td>\n      <td>54.377558</td>\n      <td>1054.039161</td>\n      <td>54.129167</td>\n      <td>37.848679</td>\n      <td>8.803871</td>\n      <td>52.630699</td>\n      <td>7.574528</td>\n      <td>12.048000</td>\n      <td>91.476993</td>\n      <td>14.739167</td>\n      <td>NaN</td>\n      <td>31.459916</td>\n      <td>42.526462</td>\n      <td>6.548750</td>\n      <td>12.672857</td>\n      <td>7.000000</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>54955.784336</td>\n      <td>NaN</td>\n      <td>16473.388042</td>\n      <td>NaN</td>\n      <td>99.815035</td>\n      <td>NaN</td>\n      <td>6.146852</td>\n      <td>NaN</td>\n      <td>4948.939371</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>10.118000</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>21.399580</td>\n      <td>NaN</td>\n      <td>9.412500</td>\n      <td>111.742174</td>\n      <td>NaN</td>\n      <td>67.256000</td>\n      <td>395.911888</td>\n      <td>NaN</td>\n      <td>791.922797</td>\n      <td>NaN</td>\n      <td>170.982238</td>\n      <td>393.066294</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>8630.962168</td>\n      <td>11158.941399</td>\n      <td>10260.830699</td>\n      <td>5551.165245</td>\n      <td>2392.042098</td>\n      <td>80.161357</td>\n      <td>582.250769</td>\n      <td>34765.576783</td>\n      <td>25404.860420</td>\n      <td>45314.434825</td>\n      <td>18868.919091</td>\n      <td>21331.411259</td>\n      <td>41793.649021</td>\n      <td>11981.676643</td>\n      <td>9902.368182</td>\n      <td>4783.086713</td>\n      <td>25.000000</td>\n    </tr>\n    <tr>\n      <th>39</th>\n      <td>21925.021189</td>\n      <td>67338.429371</td>\n      <td>20569.701608</td>\n      <td>44807.515105</td>\n      <td>24043.436783</td>\n      <td>4911.540420</td>\n      <td>40020.492867</td>\n      <td>36130.641608</td>\n      <td>19396.117692</td>\n      <td>14919.373916</td>\n      <td>20428.262308</td>\n      <td>4621.159860</td>\n      <td>54991.423427</td>\n      <td>21125.778322</td>\n      <td>26691.769161</td>\n      <td>11699.538951</td>\n      <td>11333.330584</td>\n      <td>-3.238182</td>\n      <td>7874.601678</td>\n      <td>7177.074685</td>\n      <td>13013.560140</td>\n      <td>18550.752517</td>\n      <td>6470.795385</td>\n      <td>7243.153007</td>\n      <td>9406.726783</td>\n      <td>1424.361119</td>\n      <td>622.260839</td>\n      <td>5678.498112</td>\n      <td>3799.688252</td>\n      <td>2337.074336</td>\n      <td>5976.223007</td>\n      <td>6923.695455</td>\n      <td>16354.447273</td>\n      <td>2057.284056</td>\n      <td>2032.195594</td>\n      <td>NaN</td>\n      <td>43195.578322</td>\n      <td>NaN</td>\n      <td>59145.962448</td>\n      <td>1321.499161</td>\n      <td>3576.484476</td>\n      <td>NaN</td>\n      <td>4434.812168</td>\n      <td>18.438676</td>\n      <td>34122.182238</td>\n      <td>2.360000</td>\n      <td>NaN</td>\n      <td>7623.418042</td>\n      <td>NaN</td>\n      <td>16.196056</td>\n      <td>1901.061958</td>\n      <td>94.659254</td>\n      <td>11598.198601</td>\n      <td>3781.564196</td>\n      <td>2479.951259</td>\n      <td>722.352098</td>\n      <td>405.140244</td>\n      <td>NaN</td>\n      <td>11633.406573</td>\n      <td>6469.893287</td>\n      <td>54929.078531</td>\n      <td>22014.285245</td>\n      <td>135.964000</td>\n      <td>12.000000</td>\n      <td>39430.359161</td>\n      <td>11972.877063</td>\n      <td>19245.249650</td>\n      <td>22436.572727</td>\n      <td>5738.832517</td>\n      <td>1710.142028</td>\n      <td>6762.436993</td>\n      <td>78649.534685</td>\n      <td>60386.286014</td>\n      <td>110126.209580</td>\n      <td>39684.510000</td>\n      <td>59830.190280</td>\n      <td>103036.757133</td>\n      <td>27089.158601</td>\n      <td>23993.406853</td>\n      <td>9767.295734</td>\n      <td>334.869756</td>\n    </tr>\n    <tr>\n      <th>40</th>\n      <td>18794.578811</td>\n      <td>26702.705175</td>\n      <td>6489.030350</td>\n      <td>24386.750559</td>\n      <td>17689.671678</td>\n      <td>4003.068601</td>\n      <td>18898.214336</td>\n      <td>33971.532238</td>\n      <td>19065.436294</td>\n      <td>19612.629301</td>\n      <td>12807.144685</td>\n      <td>4403.534615</td>\n      <td>21550.356923</td>\n      <td>12348.471399</td>\n      <td>13322.372028</td>\n      <td>7652.320769</td>\n      <td>4509.372119</td>\n      <td>-5.000000</td>\n      <td>3526.321958</td>\n      <td>6585.782937</td>\n      <td>6454.651608</td>\n      <td>14064.668462</td>\n      <td>2954.521818</td>\n      <td>6704.410350</td>\n      <td>4318.451329</td>\n      <td>1006.653077</td>\n      <td>324.234545</td>\n      <td>3270.596853</td>\n      <td>2635.789650</td>\n      <td>1319.277063</td>\n      <td>4532.503497</td>\n      <td>3106.724126</td>\n      <td>7590.319510</td>\n      <td>2060.226014</td>\n      <td>828.586434</td>\n      <td>1957.964545</td>\n      <td>36229.275804</td>\n      <td>NaN</td>\n      <td>33370.945315</td>\n      <td>280.907832</td>\n      <td>4607.132797</td>\n      <td>NaN</td>\n      <td>3247.999231</td>\n      <td>18.241607</td>\n      <td>9412.404196</td>\n      <td>-17.254286</td>\n      <td>752.392441</td>\n      <td>43.962113</td>\n      <td>NaN</td>\n      <td>22.127255</td>\n      <td>942.737972</td>\n      <td>96.272932</td>\n      <td>9000.258741</td>\n      <td>3787.050769</td>\n      <td>3107.429907</td>\n      <td>274.052448</td>\n      <td>122.585385</td>\n      <td>NaN</td>\n      <td>7014.410000</td>\n      <td>2330.955524</td>\n      <td>39443.062587</td>\n      <td>9822.268182</td>\n      <td>363.000000</td>\n      <td>7.500000</td>\n      <td>13128.156154</td>\n      <td>16461.212797</td>\n      <td>19893.858601</td>\n      <td>13581.162028</td>\n      <td>3370.232517</td>\n      <td>1981.239790</td>\n      <td>20070.128951</td>\n      <td>61258.202867</td>\n      <td>43256.156853</td>\n      <td>96475.753287</td>\n      <td>27532.751189</td>\n      <td>38210.900699</td>\n      <td>66572.881259</td>\n      <td>15309.077972</td>\n      <td>17131.033497</td>\n      <td>8178.371049</td>\n      <td>167.374167</td>\n    </tr>\n    <tr>\n      <th>41</th>\n      <td>23205.259930</td>\n      <td>48349.828951</td>\n      <td>17021.833357</td>\n      <td>30538.574895</td>\n      <td>25513.943776</td>\n      <td>5267.832098</td>\n      <td>33711.105734</td>\n      <td>33729.081678</td>\n      <td>32743.470140</td>\n      <td>15194.223706</td>\n      <td>13605.678462</td>\n      <td>4273.264965</td>\n      <td>32562.995804</td>\n      <td>17161.987552</td>\n      <td>18588.113776</td>\n      <td>12054.236364</td>\n      <td>9113.079450</td>\n      <td>1163.505309</td>\n      <td>5546.318881</td>\n      <td>5066.603636</td>\n      <td>10331.841329</td>\n      <td>18920.311399</td>\n      <td>5172.027343</td>\n      <td>7374.309301</td>\n      <td>6488.948462</td>\n      <td>1373.244965</td>\n      <td>463.271329</td>\n      <td>4197.461049</td>\n      <td>2790.015804</td>\n      <td>2066.554965</td>\n      <td>5361.930909</td>\n      <td>5735.627762</td>\n      <td>12943.632587</td>\n      <td>2225.103217</td>\n      <td>1617.619091</td>\n      <td>3.000000</td>\n      <td>46406.426573</td>\n      <td>NaN</td>\n      <td>54458.219510</td>\n      <td>1938.808182</td>\n      <td>5091.624965</td>\n      <td>NaN</td>\n      <td>4615.455524</td>\n      <td>24.919412</td>\n      <td>28213.117832</td>\n      <td>20.863478</td>\n      <td>1307.908140</td>\n      <td>5887.886853</td>\n      <td>NaN</td>\n      <td>16.185526</td>\n      <td>1964.381888</td>\n      <td>68.283556</td>\n      <td>10052.520769</td>\n      <td>7643.873566</td>\n      <td>5249.282867</td>\n      <td>795.357413</td>\n      <td>455.327273</td>\n      <td>NaN</td>\n      <td>9756.677343</td>\n      <td>5300.854056</td>\n      <td>54877.302448</td>\n      <td>18638.237902</td>\n      <td>231.500000</td>\n      <td>9.000000</td>\n      <td>21840.979510</td>\n      <td>17436.274825</td>\n      <td>19958.047483</td>\n      <td>18788.876294</td>\n      <td>3879.168741</td>\n      <td>2272.113427</td>\n      <td>10042.527762</td>\n      <td>70852.021818</td>\n      <td>52714.928462</td>\n      <td>115827.664056</td>\n      <td>35415.340000</td>\n      <td>47218.529161</td>\n      <td>88666.468392</td>\n      <td>2883.492238</td>\n      <td>19789.219231</td>\n      <td>9371.531608</td>\n      <td>443.736512</td>\n    </tr>\n    <tr>\n      <th>42</th>\n      <td>10375.148392</td>\n      <td>15976.902448</td>\n      <td>814.451189</td>\n      <td>14885.264755</td>\n      <td>1052.296783</td>\n      <td>3.333333</td>\n      <td>721.913846</td>\n      <td>18238.584196</td>\n      <td>135.524056</td>\n      <td>404.596014</td>\n      <td>939.838042</td>\n      <td>87.767273</td>\n      <td>15069.359930</td>\n      <td>1501.013357</td>\n      <td>1102.671818</td>\n      <td>518.832308</td>\n      <td>385.767905</td>\n      <td>NaN</td>\n      <td>63.398136</td>\n      <td>1262.854266</td>\n      <td>111.992500</td>\n      <td>44.536588</td>\n      <td>10.955000</td>\n      <td>75.980699</td>\n      <td>1.245714</td>\n      <td>31.292805</td>\n      <td>57.608462</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>56.049219</td>\n      <td>40.771631</td>\n      <td>9.500000</td>\n      <td>11.970000</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>38834.043427</td>\n      <td>NaN</td>\n      <td>19788.368531</td>\n      <td>-8.000000</td>\n      <td>172.777273</td>\n      <td>NaN</td>\n      <td>2.373200</td>\n      <td>NaN</td>\n      <td>6050.036364</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>33.411842</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>33.125734</td>\n      <td>NaN</td>\n      <td>-7.326667</td>\n      <td>179.754179</td>\n      <td>NaN</td>\n      <td>88.986224</td>\n      <td>335.433566</td>\n      <td>NaN</td>\n      <td>1236.355664</td>\n      <td>-58.445000</td>\n      <td>-43.211786</td>\n      <td>267.038043</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>13686.231608</td>\n      <td>15307.678322</td>\n      <td>15918.666503</td>\n      <td>7409.559441</td>\n      <td>3708.991678</td>\n      <td>62.735786</td>\n      <td>960.774366</td>\n      <td>53384.897902</td>\n      <td>42913.221259</td>\n      <td>83497.778671</td>\n      <td>32852.632308</td>\n      <td>35724.612098</td>\n      <td>61205.272308</td>\n      <td>15183.474196</td>\n      <td>17495.198811</td>\n      <td>6540.721259</td>\n      <td>NaN</td>\n    </tr>\n    <tr>\n      <th>43</th>\n      <td>7549.109021</td>\n      <td>20722.851469</td>\n      <td>999.648881</td>\n      <td>18227.382168</td>\n      <td>575.417326</td>\n      <td>37.843246</td>\n      <td>516.772867</td>\n      <td>13185.211678</td>\n      <td>147.694196</td>\n      <td>507.426713</td>\n      <td>584.831608</td>\n      <td>89.136084</td>\n      <td>17852.915175</td>\n      <td>1664.022937</td>\n      <td>2654.802657</td>\n      <td>623.737762</td>\n      <td>704.650521</td>\n      <td>NaN</td>\n      <td>44.114348</td>\n      <td>1563.513007</td>\n      <td>70.411176</td>\n      <td>25.812609</td>\n      <td>2.235000</td>\n      <td>71.822238</td>\n      <td>4.463333</td>\n      <td>12.443077</td>\n      <td>87.095254</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>27.587255</td>\n      <td>20.476724</td>\n      <td>2.500000</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>57623.884895</td>\n      <td>NaN</td>\n      <td>18156.535664</td>\n      <td>NaN</td>\n      <td>184.143287</td>\n      <td>NaN</td>\n      <td>5.314737</td>\n      <td>NaN</td>\n      <td>7426.636364</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>17.337500</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>40.221408</td>\n      <td>NaN</td>\n      <td>-11.880000</td>\n      <td>160.386100</td>\n      <td>NaN</td>\n      <td>126.476058</td>\n      <td>481.206400</td>\n      <td>NaN</td>\n      <td>1238.293706</td>\n      <td>6.920000</td>\n      <td>84.384676</td>\n      <td>650.886084</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>13525.426224</td>\n      <td>17045.276783</td>\n      <td>19464.723007</td>\n      <td>8264.136573</td>\n      <td>4952.252168</td>\n      <td>83.495833</td>\n      <td>79.424240</td>\n      <td>63668.895594</td>\n      <td>34808.442168</td>\n      <td>83646.160909</td>\n      <td>36196.693217</td>\n      <td>50769.708322</td>\n      <td>72883.223287</td>\n      <td>25058.369371</td>\n      <td>19349.989930</td>\n      <td>9594.867483</td>\n      <td>26.250000</td>\n    </tr>\n    <tr>\n      <th>44</th>\n      <td>8049.992308</td>\n      <td>9377.273007</td>\n      <td>571.016713</td>\n      <td>7403.959580</td>\n      <td>960.670490</td>\n      <td>34.648722</td>\n      <td>531.034895</td>\n      <td>4963.966224</td>\n      <td>99.817273</td>\n      <td>153.792657</td>\n      <td>608.494685</td>\n      <td>77.139021</td>\n      <td>7300.262448</td>\n      <td>730.311469</td>\n      <td>846.433636</td>\n      <td>330.388042</td>\n      <td>430.257253</td>\n      <td>NaN</td>\n      <td>31.559714</td>\n      <td>770.183287</td>\n      <td>63.158182</td>\n      <td>19.318247</td>\n      <td>14.097391</td>\n      <td>34.191888</td>\n      <td>120.533125</td>\n      <td>12.555469</td>\n      <td>72.642867</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>12.395556</td>\n      <td>33.574470</td>\n      <td>9.030000</td>\n      <td>-9.880000</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>45778.574685</td>\n      <td>NaN</td>\n      <td>15146.968112</td>\n      <td>NaN</td>\n      <td>52.422519</td>\n      <td>NaN</td>\n      <td>4.743000</td>\n      <td>NaN</td>\n      <td>5871.248182</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>5.416667</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>25.698462</td>\n      <td>NaN</td>\n      <td>4.174667</td>\n      <td>589.096727</td>\n      <td>NaN</td>\n      <td>92.995760</td>\n      <td>370.760839</td>\n      <td>NaN</td>\n      <td>1117.737552</td>\n      <td>-41.283333</td>\n      <td>102.720210</td>\n      <td>430.983706</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>4496.693287</td>\n      <td>5023.550909</td>\n      <td>7472.975944</td>\n      <td>3882.942657</td>\n      <td>952.012657</td>\n      <td>132.426304</td>\n      <td>218.220909</td>\n      <td>31182.601818</td>\n      <td>18169.510070</td>\n      <td>39619.563287</td>\n      <td>11029.915734</td>\n      <td>23812.046993</td>\n      <td>31100.185175</td>\n      <td>2834.139580</td>\n      <td>6636.467413</td>\n      <td>3466.077063</td>\n      <td>3.505000</td>\n    </tr>\n    <tr>\n      <th>45</th>\n      <td>17745.916014</td>\n      <td>35800.912448</td>\n      <td>9508.014965</td>\n      <td>24229.873147</td>\n      <td>16107.063077</td>\n      <td>3554.222657</td>\n      <td>23757.771538</td>\n      <td>34050.409580</td>\n      <td>15485.885804</td>\n      <td>14245.086993</td>\n      <td>14228.378671</td>\n      <td>3620.284615</td>\n      <td>27243.504615</td>\n      <td>12476.371608</td>\n      <td>16600.540490</td>\n      <td>10523.128392</td>\n      <td>6340.195691</td>\n      <td>1370.072657</td>\n      <td>5109.063077</td>\n      <td>4061.309580</td>\n      <td>8324.060769</td>\n      <td>22916.690979</td>\n      <td>5463.712867</td>\n      <td>8409.669301</td>\n      <td>7258.836224</td>\n      <td>1328.196783</td>\n      <td>646.841469</td>\n      <td>4753.078671</td>\n      <td>3021.689650</td>\n      <td>2654.704406</td>\n      <td>4863.574825</td>\n      <td>5181.216783</td>\n      <td>14224.687273</td>\n      <td>2647.283846</td>\n      <td>1732.512937</td>\n      <td>NaN</td>\n      <td>53242.555524</td>\n      <td>NaN</td>\n      <td>39205.858601</td>\n      <td>2671.420210</td>\n      <td>4447.306364</td>\n      <td>NaN</td>\n      <td>2596.319441</td>\n      <td>15.093600</td>\n      <td>14638.547692</td>\n      <td>-88.420000</td>\n      <td>NaN</td>\n      <td>44.705692</td>\n      <td>NaN</td>\n      <td>4.750909</td>\n      <td>1466.265175</td>\n      <td>52.113694</td>\n      <td>6085.695874</td>\n      <td>3632.149860</td>\n      <td>1735.106835</td>\n      <td>600.786364</td>\n      <td>177.015385</td>\n      <td>NaN</td>\n      <td>6801.026643</td>\n      <td>4396.411329</td>\n      <td>37466.308392</td>\n      <td>10710.121119</td>\n      <td>190.745000</td>\n      <td>11.000000</td>\n      <td>15245.023147</td>\n      <td>558.634385</td>\n      <td>14653.096014</td>\n      <td>13430.491399</td>\n      <td>824.582797</td>\n      <td>2001.383077</td>\n      <td>6307.075874</td>\n      <td>23674.035245</td>\n      <td>16641.927343</td>\n      <td>48125.897762</td>\n      <td>2728.627133</td>\n      <td>3690.272090</td>\n      <td>52896.166643</td>\n      <td>2.970000</td>\n      <td>6466.961888</td>\n      <td>561.239037</td>\n      <td>NaN</td>\n    </tr>\n  </tbody>\n</table>\n</div>"},"metadata":{}}]},{"cell_type":"markdown","source":"Store numbers begin from 1 to 45, department numbers are from 1 to 99, but some numbers are missing such as there is no 88 or 89 etc. Total number of departments is 81. \n\nFrom the pivot table, it is obviously seen that there are some wrong values such as there are 0 and minus values for weekly sales. But sales amount can not be minus. Also, it is impossible for one department not to sell anything whole week. So, I will change this values.","metadata":{}},{"cell_type":"code","source":"df.loc[df['Weekly_Sales']<=0]","metadata":{"execution":{"iopub.status.busy":"2024-05-11T22:47:38.628373Z","iopub.execute_input":"2024-05-11T22:47:38.628591Z","iopub.status.idle":"2024-05-11T22:47:38.658688Z","shell.execute_reply.started":"2024-05-11T22:47:38.628564Z","shell.execute_reply":"2024-05-11T22:47:38.657945Z"},"trusted":true},"execution_count":18,"outputs":[{"execution_count":18,"output_type":"execute_result","data":{"text/plain":"        Store  Dept        Date  Weekly_Sales  IsHoliday  Temperature  \\\n188         1    47  2010-02-19       -863.00      False        39.93   \n406         1    47  2010-03-12       -698.00      False        57.79   \n2549        1    47  2010-10-08        -58.00      False        63.93   \n3632        1    54  2011-01-21        -50.00      False        44.04   \n4132        1    47  2011-03-11          0.00      False        53.56   \n...       ...   ...         ...           ...        ...          ...   \n420066     45    49  2012-05-25         -4.97      False        67.21   \n420403     45    49  2012-06-29        -34.00      False        75.22   \n420736     45    49  2012-08-03         -1.91      False        76.58   \n421007     45    54  2012-08-31          0.00      False        75.09   \n421142     45    49  2012-09-14         -6.83      False        67.87   \n\n        Fuel_Price  MarkDown1  MarkDown2  MarkDown3  MarkDown4  MarkDown5  \\\n188          2.514        NaN        NaN        NaN        NaN        NaN   \n406          2.667        NaN        NaN        NaN        NaN        NaN   \n2549         2.633        NaN        NaN        NaN        NaN        NaN   \n3632         3.016        NaN        NaN        NaN        NaN        NaN   \n4132         3.459        NaN        NaN        NaN        NaN        NaN   \n...            ...        ...        ...        ...        ...        ...   \n420066       3.798    5370.39        NaN     361.22    1287.62    2461.81   \n420403       3.506    3291.36     425.60        NaN     314.88    2255.34   \n420736       3.654   24853.05      39.56      17.96   11142.69    2768.32   \n421007       3.867   23641.30       6.00      92.93    6988.31    3992.13   \n421142       3.948   11407.95        NaN       4.30    3421.72    5268.92   \n\n               CPI  Unemployment Type    Size  \n188     211.289143         8.106    A  151315  \n406     211.380643         8.106    A  151315  \n2549    211.746754         7.838    A  151315  \n3632    211.827234         7.742    A  151315  \n4132    214.111056         7.742    A  151315  \n...            ...           ...  ...     ...  \n420066  191.002810         8.567    B  118221  \n420403  191.099246         8.567    B  118221  \n420736  191.164090         8.684    B  118221  \n421007  191.461281         8.684    B  118221  \n421142  191.699850         8.684    B  118221  \n\n[1358 rows x 16 columns]","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>Store</th>\n      <th>Dept</th>\n      <th>Date</th>\n      <th>Weekly_Sales</th>\n      <th>IsHoliday</th>\n      <th>Temperature</th>\n      <th>Fuel_Price</th>\n      <th>MarkDown1</th>\n      <th>MarkDown2</th>\n      <th>MarkDown3</th>\n      <th>MarkDown4</th>\n      <th>MarkDown5</th>\n      <th>CPI</th>\n      <th>Unemployment</th>\n      <th>Type</th>\n      <th>Size</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>188</th>\n      <td>1</td>\n      <td>47</td>\n      <td>2010-02-19</td>\n      <td>-863.00</td>\n      <td>False</td>\n      <td>39.93</td>\n      <td>2.514</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>211.289143</td>\n      <td>8.106</td>\n      <td>A</td>\n      <td>151315</td>\n    </tr>\n    <tr>\n      <th>406</th>\n      <td>1</td>\n      <td>47</td>\n      <td>2010-03-12</td>\n      <td>-698.00</td>\n      <td>False</td>\n      <td>57.79</td>\n      <td>2.667</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>211.380643</td>\n      <td>8.106</td>\n      <td>A</td>\n      <td>151315</td>\n    </tr>\n    <tr>\n      <th>2549</th>\n      <td>1</td>\n      <td>47</td>\n      <td>2010-10-08</td>\n      <td>-58.00</td>\n      <td>False</td>\n      <td>63.93</td>\n      <td>2.633</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>211.746754</td>\n      <td>7.838</td>\n      <td>A</td>\n      <td>151315</td>\n    </tr>\n    <tr>\n      <th>3632</th>\n      <td>1</td>\n      <td>54</td>\n      <td>2011-01-21</td>\n      <td>-50.00</td>\n      <td>False</td>\n      <td>44.04</td>\n      <td>3.016</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>211.827234</td>\n      <td>7.742</td>\n      <td>A</td>\n      <td>151315</td>\n    </tr>\n    <tr>\n      <th>4132</th>\n      <td>1</td>\n      <td>47</td>\n      <td>2011-03-11</td>\n      <td>0.00</td>\n      <td>False</td>\n      <td>53.56</td>\n      <td>3.459</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>214.111056</td>\n      <td>7.742</td>\n      <td>A</td>\n      <td>151315</td>\n    </tr>\n    <tr>\n      <th>...</th>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n    </tr>\n    <tr>\n      <th>420066</th>\n      <td>45</td>\n      <td>49</td>\n      <td>2012-05-25</td>\n      <td>-4.97</td>\n      <td>False</td>\n      <td>67.21</td>\n      <td>3.798</td>\n      <td>5370.39</td>\n      <td>NaN</td>\n      <td>361.22</td>\n      <td>1287.62</td>\n      <td>2461.81</td>\n      <td>191.002810</td>\n      <td>8.567</td>\n      <td>B</td>\n      <td>118221</td>\n    </tr>\n    <tr>\n      <th>420403</th>\n      <td>45</td>\n      <td>49</td>\n      <td>2012-06-29</td>\n      <td>-34.00</td>\n      <td>False</td>\n      <td>75.22</td>\n      <td>3.506</td>\n      <td>3291.36</td>\n      <td>425.60</td>\n      <td>NaN</td>\n      <td>314.88</td>\n      <td>2255.34</td>\n      <td>191.099246</td>\n      <td>8.567</td>\n      <td>B</td>\n      <td>118221</td>\n    </tr>\n    <tr>\n      <th>420736</th>\n      <td>45</td>\n      <td>49</td>\n      <td>2012-08-03</td>\n      <td>-1.91</td>\n      <td>False</td>\n      <td>76.58</td>\n      <td>3.654</td>\n      <td>24853.05</td>\n      <td>39.56</td>\n      <td>17.96</td>\n      <td>11142.69</td>\n      <td>2768.32</td>\n      <td>191.164090</td>\n      <td>8.684</td>\n      <td>B</td>\n      <td>118221</td>\n    </tr>\n    <tr>\n      <th>421007</th>\n      <td>45</td>\n      <td>54</td>\n      <td>2012-08-31</td>\n      <td>0.00</td>\n      <td>False</td>\n      <td>75.09</td>\n      <td>3.867</td>\n      <td>23641.30</td>\n      <td>6.00</td>\n      <td>92.93</td>\n      <td>6988.31</td>\n      <td>3992.13</td>\n      <td>191.461281</td>\n      <td>8.684</td>\n      <td>B</td>\n      <td>118221</td>\n    </tr>\n    <tr>\n      <th>421142</th>\n      <td>45</td>\n      <td>49</td>\n      <td>2012-09-14</td>\n      <td>-6.83</td>\n      <td>False</td>\n      <td>67.87</td>\n      <td>3.948</td>\n      <td>11407.95</td>\n      <td>NaN</td>\n      <td>4.30</td>\n      <td>3421.72</td>\n      <td>5268.92</td>\n      <td>191.699850</td>\n      <td>8.684</td>\n      <td>B</td>\n      <td>118221</td>\n    </tr>\n  </tbody>\n</table>\n<p>1358 rows × 16 columns</p>\n</div>"},"metadata":{}}]},{"cell_type":"markdown","source":"1358 rows in 421570 rows means 0.3%, so I can delete and ignore these rows which contains wrong sales values.","metadata":{}},{"cell_type":"code","source":"df = df.loc[df['Weekly_Sales'] > 0]","metadata":{"execution":{"iopub.status.busy":"2024-05-11T22:47:38.659770Z","iopub.execute_input":"2024-05-11T22:47:38.660042Z","iopub.status.idle":"2024-05-11T22:47:38.701052Z","shell.execute_reply.started":"2024-05-11T22:47:38.660010Z","shell.execute_reply":"2024-05-11T22:47:38.700242Z"},"trusted":true},"execution_count":19,"outputs":[]},{"cell_type":"code","source":"df.shape # new data shape","metadata":{"execution":{"iopub.status.busy":"2024-05-11T22:47:38.702234Z","iopub.execute_input":"2024-05-11T22:47:38.702519Z","iopub.status.idle":"2024-05-11T22:47:38.708356Z","shell.execute_reply.started":"2024-05-11T22:47:38.702483Z","shell.execute_reply":"2024-05-11T22:47:38.707495Z"},"trusted":true},"execution_count":20,"outputs":[{"execution_count":20,"output_type":"execute_result","data":{"text/plain":"(420212, 16)"},"metadata":{}}]},{"cell_type":"markdown","source":"# Date","metadata":{}},{"cell_type":"code","source":"df['Date'].head(5).append(df['Date'].tail(5)) # to see first and last 5 rows.","metadata":{"execution":{"iopub.status.busy":"2024-05-11T22:47:38.709421Z","iopub.execute_input":"2024-05-11T22:47:38.709692Z","iopub.status.idle":"2024-05-11T22:47:38.723725Z","shell.execute_reply.started":"2024-05-11T22:47:38.709656Z","shell.execute_reply":"2024-05-11T22:47:38.722998Z"},"trusted":true},"execution_count":21,"outputs":[{"execution_count":21,"output_type":"execute_result","data":{"text/plain":"0         2010-02-05\n1         2010-02-05\n2         2010-02-05\n3         2010-02-05\n4         2010-02-05\n421565    2012-10-26\n421566    2012-10-26\n421567    2012-10-26\n421568    2012-10-26\n421569    2012-10-26\nName: Date, dtype: object"},"metadata":{}}]},{"cell_type":"markdown","source":"Our data is from 5th of February 2010 to 26th of October 2012.  ","metadata":{}},{"cell_type":"markdown","source":"# IsHoliday column","metadata":{}},{"cell_type":"code","source":"sns.barplot(x='IsHoliday', y='Weekly_Sales', data=df)","metadata":{"scrolled":true,"execution":{"iopub.status.busy":"2024-05-11T22:47:38.724661Z","iopub.execute_input":"2024-05-11T22:47:38.724905Z","iopub.status.idle":"2024-05-11T22:47:43.556813Z","shell.execute_reply.started":"2024-05-11T22:47:38.724858Z","shell.execute_reply":"2024-05-11T22:47:43.556114Z"},"trusted":true},"execution_count":22,"outputs":[{"execution_count":22,"output_type":"execute_result","data":{"text/plain":"<AxesSubplot:xlabel='IsHoliday', ylabel='Weekly_Sales'>"},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"<Figure size 432x288 with 1 Axes>","image/png":"\n"},"metadata":{"needs_background":"light"}}]},{"cell_type":"code","source":"df_holiday = df.loc[df['IsHoliday']==True]\ndf_holiday['Date'].unique() ","metadata":{"execution":{"iopub.status.busy":"2024-05-11T22:47:43.557957Z","iopub.execute_input":"2024-05-11T22:47:43.558214Z","iopub.status.idle":"2024-05-11T22:47:43.571138Z","shell.execute_reply.started":"2024-05-11T22:47:43.558177Z","shell.execute_reply":"2024-05-11T22:47:43.570434Z"},"trusted":true},"execution_count":23,"outputs":[{"execution_count":23,"output_type":"execute_result","data":{"text/plain":"array(['2010-02-12', '2010-09-10', '2010-11-26', '2010-12-31',\n       '2011-02-11', '2011-09-09', '2011-11-25', '2011-12-30',\n       '2012-02-10', '2012-09-07'], dtype=object)"},"metadata":{}}]},{"cell_type":"code","source":"df_not_holiday = df.loc[df['IsHoliday']==False]\ndf_not_holiday['Date'].nunique() ","metadata":{"execution":{"iopub.status.busy":"2024-05-11T22:47:43.572199Z","iopub.execute_input":"2024-05-11T22:47:43.572426Z","iopub.status.idle":"2024-05-11T22:47:43.657649Z","shell.execute_reply.started":"2024-05-11T22:47:43.572389Z","shell.execute_reply":"2024-05-11T22:47:43.656757Z"},"trusted":true},"execution_count":24,"outputs":[{"execution_count":24,"output_type":"execute_result","data":{"text/plain":"133"},"metadata":{}}]},{"cell_type":"markdown","source":"All holidays are not in the data. There are 4 holiday values such as;\n\nSuper Bowl: 12-Feb-10, 11-Feb-11, 10-Feb-12, 8-Feb-13\n\nLabor Day: 10-Sep-10, 9-Sep-11, 7-Sep-12, 6-Sep-13\n\nThanksgiving: 26-Nov-10, 25-Nov-11, 23-Nov-12, 29-Nov-13\n\nChristmas: 31-Dec-10, 30-Dec-11, 28-Dec-12, 27-Dec-13\n\n\nAfter the 07-Sep-2012 holidays are in test set for prediction. When we look at the data, average weekly sales for holidays are significantly higher than not-holiday days. In train data, there are 133 weeks for non-holiday and 10 weeks for holiday.","metadata":{}},{"cell_type":"markdown","source":"I want to see differences between holiday types. So, I create new columns for 4 types of holidays and fill them with boolean values. If date belongs to this type of holiday it is True, if not False. ","metadata":{}},{"cell_type":"code","source":"# Super bowl dates in train set\ndf.loc[(df['Date'] == '2010-02-12')|(df['Date'] == '2011-02-11')|(df['Date'] == '2012-02-10'),'Super_Bowl'] = True\ndf.loc[(df['Date'] != '2010-02-12')&(df['Date'] != '2011-02-11')&(df['Date'] != '2012-02-10'),'Super_Bowl'] = False","metadata":{"execution":{"iopub.status.busy":"2024-05-11T22:47:43.658702Z","iopub.execute_input":"2024-05-11T22:47:43.658959Z","iopub.status.idle":"2024-05-11T22:47:44.094479Z","shell.execute_reply.started":"2024-05-11T22:47:43.658930Z","shell.execute_reply":"2024-05-11T22:47:44.093668Z"},"trusted":true},"execution_count":25,"outputs":[]},{"cell_type":"code","source":"# Labor day dates in train set\ndf.loc[(df['Date'] == '2010-09-10')|(df['Date'] == '2011-09-09')|(df['Date'] == '2012-09-07'),'Labor_Day'] = True\ndf.loc[(df['Date'] != '2010-09-10')&(df['Date'] != '2011-09-09')&(df['Date'] != '2012-09-07'),'Labor_Day'] = False","metadata":{"execution":{"iopub.status.busy":"2024-05-11T22:47:44.095558Z","iopub.execute_input":"2024-05-11T22:47:44.095809Z","iopub.status.idle":"2024-05-11T22:47:44.531770Z","shell.execute_reply.started":"2024-05-11T22:47:44.095767Z","shell.execute_reply":"2024-05-11T22:47:44.530965Z"},"trusted":true},"execution_count":26,"outputs":[]},{"cell_type":"code","source":"# Thanksgiving dates in train set\ndf.loc[(df['Date'] == '2010-11-26')|(df['Date'] == '2011-11-25'),'Thanksgiving'] = True\ndf.loc[(df['Date'] != '2010-11-26')&(df['Date'] != '2011-11-25'),'Thanksgiving'] = False","metadata":{"execution":{"iopub.status.busy":"2024-05-11T22:47:44.532859Z","iopub.execute_input":"2024-05-11T22:47:44.533099Z","iopub.status.idle":"2024-05-11T22:47:44.870126Z","shell.execute_reply.started":"2024-05-11T22:47:44.533071Z","shell.execute_reply":"2024-05-11T22:47:44.869177Z"},"trusted":true},"execution_count":27,"outputs":[]},{"cell_type":"code","source":"#Christmas dates in train set\ndf.loc[(df['Date'] == '2010-12-31')|(df['Date'] == '2011-12-30'),'Christmas'] = True\ndf.loc[(df['Date'] != '2010-12-31')&(df['Date'] != '2011-12-30'),'Christmas'] = False","metadata":{"execution":{"iopub.status.busy":"2024-05-11T22:47:45.015917Z","iopub.execute_input":"2024-05-11T22:47:45.016208Z","iopub.status.idle":"2024-05-11T22:47:45.323912Z","shell.execute_reply.started":"2024-05-11T22:47:45.016178Z","shell.execute_reply":"2024-05-11T22:47:45.323252Z"},"trusted":true},"execution_count":28,"outputs":[]},{"cell_type":"code","source":"sns.barplot(x='Christmas', y='Weekly_Sales', data=df) # Christmas holiday vs not-Christmas","metadata":{"scrolled":true,"execution":{"iopub.status.busy":"2024-05-11T22:47:45.325038Z","iopub.execute_input":"2024-05-11T22:47:45.325305Z","iopub.status.idle":"2024-05-11T22:47:50.517706Z","shell.execute_reply.started":"2024-05-11T22:47:45.325270Z","shell.execute_reply":"2024-05-11T22:47:50.516980Z"},"trusted":true},"execution_count":29,"outputs":[{"execution_count":29,"output_type":"execute_result","data":{"text/plain":"<AxesSubplot:xlabel='Christmas', ylabel='Weekly_Sales'>"},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"<Figure size 432x288 with 1 Axes>","image/png":"\n"},"metadata":{"needs_background":"light"}}]},{"cell_type":"code","source":"sns.barplot(x='Thanksgiving', y='Weekly_Sales', data=df) # Thanksgiving holiday vs not-thanksgiving","metadata":{"execution":{"iopub.status.busy":"2024-05-11T22:47:50.519019Z","iopub.execute_input":"2024-05-11T22:47:50.519374Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"sns.barplot(x='Super_Bowl', y='Weekly_Sales', data=df) # Super bowl holiday vs not-super bowl","metadata":{"scrolled":true,"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"sns.barplot(x='Labor_Day', y='Weekly_Sales', data=df) # Labor day holiday vs not-labor day","metadata":{"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"It is shown that for the graphs, Labor Day and Christmas do not increase weekly average sales. There is positive effect on sales in Super bowl, but the highest difference is in the Thanksgiving. I think, people generally prefer to buy Christmas gifts 1-2 weeks before Christmas, so it does not change sales in the Christmas week. And, there is Black Friday sales in the Thanksgiving week.","metadata":{}},{"cell_type":"markdown","source":"# Type Effect on Holidays","metadata":{}},{"cell_type":"markdown","source":"There are three different store types in the data as A, B and C.","metadata":{}},{"cell_type":"code","source":"df.groupby(['Christmas','Type'])['Weekly_Sales'].mean()  # Avg weekly sales for types on Christmas ","metadata":{"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"df.groupby(['Labor_Day','Type'])['Weekly_Sales'].mean()  # Avg weekly sales for types on Labor Day","metadata":{"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"df.groupby(['Thanksgiving','Type'])['Weekly_Sales'].mean()  # Avg weekly sales for types on Thanksgiving","metadata":{"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"df.groupby(['Super_Bowl','Type'])['Weekly_Sales'].mean()  # Avg weekly sales for types on Super Bowl","metadata":{"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"I want to see percentages of store types.","metadata":{}},{"cell_type":"code","source":"my_data = [48.88, 37.77 , 13.33 ]  #percentages\nmy_labels = 'Type A','Type B', 'Type C' # labels\nplt.pie(my_data,labels=my_labels,autopct='%1.1f%%', textprops={'fontsize': 15}) #plot pie type and bigger the labels\nplt.axis('equal')\nmpl.rcParams.update({'font.size': 20}) #bigger percentage labels\n\nplt.show()","metadata":{"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"df.groupby('IsHoliday')['Weekly_Sales'].mean()","metadata":{"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"Nearly, half of the stores are belongs to Type A.","metadata":{}},{"cell_type":"code","source":"# Plotting avg wekkly sales according to holidays by types\nplt.style.use('seaborn-poster')\nlabels = ['Thanksgiving', 'Super_Bowl', 'Labor_Day', 'Christmas']\nA_means = [27397.77, 20612.75, 20004.26, 18310.16]\nB_means = [18733.97, 12463.41, 12080.75, 11483.97]\nC_means = [9696.56,10179.27,9893.45,8031.52]\n\nx = np.arange(len(labels))  # the label locations\nwidth = 0.25  # the width of the bars\n\nfig, ax = plt.subplots(figsize=(16, 8))\nrects1 = ax.bar(x - width, A_means, width, label='Type_A')\nrects2 = ax.bar(x , B_means, width, label='Type_B')\nrects3 = ax.bar(x + width, C_means, width, label='Type_C')\n\n# Add some text for labels, title and custom x-axis tick labels, etc.\nax.set_ylabel('Weekly Avg Sales')\nax.set_xticks(x)\nax.set_xticklabels(labels)\nax.legend()\n\n\ndef autolabel(rects):\n    \"\"\"Attach a text label above each bar in *rects*, displaying its height.\"\"\"\n    for rect in rects:\n        height = rect.get_height()\n        ax.annotate('{}'.format(height),\n                    xy=(rect.get_x() + rect.get_width() / 2, height),\n                    xytext=(0, 3),  # 3 points vertical offset\n                    textcoords=\"offset points\",\n                    ha='center', va='bottom')\n\n\nautolabel(rects1)\nautolabel(rects2)\nautolabel(rects3)\n\nplt.axhline(y=17094.30,color='r') # holidays avg\nplt.axhline(y=15952.82,color='green') # not-holiday avg\n\nfig.tight_layout()\n\nplt.show()","metadata":{"scrolled":true,"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"It is seen from the graph that, highest sale average is in the Thanksgiving week between holidays. And, for all holidays Type A stores has highest sales.","metadata":{}},{"cell_type":"code","source":"df.sort_values(by='Weekly_Sales',ascending=False).head(5)","metadata":{"scrolled":true,"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"Also, it is not surprise that top 5 highest weekly sales are belongs to Thanksgiving weeks.","metadata":{}},{"cell_type":"markdown","source":"# To See the Size - Type Relation","metadata":{}},{"cell_type":"code","source":"df_store.groupby('Type').describe()['Size'].round(2) # See the Size-Type relation","metadata":{"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"plt.figure(figsize=(10,8)) # To see the type-size relation\nfig = sns.boxplot(x='Type', y='Size', data=df, showfliers=False)","metadata":{"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"Size of the type of stores are consistent with sales, as expected. Higher size stores has higher sales. And, Walmart classify stores according to their sizes according to graph. After the smallest size value of Type A, Type B begins. After the smallest size value of Type B, Type C begins.","metadata":{}},{"cell_type":"markdown","source":"# Markdown Columns","metadata":{}},{"cell_type":"markdown","source":"Walmart gave markdown columns to see the effect if markdowns on sales. When I check columns, there are many NaN values for markdowns. I decided to change them with 0, because if there is markdown in the row, it is shown with numbres. So, if I can write 0, it shows there is no markdown at that date.","metadata":{}},{"cell_type":"code","source":"df.isna().sum()","metadata":{"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"df = df.fillna(0) # filling null's with 0","metadata":{"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"df.isna().sum() # last null check","metadata":{"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"df.describe() # to see weird statistical things","metadata":{"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"Minimum value for weekly sales is 0.01. Most probably, this value is not true but I prefer not to change them now. Because, there are many departments and many stores. It takes too much time to check each department for each store (45 store for 81 departments). So, I take averages for EDA. ","metadata":{}},{"cell_type":"markdown","source":"# Deeper Look in Sales","metadata":{}},{"cell_type":"code","source":"x = df['Dept']\ny = df['Weekly_Sales']\nplt.figure(figsize=(15,5))\nplt.title('Weekly Sales by Department')\nplt.xlabel('Departments')\nplt.ylabel('Weekly Sales')\nplt.scatter(x,y)\nplt.show()","metadata":{"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"plt.figure(figsize=(30,10))\nfig = sns.barplot(x='Dept', y='Weekly_Sales', data=df)","metadata":{"scrolled":true,"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"From the first graph, it is seen that one department between 60-80(I assume it is 72), has higher sales values. But, when we take the averages, it is seen that department 92 has higher mean sales. Department 72 is seasonal department, I think. It has higher values is some seasons but on average 92 is higher.","metadata":{}},{"cell_type":"code","source":"x = df['Store']\ny = df['Weekly_Sales']\nplt.figure(figsize=(15,5))\nplt.title('Weekly Sales by Store')\nplt.xlabel('Stores')\nplt.ylabel('Weekly Sales')\nplt.scatter(x,y)\nplt.show()","metadata":{"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"plt.figure(figsize=(20,6))\nfig = sns.barplot(x='Store', y='Weekly_Sales', data=df)","metadata":{"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"Same thing happens in stores. From the first graph, some stores has higher sales but on average store 20 is the best and 4 and 14 following it.","metadata":{}},{"cell_type":"markdown","source":"# Changing Date to Datetime and Creating New Columns","metadata":{}},{"cell_type":"code","source":"df[\"Date\"] = pd.to_datetime(df[\"Date\"]) # convert to datetime\ndf['week'] =df['Date'].dt.week\ndf['month'] =df['Date'].dt.month \ndf['year'] =df['Date'].dt.year","metadata":{"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"df.groupby('month')['Weekly_Sales'].mean() # to see the best months for sales","metadata":{"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"df.groupby('year')['Weekly_Sales'].mean() # to see the best years for sales","metadata":{"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"monthly_sales = pd.pivot_table(df, values = \"Weekly_Sales\", columns = \"year\", index = \"month\")\nmonthly_sales.plot()","metadata":{"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"From the graph, it is seen that 2011 has lower sales than 2010 generally. When we look at the mean sales it is seen that 2010 has higher values, but 2012 has no information about November and December which have higher sales. Despite of 2012 has no last two months sales, it's mean is near to 2010. Most probably, it will take the first place if we get 2012 results and add them.","metadata":{}},{"cell_type":"code","source":"\nfig = sns.barplot(x='month', y='Weekly_Sales', data=df)","metadata":{"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"When we look at the graph above, the best sales are in December and November, as expected. The highest values are belongs to Thankgiving holiday but when we take average it is obvious that December has the best value.","metadata":{}},{"cell_type":"code","source":"df.groupby('week')['Weekly_Sales'].mean().sort_values(ascending=False).head()","metadata":{"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"Top 5 sales averages by weekly belongs to 1-2 weeks before Christmas, Thanksgiving, Black Friday and end of May, when the schools are closed. ","metadata":{}},{"cell_type":"code","source":"weekly_sales = pd.pivot_table(df, values = \"Weekly_Sales\", columns = \"year\", index = \"week\")\nweekly_sales.plot()","metadata":{"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"plt.figure(figsize=(20,6))\nfig = sns.barplot(x='week', y='Weekly_Sales', data=df)","metadata":{"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"From graphs, it is seen that 51th week and 47th weeks have significantly higher averages as Christmas, Thankgiving and Black Friday effects.","metadata":{}},{"cell_type":"markdown","source":"# Fuel Price, CPI , Unemployment , Temperature Effects","metadata":{}},{"cell_type":"code","source":"fuel_price = pd.pivot_table(df, values = \"Weekly_Sales\", index= \"Fuel_Price\")\nfuel_price.plot()","metadata":{"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"temp = pd.pivot_table(df, values = \"Weekly_Sales\", index= \"Temperature\")\ntemp.plot()","metadata":{"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"CPI = pd.pivot_table(df, values = \"Weekly_Sales\", index= \"CPI\")\nCPI.plot()","metadata":{"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"unemployment = pd.pivot_table(df, values = \"Weekly_Sales\", index= \"Unemployment\")\nunemployment.plot()","metadata":{"scrolled":true,"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"From graphs, it is seen that there are no significant patterns between CPI, temperature, unemployment rate, fuel price vs weekly sales. There is no data for CPI between 140-180 also.","metadata":{}},{"cell_type":"code","source":"df.to_csv('clean_data.csv') # assign new data frame to csv for using after here","metadata":{"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"# Findings and Explorations","metadata":{}},{"cell_type":"markdown","source":"# Cleaning Process","metadata":{}},{"cell_type":"markdown","source":"- The data has no too much missing values. All columns was checked. \n- I choose rows which has higher than 0 weekly sales. Minus values are 0.3% of data. So, I dropped them.\n- Null values in markdowns changed to zero. Because, they were written as null if there were no markdown on this department. ","metadata":{}},{"cell_type":"markdown","source":"# Explorations & Findings","metadata":{}},{"cell_type":"markdown","source":"- There are 45 stores and 81 department in data. Departments are not same in all stores. \n- Although department 72 has higher weekly sales values, on average department 92 is the best. It shows us, some departments has higher values as seasonal like Thanksgiving. It is consistant when we look at the top 5 sales in data, all of them belongs to 72th department at Thanksgiving holiday time. \n- Although stores 10 and 35 have higher weekly sales values sometimes, in general average store 20 and store 4 are on the first and second rank. It means that some areas has higher seasonal sales. \n- Stores has 3 types as A, B and C according to their sizes. Almost half of the stores are bigger than 150000 and categorized as A. According to type, sales of the stores are changing.\n- As expected, holiday average sales are higher than normal dates.\n- Christmas holiday introduces as the last days of the year. But people generally shop at 51th week. So, when we look at the total sales of holidays, Thankgiving has higher sales between them which was assigned by Walmart.\n- Year 2010 has higher sales than 2011 and 2012. But, November and December sales are not in the data for 2012. Even without highest sale months, 2012 is not significantly less than 2010, so after adding last two months, it can be first.\n- It is obviously seen that week 51 and 47 have higher values and 50-48 weeks follow them. Interestingly, 5th top sales belongs to 22th week of the year. This results show that Christmas, Thankgiving and Black Friday are very important than other weeks for sales and 5th important time is 22th week of the year and it is end of the May, when schools are closed. Most probably, people are preparing for holiday at the end of the May. \n- January sales are significantly less than other months. This is the result of November and December high sales. After two high sales month, people prefer to pay less on January.\n- CPI, temperature, unemployment rate and fuel price have no pattern on weekly sales. \n","metadata":{}},{"cell_type":"markdown","source":"# First Trial with Random Forest","metadata":{}},{"cell_type":"markdown","source":"Generally, Rondom Forest Regressor gives good results when we tune it well. So, to find simple baseline model, I will use RandomForestRegressor in this notebook. Also, feature importance for model can be found in this notebook. \n\nOur metric for this project is weighted mean absolute error (WMAE):","metadata":{}},{"cell_type":"markdown","source":"![title](https://miro.medium.com/max/990/1*VKYKK85ViLYUUjyOWVURfw.jpeg)","metadata":{}},{"cell_type":"markdown","source":"where\n\n- n is the number of rows\n- ŷ i is the predicted sales\n- yi is the actual sales\n- wi are weights. w = 5 if the week is a holiday week, 1 otherwise","metadata":{}},{"cell_type":"markdown","source":"With this metric, the error at holiday weeks has 5 times weight more than normal weeks. So, it is more important to predict sales at holiday weeks accurately.\nAll results for trails can be found at the end of this notebook.","metadata":{}},{"cell_type":"code","source":"pd.options.display.max_columns=100 # to see columns ","metadata":{"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"df = pd.read_csv('./clean_data.csv')","metadata":{"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"df.drop(columns=['Unnamed: 0'],inplace=True)","metadata":{"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"df['Date'] = pd.to_datetime(df['Date']) # changing datetime to divide if needs","metadata":{"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"# Encoding the Data ","metadata":{}},{"cell_type":"markdown","source":"For preprocessing our data, I will change holidays boolean values to 0-1 and replace type of the stores from A, B, C to 1, 2, 3. ","metadata":{}},{"cell_type":"code","source":"df_encoded = df.copy() # to keep original dataframe taking copy of it","metadata":{"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"type_group = {'A':1, 'B': 2, 'C': 3}  # changing A,B,C to 1-2-3\ndf_encoded['Type'] = df_encoded['Type'].replace(type_group)","metadata":{"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"df_encoded['Super_Bowl'] = df_encoded['Super_Bowl'].astype(bool).astype(int) # changing T,F to 0-1","metadata":{"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"df_encoded['Thanksgiving'] = df_encoded['Thanksgiving'].astype(bool).astype(int) # changing T,F to 0-1","metadata":{"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"df_encoded['Labor_Day'] = df_encoded['Labor_Day'].astype(bool).astype(int) # changing T,F to 0-1","metadata":{"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"df_encoded['Christmas'] = df_encoded['Christmas'].astype(bool).astype(int) # changing T,F to 0-1","metadata":{"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"df_encoded['IsHoliday'] = df_encoded['IsHoliday'].astype(bool).astype(int) # changing T,F to 0-1","metadata":{"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"df_new = df_encoded.copy() # taking the copy of encoded df to keep it original","metadata":{"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"# Observation of Interactions between Features","metadata":{}},{"cell_type":"markdown","source":"Firstly, i will drop divided holiday columns from my data and try without them. To keep my encoded data safe, I assigned my dataframe to new one and I will use for this. ","metadata":{}},{"cell_type":"code","source":"drop_col = ['Super_Bowl','Labor_Day','Thanksgiving','Christmas']\ndf_new.drop(drop_col, axis=1, inplace=True) # dropping columns","metadata":{"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"plt.figure(figsize = (12,10))\nsns.heatmap(df_new.corr().abs())    # To see the correlations\nplt.show()","metadata":{"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"Temperature, unemployment, CPI have no significant effect on weekly sales, so I will drop them. Also, Markdown 4 and 5 highly correlated with Markdown 1. So, I will drop them also. It can create multicollinearity problem, maybe. So, first I will try without them.","metadata":{}},{"cell_type":"code","source":"drop_col = ['Temperature','MarkDown4','MarkDown5','CPI','Unemployment']\ndf_new.drop(drop_col, axis=1, inplace=True) # dropping columns","metadata":{"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"plt.figure(figsize = (12,10))\nsns.heatmap(df_new.corr().abs())    # To see the correlations without dropping columns\nplt.show()","metadata":{"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"Size and type are highly correlated with weekly sales. Also, department and store are correlated with sales.","metadata":{}},{"cell_type":"code","source":"df_new = df_new.sort_values(by='Date', ascending=True) # sorting according to date","metadata":{"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"# Creating Train-Test Splits","metadata":{}},{"cell_type":"markdown","source":"Our date column has continuos values, to keep the date features continue, I will not take random splitting. so, I split data manually according to 70%.","metadata":{}},{"cell_type":"code","source":"train_data = df_new[:int(0.7*(len(df_new)))] # taking train part\ntest_data = df_new[int(0.7*(len(df_new))):] # taking test part\n\ntarget = \"Weekly_Sales\"\nused_cols = [c for c in df_new.columns.to_list() if c not in [target]] # all columns except weekly sales\n\nX_train = train_data[used_cols]\nX_test = test_data[used_cols]\ny_train = train_data[target]\ny_test = test_data[target]","metadata":{"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"X = df_new[used_cols] # to keep train and test X values together","metadata":{"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"We have enough information in our date such as week of the year. So, I drop date columns.","metadata":{}},{"cell_type":"code","source":"X_train = X_train.drop(['Date'], axis=1) # dropping date from train\nX_test = X_test.drop(['Date'], axis=1) # dropping date from test","metadata":{"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"# Metric Definition Function","metadata":{}},{"cell_type":"markdown","source":"Our metric is not calculated as default from ready models. It is weighed error so, I will use function below to calculate it.","metadata":{}},{"cell_type":"code","source":"def wmae_test(test, pred): # WMAE for test \n    weights = X_test['IsHoliday'].apply(lambda is_holiday:5 if is_holiday else 1)\n    error = np.sum(weights * np.abs(test - pred), axis=0) / np.sum(weights)\n    return error","metadata":{"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"# Random Forest Regressor","metadata":{}},{"cell_type":"markdown","source":"To tune the regressor, I can use gridsearch but it takes too much time for this type of data which has many rows and columns. So, I choose regressor parameters manually. I changed the parameters each time and try to find the best result.","metadata":{}},{"cell_type":"code","source":"rf = RandomForestRegressor(n_estimators=50, random_state=42, n_jobs=-1, max_depth=35,\n                           max_features = 'sqrt',min_samples_split = 10)\n\nfrom sklearn.preprocessing import RobustScaler\nscaler = RobustScaler()\n\n\n\n#making pipe tp use scaler and regressor together\npipe = make_pipeline(scaler,rf)\n\npipe.fit(X_train, y_train)\n\n# predictions on train set\ny_pred = pipe.predict(X_train)\n\n# predictions on test set\ny_pred_test = pipe.predict(X_test)","metadata":{"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"wmae_test(y_test, y_pred_test)","metadata":{"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"For the first trial, my weighted error is around 5850.","metadata":{}},{"cell_type":"markdown","source":"# To See Feature Importance","metadata":{}},{"cell_type":"code","source":"X = X.drop(['Date'], axis=1) #dropping date column from X","metadata":{"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"Below code cell was taken from our instructor Bryan Arnold's notebook. I changed the code according to my data and see the plot.","metadata":{}},{"cell_type":"code","source":"importances = rf.feature_importances_\nstd = np.std([tree.feature_importances_ for tree in rf.estimators_],\n             axis=0)\nindices = np.argsort(importances)[::-1]\n\n# Printing the feature ranking\nprint(\"Feature ranking:\")\n\nfor f in range(X.shape[1]):\n    print(\"%d. feature %d (%f)\" % (f + 1, indices[f], importances[indices[f]]))\n\n# Plotting the feature importances of the forest\nplt.figure()\nplt.title(\"Feature importances\")\nplt.bar(range(X.shape[1]), importances[indices],\n       color=\"r\", yerr=std[indices], align=\"center\")\nplt.xticks(range(X.shape[1]), indices)\nplt.xlim([-1, X.shape[1]])\nplt.show()","metadata":{"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"After looking feature importance, I dropped least important 3-4 features and tried the model. I found the best result when I dropped month column which is highly correlated with week.","metadata":{}},{"cell_type":"code","source":"X1_train = X_train.drop(['month'], axis=1) # dropping month\nX1_test = X_test.drop(['month'], axis=1)","metadata":{"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"# Model Again without Month","metadata":{}},{"cell_type":"code","source":"rf = RandomForestRegressor(n_estimators=50, random_state=42, n_jobs=-1, max_depth=35,\n                           max_features = 'sqrt',min_samples_split = 10)\n\nscaler=RobustScaler()\npipe = make_pipeline(scaler,rf)\n\npipe.fit(X1_train, y_train)\n\n# predictions on train set\ny_pred = pipe.predict(X1_train)\n\n# predictions on test set\ny_pred_test = pipe.predict(X1_test)","metadata":{"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"wmae_test(y_test, y_pred_test)","metadata":{"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"It gives better results than baseline.","metadata":{}},{"cell_type":"markdown","source":"# Model with Whole Data","metadata":{}},{"cell_type":"markdown","source":"Now, I want to make sure that my model will learn from the columns which I dropped or not. So, I will apply my model to whole encoded data again.","metadata":{}},{"cell_type":"code","source":"# splitting train-test to whole dataset\ntrain_data_enc = df_encoded[:int(0.7*(len(df_encoded)))]\ntest_data_enc = df_encoded[int(0.7*(len(df_encoded))):]\n\ntarget = \"Weekly_Sales\"\nused_cols1 = [c for c in df_encoded.columns.to_list() if c not in [target]] # all columns except price\n\nX_train_enc = train_data_enc[used_cols1]\nX_test_enc = test_data_enc[used_cols1]\ny_train_enc = train_data_enc[target]\ny_test_enc = test_data_enc[target]","metadata":{"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"X_enc = df_encoded[used_cols1] # to get together train,test splits","metadata":{"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"X_enc = X_enc.drop(['Date'], axis=1) #dropping date column for whole X","metadata":{"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"X_train_enc = X_train_enc.drop(['Date'], axis=1) # dropping date from train and test\nX_test_enc= X_test_enc.drop(['Date'], axis=1)","metadata":{"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"rf = RandomForestRegressor(n_estimators=50, random_state=42, n_jobs=-1, max_depth=35,\n                           max_features = 'sqrt',min_samples_split = 10)\n\nscaler=RobustScaler()\npipe = make_pipeline(scaler,rf)\n\npipe.fit(X_train_enc, y_train_enc)\n\n# predictions on train set\ny_pred_enc = pipe.predict(X_train_enc)\n\n# predictions on test set\ny_pred_test_enc = pipe.predict(X_test_enc)","metadata":{"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"wmae_test(y_test_enc, y_pred_test_enc)","metadata":{"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"We found better results for whole data, it means our model can learn from columns which I dropped before.","metadata":{}},{"cell_type":"markdown","source":"# Feature Importance for Whole Encoded Dataset","metadata":{}},{"cell_type":"code","source":"importances = rf.feature_importances_\nstd = np.std([tree.feature_importances_ for tree in rf.estimators_],\n             axis=0)\nindices = np.argsort(importances)[::-1]\n\n# Printing the feature ranking\nprint(\"Feature ranking:\")\n\nfor f in range(X_enc.shape[1]):\n    print(\"%d. feature %d (%f)\" % (f + 1, indices[f], importances[indices[f]]))\n\n# Plotting the feature importances of the forest\nplt.figure()\nplt.title(\"Feature importances\")\nplt.bar(range(X_enc.shape[1]), importances[indices],\n       color=\"r\", yerr=std[indices], align=\"center\")\nplt.xticks(range(X_enc.shape[1]), indices)\nplt.xlim([-1, X_enc.shape[1]])\nplt.show()","metadata":{"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"According to feature importance, I dropped some columns from whole set and try my model again.","metadata":{}},{"cell_type":"code","source":"df_encoded_new = df_encoded.copy() # taking copy of encoded data to keep it without change.\ndf_encoded_new.drop(drop_col, axis=1, inplace=True)","metadata":{"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"# Model According to Feature Importance","metadata":{}},{"cell_type":"code","source":"#train-test splitting\ntrain_data_enc_new = df_encoded_new[:int(0.7*(len(df_encoded_new)))]\ntest_data_enc_new = df_encoded_new[int(0.7*(len(df_encoded_new))):]\n\ntarget = \"Weekly_Sales\"\nused_cols2 = [c for c in df_encoded_new.columns.to_list() if c not in [target]] # all columns except price\n\nX_train_enc1 = train_data_enc_new[used_cols2]\nX_test_enc1 = test_data_enc_new[used_cols2]\ny_train_enc1 = train_data_enc_new[target]\ny_test_enc1 = test_data_enc_new[target]\n\n#droping date from train-test\nX_train_enc1 = X_train_enc1.drop(['Date'], axis=1)\nX_test_enc1= X_test_enc1.drop(['Date'], axis=1)","metadata":{"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"rf = RandomForestRegressor(n_estimators=50, random_state=42, n_jobs=-1, max_depth=40,\n                           max_features = 'log2',min_samples_split = 10)\n\nscaler=RobustScaler()\npipe = make_pipeline(scaler,rf)\n\npipe.fit(X_train_enc1, y_train_enc1)\n\n# predictions on train set\ny_pred_enc = pipe.predict(X_train_enc1)\n\n# predictions on test set\ny_pred_test_enc = pipe.predict(X_test_enc1)","metadata":{"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"pipe.score(X_test_enc1,y_test_enc1)","metadata":{"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"wmae_test(y_test_enc1, y_pred_test_enc)","metadata":{"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"I found best results with doing feature selection from whole encoded dataset.","metadata":{}},{"cell_type":"markdown","source":"# Model with Dropping Month Column","metadata":{}},{"cell_type":"markdown","source":"With the same dateset before, I try to model again without month column. ","metadata":{}},{"cell_type":"code","source":"df_encoded_new1 = df_encoded.copy()\ndf_encoded_new1.drop(drop_col, axis=1, inplace=True)","metadata":{"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"df_encoded_new1 = df_encoded_new1.drop(['Date'], axis=1)","metadata":{"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"df_encoded_new1 = df_encoded_new1.drop(['month'], axis=1)","metadata":{"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"#train-test split\ntrain_data_enc_new1 = df_encoded_new1[:int(0.7*(len(df_encoded_new1)))]\ntest_data_enc_new1 = df_encoded_new1[int(0.7*(len(df_encoded_new1))):]\n\ntarget = \"Weekly_Sales\"\nused_cols3 = [c for c in df_encoded_new1.columns.to_list() if c not in [target]] # all columns except price\n\nX_train_enc2 = train_data_enc_new1[used_cols3]\nX_test_enc2 = test_data_enc_new1[used_cols3]\ny_train_enc2 = train_data_enc_new1[target]\ny_test_enc2 = test_data_enc_new1[target]","metadata":{"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"#modeling part\npipe = make_pipeline(scaler,rf)\n\npipe.fit(X_train_enc2, y_train_enc2)\n\n# predictions on train set\ny_pred_enc = pipe.predict(X_train_enc2)\n\n# predictions on test set\ny_pred_test_enc = pipe.predict(X_test_enc2)","metadata":{"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"pipe.score(X_test_enc2,y_test_enc2)","metadata":{"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"wmae_test(y_test_enc2, y_pred_test_enc)","metadata":{"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"It did not give better results than before.","metadata":{}},{"cell_type":"code","source":"df_results = pd.DataFrame(columns=[\"Model\", \"Info\",'WMAE']) # result df for showing results together","metadata":{"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"# writing results to df\ndf_results = df_results.append({     \n     \"Model\": 'RandomForestRegressor' ,\n      \"Info\": 'w/out divided holiday columns' , \n       'WMAE' : 5850}, ignore_index=True)","metadata":{"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"df_results = df_results.append({     \n     \"Model\": 'RandomForestRegressor' ,\n      \"Info\": 'w/out month column' , \n       'WMAE' : 5494}, ignore_index=True)\ndf_results = df_results.append({     \n     \"Model\": 'RandomForestRegressor' ,\n      \"Info\": 'whole data' , \n       'WMAE' : 2450}, ignore_index=True)\ndf_results = df_results.append({     \n     \"Model\": 'RandomForestRegressor' ,\n      \"Info\": 'whole data with feature selection' , \n       'WMAE' : 1801}, ignore_index=True)\ndf_results = df_results.append({     \n     \"Model\": 'RandomForestRegressor' ,\n      \"Info\": 'whole data with feature selection w/out month' , \n       'WMAE' : 2093}, ignore_index=True)","metadata":{"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"df_results","metadata":{"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"The best results belongs to whole data set with feature selection. Now, I will try time series models.","metadata":{}},{"cell_type":"markdown","source":"# Time Series Models","metadata":{}},{"cell_type":"code","source":"df.head() # to see my data","metadata":{"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"df[\"Date\"] = pd.to_datetime(df[\"Date\"]) #changing data to datetime for decomposing","metadata":{"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"df.set_index('Date', inplace=True) #seting date as index","metadata":{"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"# Plotting Sales","metadata":{}},{"cell_type":"code","source":"plt.figure(figsize=(16,6))\ndf['Weekly_Sales'].plot()\nplt.show()","metadata":{"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"In this data, there are lots of same data values. So, I will collect them together as weekly.","metadata":{}},{"cell_type":"code","source":"df_week = df.resample('W').mean() #resample data as weekly","metadata":{"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"plt.figure(figsize=(16,6))\ndf_week['Weekly_Sales'].plot()\nplt.title('Average Sales - Weekly')\nplt.show()","metadata":{"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"With the collecting data as weekly, I can see average sales clearly. To see monthly pattern , I resampled my data to monthly also.","metadata":{}},{"cell_type":"code","source":"df_month = df.resample('MS').mean() # resampling as monthly","metadata":{"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"plt.figure(figsize=(16,6))\ndf_month['Weekly_Sales'].plot()\nplt.title('Average Sales - Monthly')\nplt.show()","metadata":{"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"When I turned data to monthly, I realized that I lost some patterns in weekly data. So, I will continue with weekly resampled data.","metadata":{}},{"cell_type":"markdown","source":"# To Observe 2-weeks Rolling Mean and Std","metadata":{}},{"cell_type":"markdown","source":"My data is non-stationary. So, I will try to find more stationary version on it. ","metadata":{}},{"cell_type":"code","source":"# finding 2-weeks rolling mean and std\nroll_mean = df_week['Weekly_Sales'].rolling(window=2, center=False).mean()\nroll_std = df_week['Weekly_Sales'].rolling(window=2, center=False).std()","metadata":{"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"fig, ax = plt.subplots(figsize=(13, 6))\nax.plot(df_week['Weekly_Sales'], color='blue',label='Average Weekly Sales')\nax.plot(roll_mean, color='red', label='Rolling 2-Week Mean')\nax.plot(roll_std, color='black', label='Rolling 2-Week Standard Deviation')\nax.legend()\nfig.tight_layout()","metadata":{"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"# Adfuller Test to Make Sure","metadata":{}},{"cell_type":"code","source":"adfuller(df_week['Weekly_Sales'])","metadata":{"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"From test and my observations my data is not stationary. So, I will try to find more stationary version of it.","metadata":{}},{"cell_type":"markdown","source":"# Train - Test Split of Weekly Data","metadata":{}},{"cell_type":"markdown","source":"To take train-test splits continuosly, I split them manually, not random.","metadata":{}},{"cell_type":"code","source":"train_data = df_week[:int(0.7*(len(df_week)))] \ntest_data = df_week[int(0.7*(len(df_week))):]\n\nprint('Train:', train_data.shape)\nprint('Test:', test_data.shape)","metadata":{"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"target = \"Weekly_Sales\"\nused_cols = [c for c in df_week.columns.to_list() if c not in [target]] # all columns except price\n\n# assigning train-test X-y values\n\nX_train = train_data[used_cols]\nX_test = test_data[used_cols]\ny_train = train_data[target]\ny_test = test_data[target]","metadata":{"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"train_data['Weekly_Sales'].plot(figsize=(20,8), title= 'Weekly_Sales', fontsize=14)\ntest_data['Weekly_Sales'].plot(figsize=(20,8), title= 'Weekly_Sales', fontsize=14)\nplt.show()","metadata":{"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"Blue line represents my train data, yellow is test data.","metadata":{}},{"cell_type":"markdown","source":"# Decomposing Weekly Data to Observe Seasonality","metadata":{}},{"cell_type":"code","source":"decomposed = decompose(df_week['Weekly_Sales'].values, 'additive', m=20) #decomposing of weekly data ","metadata":{"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"decomposed_plot(decomposed, figure_kwargs={'figsize': (16, 10)})\nplt.show()","metadata":{"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"From the graphs above, every 20 step seasonality converges to beginning point. This helps me to tune my model.","metadata":{}},{"cell_type":"markdown","source":"# Trying To Make Data More Stationary","metadata":{}},{"cell_type":"markdown","source":"Now, I will try to make my data more stationary. To do this, I will try model with differenced, logged and shifted data.","metadata":{}},{"cell_type":"markdown","source":"## 1. Difference","metadata":{}},{"cell_type":"code","source":"df_week_diff = df_week['Weekly_Sales'].diff().dropna() #creating difference values","metadata":{"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"# taking mean and std of differenced data\ndiff_roll_mean = df_week_diff.rolling(window=2, center=False).mean()\ndiff_roll_std = df_week_diff.rolling(window=2, center=False).std()","metadata":{"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"fig, ax = plt.subplots(figsize=(13, 6))\nax.plot(df_week_diff, color='blue',label='Difference')\nax.plot(diff_roll_mean, color='red', label='Rolling Mean')\nax.plot(diff_roll_std, color='black', label='Rolling Standard Deviation')\nax.legend()\nfig.tight_layout()","metadata":{"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"## 2.Shift","metadata":{}},{"cell_type":"code","source":"df_week_lag = df_week['Weekly_Sales'].shift().dropna() #shifting the data ","metadata":{"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"lag_roll_mean = df_week_lag.rolling(window=2, center=False).mean() \nlag_roll_std = df_week_lag.rolling(window=2, center=False).std()","metadata":{"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"fig, ax = plt.subplots(figsize=(13, 6))\nax.plot(df_week_lag, color='blue',label='Difference')\nax.plot(lag_roll_mean, color='red', label='Rolling Mean')\nax.plot(lag_roll_std, color='black', label='Rolling Standard Deviation')\nax.legend()\nfig.tight_layout()","metadata":{"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"## 3.Log","metadata":{}},{"cell_type":"code","source":"logged_week = np.log1p(df_week['Weekly_Sales']).dropna() #taking log of data","metadata":{"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"log_roll_mean = logged_week.rolling(window=2, center=False).mean()\nlog_roll_std = logged_week.rolling(window=2, center=False).std()","metadata":{"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"fig, ax = plt.subplots(figsize=(13, 6))\nax.plot(logged_week, color='blue',label='Logged')\nax.plot(log_roll_mean, color='red', label='Rolling Mean')\nax.plot(log_roll_std, color='black', label='Rolling Standard Deviation')\nax.legend()\nfig.tight_layout()","metadata":{"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"# Auto-ARIMA MODEL","metadata":{}},{"cell_type":"markdown","source":"I tried my data without any changes, then tried with shifting, taking log and difference version of data. Differenced data gave best results. So, I decided to take difference and use this data. ","metadata":{}},{"cell_type":"markdown","source":"# Train-Test Split","metadata":{}},{"cell_type":"code","source":"train_data_diff = df_week_diff [:int(0.7*(len(df_week_diff )))]\ntest_data_diff = df_week_diff [int(0.7*(len(df_week_diff ))):]","metadata":{"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"# train_data = train_data['Weekly_Sales']\n# test_data = test_data['Weekly_Sales']\n\nmodel_auto_arima = auto_arima(train_data_diff, trace=True,start_p=0, start_q=0, start_P=0, start_Q=0,\n                  max_p=20, max_q=20, max_P=20, max_Q=20, seasonal=True,maxiter=200,\n                  information_criterion='aic',stepwise=False, suppress_warnings=True, D=1, max_D=10,\n                  error_action='ignore',approximation = False)\nmodel_auto_arima.fit(train_data_diff)","metadata":{"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"y_pred = model_auto_arima.predict(n_periods=len(test_data_diff))\ny_pred = pd.DataFrame(y_pred,index = test_data.index,columns=['Prediction'])\nplt.figure(figsize=(20,6))\nplt.title('Prediction of Weekly Sales Using Auto-ARIMA', fontsize=20)\nplt.plot(train_data_diff, label='Train')\nplt.plot(test_data_diff, label='Test')\nplt.plot(y_pred, label='Prediction of ARIMA')\nplt.legend(loc='best')\nplt.xlabel('Date', fontsize=14)\nplt.ylabel('Weekly Sales', fontsize=14)\nplt.show()","metadata":{"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"I do not like the pattern of predictions so I decided to try another model.","metadata":{}},{"cell_type":"markdown","source":"# ExponentialSmoothing","metadata":{}},{"cell_type":"markdown","source":"I checked suitable Holt-Winters models according tp my data. Exponential Smooting are used when data has trend, and it flattens the trend. The damped trend method adds a damping parameter so, the trend converges to a constant value in the future. ","metadata":{}},{"cell_type":"markdown","source":"My difference data has some minus and zero values, so I used additive seasonal and trend instead of multiplicative. Seasonal periods are chosen from the decomposed graphs above. For tuning the model with iterations take too much time so, I changed and tried model for different parameters and found the best parameters and fitted them to model.","metadata":{}},{"cell_type":"code","source":"model_holt_winters = ExponentialSmoothing(train_data_diff, seasonal_periods=20, seasonal='additive',\n                                           trend='additive',damped=True).fit() #Taking additive trend and seasonality.\ny_pred = model_holt_winters.forecast(len(test_data_diff))# Predict the test data\n\n#Visualize train, test and predicted data.\nplt.figure(figsize=(20,6))\nplt.title('Prediction of Weekly Sales using ExponentialSmoothing', fontsize=20)\nplt.plot(train_data_diff, label='Train')\nplt.plot(test_data_diff, label='Test')\nplt.plot(y_pred, label='Prediction using ExponentialSmoothing')\nplt.legend(loc='best')\nplt.xlabel('Date', fontsize=14)\nplt.ylabel('Weekly Sales', fontsize=14)\nplt.show()\n","metadata":{"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"wmae_test(test_data_diff, y_pred)","metadata":{"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"At the end, I found best results for my data with Exponential Smoothing Model.","metadata":{}},{"cell_type":"markdown","source":"My best result for this project is 821. According to sales amounts this value is roughly around 4-5% error. If we can take our average sales and take percentage of 821 errors, it gives 4-5% roughly. ","metadata":{}}]}